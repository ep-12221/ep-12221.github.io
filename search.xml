<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>CODEFORCES ROUND 913 DIV.3</title>
    <url>/2023/12/06/div3/</url>
    <content><![CDATA[<h1 id="codeforces-round-913-div.3">CODEFORCES ROUND 913 DIV.3</h1>
<h2 id="第一次的cf-rated赛">第一次的cf rated赛</h2>
<p>打得依托构思</p>
<hr />
<h2 id="a.rook">A.ROOK</h2>
<p><strong><em>给出国际象棋中的车在棋盘中的棋谱位置，求出其能移动到的所有地方。</em></strong></p>
<p>水模拟</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#include &lt;algorithm&gt;</span><br><span class="line">#include &lt;cmath&gt;</span><br><span class="line">#include &lt;cstring&gt;</span><br><span class="line">#include &lt;iostream&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">#define int long long</span><br><span class="line">// int a[100001];</span><br><span class="line">int t;</span><br><span class="line">signed main() &#123;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    while (t--) &#123;</span><br><span class="line">        string s;</span><br><span class="line">        cin &gt;&gt; s;</span><br><span class="line">        for (int i = 1; i &lt;= 8; i++) &#123;</span><br><span class="line">            if (i == s[1] - &#x27;0&#x27;)</span><br><span class="line">                continue;</span><br><span class="line">            cout &lt;&lt; s[0] &lt;&lt; i &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">        for (int i = 0; i &lt; 8; i++) &#123;</span><br><span class="line">            if (i == s[0] - &#x27;a&#x27;)</span><br><span class="line">                continue;</span><br><span class="line">            cout &lt;&lt; char(i + &#x27;a&#x27;) &lt;&lt; s[1] &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<hr />
<h2 id="b.yetnotherrokenkeoard">B.YetnotherrokenKeoard</h2>
<p><strong><em>给出几串输入字符串，当按下“b”键时，删除键入的字符串中最后一个（最右边）小写字母。如果键入的字符串中没有小写字母，则完全忽略按键。</em></strong></p>
<p><strong><em>"B"同理。</em></strong></p>
<p>用两个栈分别维护大小写字母即可。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#include &lt;algorithm&gt;</span><br><span class="line">#include &lt;cmath&gt;</span><br><span class="line">#include &lt;cstring&gt;</span><br><span class="line">#include &lt;iostream&gt;</span><br><span class="line">#include &lt;stack&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">#define int long long</span><br><span class="line">// int a[100001];</span><br><span class="line">int t;</span><br><span class="line">int m[1000010];</span><br><span class="line">stack&lt;int&gt; upper;</span><br><span class="line">stack&lt;int&gt; lower;</span><br><span class="line">signed main() &#123;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    while (t--) &#123;</span><br><span class="line">        string s;</span><br><span class="line">        cin &gt;&gt; s;</span><br><span class="line">        for (int i = 0; i &lt; s.length(); i++) &#123;</span><br><span class="line">            if (s[i] != &#x27;b&#x27; &amp;&amp; s[i] != &#x27;B&#x27;) &#123;</span><br><span class="line">                if (isupper(s[i]))</span><br><span class="line">                    upper.push(i);</span><br><span class="line">                else if (islower(s[i]))</span><br><span class="line">                    lower.push(i);</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                if (!lower.empty() &amp;&amp; s[i] == &#x27;b&#x27;)</span><br><span class="line">                    lower.pop();</span><br><span class="line">                else if (!upper.empty() &amp;&amp; s[i] == &#x27;B&#x27;)</span><br><span class="line">                    upper.pop();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        while (!upper.empty()) &#123;</span><br><span class="line">            m[upper.top()] = 1;</span><br><span class="line">            upper.pop();</span><br><span class="line">        &#125;</span><br><span class="line">        while (!lower.empty()) &#123;</span><br><span class="line">            m[lower.top()] = 1;</span><br><span class="line">            lower.pop();</span><br><span class="line">        &#125;</span><br><span class="line">        for (int i = 0; i &lt; s.length(); i++) &#123;</span><br><span class="line">            if (m[i])</span><br><span class="line">                cout &lt;&lt; s[i], m[i] = 0;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<hr />
<h2 id="c.removal-of-unattractive-pairs">C.Removal of Unattractive
Pairs</h2>
<p><strong><em>给出几串字符串，若某相邻的两个字符不同，则可以将它们从字符串中移除，求出每个字符串能达到的最小长度。</em></strong></p>
<p><strong>引理：若两个字符串除了排列顺序以外其余因素完全相同，则该两个字符串的最小长度及其对应的排列相同。</strong></p>
<p>证明：考虑归纳证明，设 $a_i $为长度为 $i $的字符串 $a
$所能达到的最小长度对应的字符串。</p>
<p>当 $n=1,2 $时显然成立；</p>
<p>假设当 $n=k
$时成立，最平凡的情况即为每个字符相等，这种情况的正确性是显然的。假若非平凡，则有
$a_{k}=b_{k} $，其中 $b $为除 $a $以外的任意一种排列。当 $n=k+1 $时，对
$a,b $增添的字母必然一致，设为 $s $。考虑到 $a $的任意性，不妨让 $a
$在其左端添上 $s $成为 $sa
$，（这是因为若需要在中间插入，则可以由另外一串字符串来证明），那么对 $b
$可以进行任意变换，使 $sa = b's $，则根据 $nk $的假设，引理得证。 $$</p>
<p>那么我们可以将每个字符串重排成一种形状：左端放满其包含最多的字符串，其余放在右端
$ LLLLLLx_1x_2$</p>
<p>那么我们可以从中间开始消消乐，关于最小长度的结论就是显然的了。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#include &lt;algorithm&gt;</span><br><span class="line">#include &lt;cmath&gt;</span><br><span class="line">#include &lt;cstring&gt;</span><br><span class="line">#include &lt;deque&gt;</span><br><span class="line">#include &lt;iostream&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">#define int long long</span><br><span class="line">// int a[100001];</span><br><span class="line">int m[30];</span><br><span class="line">int t;</span><br><span class="line">deque&lt;char&gt; p;</span><br><span class="line">signed main() &#123;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    while (t--) &#123;</span><br><span class="line">        int n;</span><br><span class="line">        cin &gt;&gt; n;</span><br><span class="line">        string s;</span><br><span class="line">        cin &gt;&gt; s;</span><br><span class="line">        for (int i = 0; i &lt; n; i++) &#123;</span><br><span class="line">            m[s[i] - &#x27;a&#x27;]++;</span><br><span class="line">        &#125;</span><br><span class="line">        int tmp = 0;</span><br><span class="line">        for (int i = 0; i &lt;= 26; i++) &#123;</span><br><span class="line">            tmp = max(tmp, m[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        if (n % 2) &#123;</span><br><span class="line">            if ((n + 1) / 2  &lt;= tmp)</span><br><span class="line">                cout &lt;&lt; 2 * (tmp - (n + 1) / 2) + 1 &lt;&lt; endl;</span><br><span class="line">            else</span><br><span class="line">                cout &lt;&lt; 1 &lt;&lt; endl;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            if ((n) / 2  &lt;= tmp)</span><br><span class="line">                cout &lt;&lt; 2 *(tmp - n / 2) &lt;&lt; endl;</span><br><span class="line">            else</span><br><span class="line">                cout &lt;&lt; 0 &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">        memset(m, 0, sizeof(m));</span><br><span class="line">    &#125;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<hr />
<h2 id="d.jumping-through-segments">D.Jumping Through Segments</h2>
<p><strong><em>按顺序给出一些区间，最小化每步都能跳到该步对应的区间中的步长的最大值，初始在零点。</em></strong></p>
<p>容易知道是二分。</p>
<p>考虑chk的写法：<strong>每次跳至的位置设置成一个区间</strong>，区间下限、上限均为相对于题给区间合法的上下限，若区间不合法(l&gt;k)即为false，否则为true。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#pragma GCC optimize(2)</span><br><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;cmath&gt;</span><br><span class="line">#include&lt;algorithm&gt;</span><br><span class="line"></span><br><span class="line">using namespace std;</span><br><span class="line">#define int long long</span><br><span class="line">int n,t;</span><br><span class="line">struct p&#123;</span><br><span class="line">    int l,r;</span><br><span class="line">&#125;a[1000001];</span><br><span class="line"></span><br><span class="line">int chk(int x)&#123;</span><br><span class="line">    int l = 0,r = 0;</span><br><span class="line">    for(int i = 1;i &lt;= n;i ++)&#123;</span><br><span class="line">        l -= x,r += x;</span><br><span class="line">        l = max(l,a[i].l);</span><br><span class="line">        r = min(r,a[i].r);</span><br><span class="line">        if(l &gt; r) return 0;</span><br><span class="line">    &#125;</span><br><span class="line">    return 1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">signed main()&#123;</span><br><span class="line">    cin&gt;&gt;t;</span><br><span class="line">    while(t--)&#123;</span><br><span class="line">        cin&gt;&gt;n;</span><br><span class="line">        for(int i = 1;i &lt;= n;i ++)&#123;</span><br><span class="line">            scanf(&quot;%d%d&quot;,&amp;a[i].l,&amp;a[i].r);</span><br><span class="line">        &#125;</span><br><span class="line">        int l = 0,r = 1e9 + 10;</span><br><span class="line">        int ans = 0;</span><br><span class="line">        while(l &lt; r)&#123;</span><br><span class="line">            int mid = (l + r) &gt;&gt; 1;</span><br><span class="line">            if(chk(mid)) ans = mid,r = mid;</span><br><span class="line">            else l = mid + 1;</span><br><span class="line">        &#125;</span><br><span class="line">        cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<hr />
<h2 id="e.good-triples">E.Good Triples</h2>
<p><strong><em>给定若干个数 $n $，求满足 $a+b+c=n $以及 $a,b,c
$的各位和与 $n $的各位和相等的三元有序数对 $(a,b,c)
$的个数。</em></strong></p>
<p><strong>命题：满足题述条件的数对个数</strong> $ S=_{i=1}^{O(n)}()
$</p>
<p><strong>其中 $n_i $为 $n $的十进制数对应位数 $i $的数值， $O(n) $为
$n $的最高位数。</strong></p>
<p>证明：注意到所有对于 $a,b,c,n
$的各位和相等的等式均能拆成唯一一种按位排列的情形（位数不足时用0补足），即：
$ a_1 +b_1+c_1=n_1,a_2+b_2+c_2=n_2,$</p>
<p>并且上式每位数按对应位数进位后完全契合 $a+b+c=n
$，根据乘法原理，总情况数即为每位数对应分解情况数的乘积，即问题化归到求10以内的分解情况。</p>
<p>对0而言，只有唯一一种分解情况；当为 $1
$时，有三种分解情况；为2时，有六种分解情况；猜想对于 $n $，分解情况为
$_{i=1}^{1+n}i $，下面归纳证明。 $n=0 $情形已枚举；</p>
<p>假设 $n=k,n&lt;9 $时成立，则当 $ n=k+1 $时，考虑对 $n=k
$的每种情况的数对第一位加一，皆符合分解式，只缺少第一位为0的情况，即
$(0,x,y),x+y=k $，这样的数对共有0到 $k $共 $k+1
$种，这就完成了归纳证明，同时完成了命题的证明。 $$</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#include &lt;algorithm&gt;</span><br><span class="line">#include &lt;cmath&gt;</span><br><span class="line">#include &lt;cstring&gt;</span><br><span class="line">#include &lt;deque&gt;</span><br><span class="line">#include &lt;iostream&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">#define int long long</span><br><span class="line">// int a[100001];</span><br><span class="line">int t, n;</span><br><span class="line">signed main() &#123;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    while (t--) &#123;</span><br><span class="line">        int n;</span><br><span class="line">        cin &gt;&gt; n;</span><br><span class="line">        int ans = 1;</span><br><span class="line">        for (int i = 1e7; i &gt;= 1; i /= 10) &#123;</span><br><span class="line">            ans *= ((n / i + 1) * (n / i + 2)) / 2;</span><br><span class="line">            n %= i;</span><br><span class="line">        &#125;</span><br><span class="line">        cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<hr />
<h2 id="f.shift-and-reverse">F.Shift and Reverse</h2>
<p><strong><em>给出一些数列，考虑只用头尾翻转和用头接尾两种方法能不能将该数列按照非降序排序，并求出排序步数最小值。</em></strong></p>
<p><strong>引理：将该序列看成一个尾连头的环，即 $(a_1,a_2,,a_n,a_1,)
$，若其中不重复的向右相邻的顺序与逆序的数量的最小值比1大，则无法做出排序。</strong></p>
<p>证明：若能注意到顺序逆序总和为 $n
$以及逆向构造：1.翻转让顺逆序数互换；2.尾接头最多构造出1个顺/逆序，那么结论是显然的。
$$</p>
<p>那么若能排序，则可以考虑逆向构造，在已排序环的第一第二节里截出满足与目标序列相同或只差一次翻转的序列后将需移动位置和反转次数相加，取极小即可。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#include &lt;cmath&gt;</span><br><span class="line">#include &lt;iostream&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">int t, n;</span><br><span class="line">int a[100001];</span><br><span class="line">int main() &#123;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    while (t--) &#123;</span><br><span class="line">        cin &gt;&gt; n;</span><br><span class="line">        for (int i = 0; i &lt; n; i++)</span><br><span class="line">            cin &gt;&gt; a[i];</span><br><span class="line">        int p = 0, q = -1, ans = 0x7fffff;</span><br><span class="line">        for (int i = 0; i &lt; n; i++) &#123;</span><br><span class="line">            if (a[i] &gt; a[(i + 1) % n])&#123;</span><br><span class="line">                p++;q = i + 1;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        //cout&lt;&lt;p&lt;&lt;&quot; &quot;;</span><br><span class="line">        if (p == 0)</span><br><span class="line">            ans = 0;</span><br><span class="line">        else if (p == 1) &#123;</span><br><span class="line">            int tmp = min(q + 2, n - q);</span><br><span class="line">            ans = min(ans, tmp);</span><br><span class="line">        &#125;</span><br><span class="line">        p = 0,q = -1;</span><br><span class="line">        for (int i = 0; i &lt; n; i++) &#123;</span><br><span class="line">            if (a[i] &lt; a[(i + 1) % n])&#123;</span><br><span class="line">                p++;q = i + 1;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        //cout&lt;&lt;p&lt;&lt;&quot; &quot;;</span><br><span class="line">        if (p == 0)</span><br><span class="line">            ans = 0;</span><br><span class="line">        else if (p == 1) &#123;</span><br><span class="line">            int tmp = min(q + 1, n - q + 1);</span><br><span class="line">            ans = min(ans, tmp);</span><br><span class="line">        &#125;</span><br><span class="line">        if (ans == 0x7fffff)</span><br><span class="line">            ans = -1;</span><br><span class="line">        cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<hr />
<h2 id="g.lights">G.Lights</h2>
<p><strong><em>给出一组灯的开关状态，以及一组数 $a_1,a_2,a_n $表示开关
$i $能改变 $i,a_i
$两盏灯的状态，考虑能不能将灯全部关上，若能关上求出关上全部灯的最少步数。</em></strong></p>
<p>注意到这里共有 $n $个开关， $n
$个有向关系，可以建成一张有向图，且该图有且仅有一个环，其余的节点都为从环上衍生出去的链，那么可以考虑模拟将每个链上的灯的开关情况规整到环上，现在只需讨论环上的情况。很容易知道环上开灯的为奇数则无法关上，为偶数可以关上。</p>
<p>现在考虑怎么求最小值。其实只用求环上两个相邻开灯节点的距离最大值，然后避开这段反着扫一遍就是答案。</p>
<p>代码：改代码中</p>
]]></content>
      <tags>
        <tag>codeforces</tag>
        <tag>acm</tag>
      </tags>
  </entry>
  <entry>
    <title>做题笔记2023/11/16</title>
    <url>/2023/11/17/page-1/</url>
    <content><![CDATA[<p>若不说明，下标中的数均为整数。</p>
<h1 id="线性dp">1.线性DP</h1>
<h2 id="a.poi2013-baj-bytecomputer">A.[POI2013] BAJ-Bytecomputer</h2>
<p><strong><em>给定一个长度为 <span class="math inline">\(n\)</span>
的只包含 <span class="math inline">\(-1,0,1\)</span> 的数列 <span
class="math inline">\(a\)</span>，每次操作可以使 <span
class="math inline">\(a_i\gets
a_i+a_{i-1}\)</span>，求最少操作次数使得序列单调不降。如果不可能通过该操作使得序列单调不降，请输出
<code>BRAK</code>。</em></strong></p>
<p><strong><em>数据范围：<span class="math inline">\(1\le n\le
10^6\)</span>。</em></strong></p>
<p><strong>引理</strong>：如果要求操作最少，则该数列中只有<span
class="math inline">\(1,0,-1\)</span>三种值。</p>
<p>证明：若不然，设最终序列中的第一个比<span
class="math inline">\(-1\)</span>小的数为<span
class="math inline">\(a_{i}\)</span>，注意到<span
class="math inline">\(i&gt;1\)</span>，且<span
class="math inline">\(a_{i-1}\leq
-1\)</span>，这与单调不降矛盾，比1大的情形可以类似地证明。<span
class="math inline">\(\square\)</span></p>
<p>从而该数组每个操作后的数可以唯一确定，并且若操作的数前的数列单调不降，要使包括该数在内的数列单调不降，只需要操作该数。该问题具有最优子结构且易于定态，可以考虑DP处理。设<span
class="math inline">\(dp[i][j]\)</span>为在前<span
class="math inline">\(i\)</span>个数为单调不降且第<span
class="math inline">\(i\)</span>个数为<span
class="math inline">\(j\)</span>的最小操作数，容易知道<span
class="math inline">\(dp[1][a[1]] =
0\)</span>，并将其余状态初始化为<span
class="math inline">\(+\infty\)</span>，对<span
class="math inline">\(a[i]\)</span>、<span
class="math inline">\(j\)</span>分情况讨论：</p>
<hr />
<p>若<span class="math inline">\(a[i]=-1\)</span></p>
<p>1.<span class="math inline">\(j=-1\)</span>，则<span
class="math inline">\(a_{i-1}\)</span>只能是<span
class="math inline">\(-1\)</span>，即</p>
<p><span class="math display">\[
dp[i][-1]=dp[i-1][-1] \tag{1}
\]</span></p>
<p>2.<span
class="math inline">\(j=0\)</span>，容易知道无论前一个数是多少都无法转移。</p>
<p>3.<span class="math inline">\(j=1\)</span>,则<span
class="math inline">\(a_{i-1}\)</span>可以任取，但不能从<span
class="math inline">\(0,-1\)</span>转移得到，即</p>
<p><span class="math display">\[
dp[i][1] = dp[i-1][1]+2 \tag{2}
\]</span></p>
<hr />
<p>若<span class="math inline">\(a[i]=0\)</span></p>
<p>1.<span class="math inline">\(j=-1\)</span>，则<span
class="math inline">\(a_{i-1}\)</span>只能是<span
class="math inline">\(-1\)</span>，即</p>
<p><span class="math display">\[
dp[i][-1]=dp[i-1][-1] + 1 \tag{3}
\]</span></p>
<p>2.<span class="math inline">\(j=0\)</span>，则前一个数可以是<span
class="math inline">\(-1,0\)</span>，即</p>
<p><span class="math display">\[
dp[i][0]=\min(dp[i-1][-1],dp[i-1][0]) \tag{4}
\]</span></p>
<p>3.<span class="math inline">\(j=1\)</span>,则<span
class="math inline">\(a_{i-1}\)</span>可以任取，但不能从<span
class="math inline">\(0,-1\)</span>转移得到，即</p>
<p><span class="math display">\[
dp[i][1] = dp[i-1][1]+1 \tag{5}
\]</span></p>
<hr />
<p>若<span class="math inline">\(a[i]=1\)</span></p>
<p>1.<span class="math inline">\(j=-1\)</span>，则<span
class="math inline">\(a_{i-1}\)</span>不能取<span
class="math inline">\(1，0\)</span>，即</p>
<p><span class="math display">\[
dp[i][-1]=dp[i-1][-1]+2\tag{6}
\]</span></p>
<p>2.<span class="math inline">\(j=0\)</span>，则<span
class="math inline">\(a_{i-1}\)</span>不能取<span
class="math inline">\(1，0\)</span>，即</p>
<p><span class="math display">\[
dp[i][0]=dp[i-1][-1]+1\tag{7}
\]</span></p>
<p>3.<span class="math inline">\(j=1\)</span>,则<span
class="math inline">\(a_{i-1}\)</span>可以任取，即</p>
<p><span class="math display">\[
dp[i][1]=\min(dp[i-1][-1],dp[i-1][0],dp[i-1][1]) \tag{8}
\]</span></p>
<p>综合上述八式，优化下标，查询<span
class="math inline">\(\max(dp[n][0],dp[n][1],dp[n][-1])\)</span>，若为<span
class="math inline">\(+\infty\)</span>则无解，否则输出答案。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;cstring&gt;</span><br><span class="line">#include&lt;cmath&gt;</span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line">const int N = 0x7fffff;</span><br><span class="line">int n;</span><br><span class="line">int a1[N];</span><br><span class="line">int dp[N][7];</span><br><span class="line">//2=-1,3=0,4=1;</span><br><span class="line">int main() &#123;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    a1[0] = 0;</span><br><span class="line">    for (int i = 1; i &lt;= 1000500; i++) &#123;</span><br><span class="line">        for (int j = 0; j &lt; 7; j++)</span><br><span class="line">            dp[i][j] = N;</span><br><span class="line">    &#125;</span><br><span class="line">    for (int i = 1; i &lt;= n; i++) &#123; cin &gt;&gt; a1[i]; &#125;</span><br><span class="line">    int p = a1[1];</span><br><span class="line">    dp[1][p + 3] = 0;</span><br><span class="line">    for (int i = 2; i &lt;= n; i++) &#123;</span><br><span class="line">        dp[i][2] = dp[i - 1][2] + a1[i] + 1;</span><br><span class="line">        if (a1[i] == 0)dp[i][3] = min(dp[i - 1][2], dp[i - 1][3]);</span><br><span class="line">        else if (a1[i] == 1) dp[i][3] = dp[i - 1][2] + 1;</span><br><span class="line">        if (a1[i] == 1) dp[i][4] = min(min(dp[i - 1][2], dp[i - 1][3]), dp[i - 1][4]);</span><br><span class="line">        else dp[i][4] = dp[i - 1][4] - a1[i] + 1;</span><br><span class="line">    &#125;</span><br><span class="line">    if (dp[n][2] &gt;= N &amp;&amp; dp[n][3] &gt;= N &amp;&amp; dp[n][4] &gt;= N) &#123;</span><br><span class="line">        cout &lt;&lt; &quot;BRAK&quot;;</span><br><span class="line">        return 0;</span><br><span class="line">    &#125;</span><br><span class="line">    else &#123;</span><br><span class="line">        cout &lt;&lt; min(min(dp[n][3], dp[n][2]), dp[n][4]);</span><br><span class="line">        return 0;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<hr />
<h2 id="b.scoi2009-粉刷匠">B.[SCOI2009] 粉刷匠</h2>
<p><strong><em>windy 有 <span class="math inline">\(N\)</span>
条木板需要被粉刷。 每条木板被分为 <span class="math inline">\(M\)</span>
个格子。 每个格子要被刷成红色或蓝色。</em></strong></p>
<p><strong><em>windy
每次粉刷，只能选择一条木板上一段连续的格子，然后涂上一种颜色。
每个格子最多只能被粉刷一次。</em></strong></p>
<p><strong><em>如果 windy 只能粉刷 <span
class="math inline">\(T\)</span>
次，他最多能正确粉刷多少格子？</em></strong></p>
<p><strong><em>一个格子如果未被粉刷或者被粉刷错颜色，就算错误粉刷。</em></strong></p>
<p><strong><em>数据范围：<span class="math inline">\(1 \le N,M \le 50,0
\le T \le 2500\)</span></em></strong></p>
<p>将每条木板看作一组物品，则题目变为分组背包。那么问题落到了如何求这一组物品的每个次数的最多正确粉刷数上。</p>
<p>考虑如何定态，首先要有涂了<span
class="math inline">\(k\)</span>次作为状态，此外还要有前<span
class="math inline">\(j\)</span>个为最小作为递推依据，用<span
class="math inline">\(i\)</span>来表示是第几条木板。在每次状态转移时，需要遍历前面所有<span
class="math inline">\(k\)</span>到<span
class="math inline">\(j\)</span>的少涂一次的状态（这是因为不可能有比<span
class="math inline">\(k\)</span>小的区间涂了k次），并加上从<span
class="math inline">\(q\)</span>到<span
class="math inline">\(j\)</span>的最多的颜色即可，即：</p>
<p><span class="math display">\[
dp1[i][j][k]=\max(dp1[i][q][k - 1] + \max(a[i][j] - a[i][q], j - q -
(a[i][j] - a[i][q])))(q\in(k,j)) \tag{1}
\]</span></p>
<p>其中<span
class="math inline">\(a[i][j]\)</span>为用0-1前缀和来存每个区间内的颜色个数。初态为<span
class="math inline">\(dp1[i][j][k]=0\)</span>。</p>
<p><strong>注意：应先循环涂的次数再循环涂了第几个，这与区间DP先循环区间长度再循环从第几个开始涂相似，都是用次数作为每一维的递推依据，再在这一维做第几个的递推。</strong></p>
<p><strong>从而<span
class="math inline">\(dp[i][m][k]\)</span>即为这一条木板粉刷次数为<span
class="math inline">\(k\)</span>时的最多粉刷格。</strong></p>
<p>最后，进行分类背包dp即可。</p>
<p><span class="math display">\[
dp[j] = \max(dp[j - k] + dp1[i][m][k])(k\in[0,m],i\in[1,n]) \tag{2}
\]</span></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;cstring&gt;</span><br><span class="line">#include&lt;cmath&gt;</span><br><span class="line">#include&lt;queue&gt;</span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line">const int N = 0x7ffff;</span><br><span class="line">int n, m, t;</span><br><span class="line">int a[100][100];</span><br><span class="line">int duan[N];</span><br><span class="line">int dp[1001];</span><br><span class="line">int sum[101][101][101];</span><br><span class="line">int main() &#123;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m &gt;&gt; t;</span><br><span class="line">    for (int i = 1; i &lt;= n; i++) &#123;</span><br><span class="line">        for (int j = 1; j &lt;= m; j++) &#123;</span><br><span class="line">            char p;</span><br><span class="line">            cin &gt;&gt; p;</span><br><span class="line">            if (p == &#x27;1&#x27;)a[i][j] = 1 + a[i][j - 1];</span><br><span class="line">            else a[i][j] = a[i][j - 1];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    //要sum[i][m][j]</span><br><span class="line">    memset(sum, 0, sizeof(sum));</span><br><span class="line">    memset(dp, 0, sizeof(dp));</span><br><span class="line">    for (int i = 1; i &lt;= n; i++) &#123;</span><br><span class="line">        for (int k = 1; k &lt;= m; k++) &#123;//涂了几次</span><br><span class="line">            for (int j = 1; j &lt;= m; j++) &#123;//这一行第几个</span><br><span class="line">                for (int q = k - 1; q &lt; j; q++) &#123;//遍历前几个少涂一次的情况</span><br><span class="line">                    sum[i][j][k] = max(sum[i][q][k - 1] + max(a[i][j] - a[i][q], j - q - (a[i][j] - a[i][q])), sum[i][j][k]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    for (int i = 1; i &lt;= n; i++) &#123;</span><br><span class="line">        for (int j = t; j &gt;= 1; j--) &#123;</span><br><span class="line">            for (int k = 1; k &lt;= j; k++) &#123;</span><br><span class="line">                dp[j] = max(dp[j - k] + sum[i][m][k], dp[j]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; dp[t];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<hr />
<h2 id="c.饥饿的奶牛">C.饥饿的奶牛</h2>
<p><strong><em>有 <span class="math inline">\(N\)</span>
个区间，每个区间 <span class="math inline">\(x,y\)</span> 表示提供的
<span class="math inline">\(x\sim y\)</span> 共 <span
class="math inline">\(y-x+1\)</span>
堆优质牧草。你可以选择任意区间但不能有重复的部分。</em></strong></p>
<p><strong><em>求出最多能吃到的牧草堆数。</em></strong></p>
<p><strong><em>数据范围：<span class="math inline">\(1 \leq n \leq 1.5
\times 10^5\)</span>，<span class="math inline">\(0 \leq x \leq y \leq 3
\times 10^6\)</span>。</em></strong></p>
<p>先对每个区间按照<span class="math inline">\(x\)</span>进行排序。</p>
<p>设<span class="math inline">\(dp[i]\)</span>为区间<span
class="math inline">\([1,i]\)</span>上能吃到的最多牧草。似乎如果用dp，时间复杂度<span
class="math inline">\(O(n^{2})\)</span>不可行，但我们可以进行双指针优化，对已经循环到的区间左端，遍历左端点相同的区间，更新每个左端点相同的区间的右端的值为选与不选改区间中的最大值，即：</p>
<p><span class="math display">\[
dp[a[p].r]=\max(dp[a[p].r],dp[a[p].l-1]+a[p].r-a[p].l+1) (p\in[1,n])
\tag{1}
\]</span></p>
<p>其中</p>
<p><span class="math display">\[
a[p].l=i \tag{2}
\]</span></p>
<p>对于<span class="math inline">\(i\)</span>而言，将其从1遍历到<span
class="math inline">\(max(a[n].r)\)</span>，由于不确定是不是某个区间的端点值，则直接与上一个值传递即可，若是端点值其转移已经在<span
class="math inline">\((1)\)</span>中体现，即：</p>
<p><span class="math display">\[
dp[i]=\max(dp[i-1],dp[i]) \tag{3}
\]</span></p>
<p>总而言之，i的遍历是为了保证动态转移的连续，而p的遍历是为了算出特别点的转移。</p>
<p>最后，在每次转移记录一次值更新答案即可。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;cmath&gt;</span><br><span class="line">#include&lt;cstring&gt;</span><br><span class="line">#include&lt;algorithm&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">const int N =0x7fffff;</span><br><span class="line">struct len&#123;</span><br><span class="line">    long long l = 0,r = 0;</span><br><span class="line">&#125;a[N];</span><br><span class="line">long long dp[N];</span><br><span class="line">bool cmp(len a,len b)&#123;</span><br><span class="line">    if(a.l == b.l) return a.r&lt;b.r;</span><br><span class="line">    return a.l&lt;b.l;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int main()&#123;</span><br><span class="line">    int n;cin&gt;&gt;n;</span><br><span class="line">    long long maxy;</span><br><span class="line">    for(int i=1;i&lt;=n;i++)&#123;</span><br><span class="line">        cin&gt;&gt;a[i].l&gt;&gt;a[i].r;</span><br><span class="line">        maxy = max(maxy,a[i].r);</span><br><span class="line">    &#125;</span><br><span class="line">    sort(a+1,a+n+1,cmp);</span><br><span class="line">    int p = 1;</span><br><span class="line">    long long ans =0;</span><br><span class="line">    for(int i=0;i&lt;=maxy;i++)&#123;</span><br><span class="line">        dp[i]=max(dp[i],dp[i-1]);</span><br><span class="line">        while(a[p].l == i &amp;&amp; p&lt;=n)&#123;//找左端点相同的</span><br><span class="line">            dp[a[p].r]=max(dp[a[p].r],dp[a[p].l-1]+a[p].r-a[p].l+1);//a[p].l-1是正好贴着a[p]的</span><br><span class="line">            p++;</span><br><span class="line">        &#125;</span><br><span class="line">        ans = max(ans,dp[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;ans;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<hr />
<h1 id="记忆化搜索">2.记忆化搜索</h1>
<h2 id="a.noip2010-提高组-乌龟棋">A.[NOIP2010 提高组] 乌龟棋</h2>
<p><strong><em>乌龟棋的棋盘是一行 <span class="math inline">\(N\)</span>
个格子，每个格子上一个分数（非负整数）。棋盘第 <span
class="math inline">\(1\)</span> 格是唯一的起点，第 <span
class="math inline">\(N\)</span>
格是终点，游戏要求玩家控制一个乌龟棋子从起点出发走到终点。</em></strong></p>
<p><strong><em>乌龟棋中 <span class="math inline">\(M\)</span>
张爬行卡片，分成 <span class="math inline">\(4\)</span>
种不同的类型（<span class="math inline">\(M\)</span>
张卡片中不一定包含所有 <span class="math inline">\(4\)</span>
种类型的卡片），每种类型的卡片上分别标有 <span
class="math inline">\(1,2,3,4\)</span>
四个数字之一，表示使用这种卡片后，乌龟棋子将向前爬行相应的格子数。游戏中，玩家每次需要从所有的爬行卡片中选择一张之前没有使用过的爬行卡片，控制乌龟棋子前进相应的格子数，每张卡片只能使用一次。</em></strong></p>
<p><strong><em>游戏中，乌龟棋子自动获得起点格子的分数，并且在后续的爬行中每到达一个格子，就得到该格子相应的分数。玩家最终游戏得分就是乌龟棋子从起点到终点过程中到过的所有格子的分数总和。</em></strong></p>
<p><strong><em>很明显，用不同的爬行卡片使用顺序会使得最终游戏的得分不同，小明想要找到一种卡片使用顺序使得最终游戏得分最多。</em></strong></p>
<p><strong><em>现在，告诉你棋盘上每个格子的分数和所有的爬行卡片，你能告诉小明，他最多能得到多少分吗？</em></strong></p>
<p><strong><em>数据范围： <span
class="math inline">\(1≤N≤350,1≤M≤120\)</span>，且 <span
class="math inline">\(4\)</span> 种爬行卡片，每种卡片的张数不会超过
<span class="math inline">\(40\)</span>；<span
class="math inline">\(0≤a_i≤100,1≤i≤N,1≤b_i≤4,1≤i≤M\)</span>。</em></strong></p>
<p>一道经典的记忆化搜索。用<span
class="math inline">\(dp[i][j][k][l]\)</span>表示用了<span
class="math inline">\(i\)</span>张一步卡，<span
class="math inline">\(j\)</span>张两步卡，<span
class="math inline">\(k\)</span>张三步卡，<span
class="math inline">\(l\)</span>张四步卡的最大分数，则有</p>
<p><span class="math display">\[
dp[c1][c2][c3][c4] =
\max(dp[c1-1][c2][c3][c4],dp[c1][c2-1][c3][c4],dp[c1][c2][c3-1][c4],dp[c1][c2][c3][c4-1])+a[c1
+ 2 * c2 + 3 * c3 + 4 * c4 + 1]
\]</span></p>
<p>其中<span
class="math inline">\(a[i]\)</span>为该位置的分数，初态为<span
class="math inline">\(dp[0][0][0][0]=a[1]\)</span>，其余赋值为<span
class="math inline">\(-1\)</span>。</p>
<p>按照上式dfs+剪枝即可。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;cmath&gt;</span><br><span class="line">#include&lt;cstring&gt;</span><br><span class="line">#include&lt;algorithm&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">const int N = 0x7fffff;</span><br><span class="line">int n, m;</span><br><span class="line">int p[5];</span><br><span class="line">int a[400];</span><br><span class="line">int dp[40][40][40][40];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">int dfs(int c1, int c2, int c3, int c4) &#123;</span><br><span class="line">    int t1 = -1, t2 = -1, t3 = -1, t4 = -1;</span><br><span class="line"></span><br><span class="line">    if (c1 != 0) &#123;</span><br><span class="line">        if (dp[c1 - 1][c2][c3][c4] != -1) t1 = dp[c1 - 1][c2][c3][c4] + a[c1 + 2 * c2 + 3 * c3 + 4 * c4 + 1];</span><br><span class="line">        else t1 = dfs(c1 - 1, c2, c3, c4) + a[c1 + 2 * c2 + 3 * c3 + 4 * c4 + 1];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if (c2 != 0) &#123;</span><br><span class="line">        if (dp[c1][c2 - 1][c3][c4] != -1) t2 = dp[c1][c2 - 1][c3][c4] + a[c1 + 2 * c2 + 3 * c3 + 4 * c4 + 1];</span><br><span class="line">        else t2 = dfs(c1, c2 - 1, c3, c4) + a[c1 + 2 * c2 + 3 * c3 + 4 * c4 + 1];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if (c3 != 0) &#123;</span><br><span class="line">        if (dp[c1][c2][c3 - 1][c4] != -1) t3 = dp[c1][c2][c3 - 1][c4] + a[c1 + 2 * c2 + 3 * c3 + 4 * c4 + 1];</span><br><span class="line">        else t3 = dfs(c1, c2, c3 - 1, c4) + a[c1 + 2 * c2 + 3 * c3 + 4 * c4 + 1];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if (c4 != 0) &#123;</span><br><span class="line">        if (dp[c1][c2][c3][c4 - 1] != -1) t4 = dp[c1][c2][c3][c4 - 1] + a[c1 + 2 * c2 + 3 * c3 + 4 * c4 + 1];</span><br><span class="line">        else t4 = dfs(c1, c2, c3, c4 - 1) + a[c1 + 2 * c2 + 3 * c3 + 4 * c4 + 1];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    dp[c1][c2][c3][c4] = max(t1, max(t2, max(t3, t4)));</span><br><span class="line"></span><br><span class="line">    return max(t1, max(t2, max(t3, t4)));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">int main() &#123;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    for (int i = 1; i &lt;= n; i++) &#123;</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    for (int i = 1; i &lt;= m; i++) &#123;</span><br><span class="line">        int x; cin &gt;&gt; x;</span><br><span class="line">        p[x]++;</span><br><span class="line">    &#125;</span><br><span class="line">    for (int i = 0; i &lt;= 39; i++)</span><br><span class="line">        for (int j = 0; j &lt; 40; j++)</span><br><span class="line">            for (int k = 0; k &lt; 40; k++)</span><br><span class="line">                for (int l = 0; l &lt; 40; l++)</span><br><span class="line">                    dp[i][j][k][l] = -1;</span><br><span class="line">    dp[0][0][0][0] = a[1];</span><br><span class="line">    int ans = dfs(p[1], p[2], p[3], p[4]);</span><br><span class="line">    cout &lt;&lt; ans;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<hr />
<h1 id="区间dp">3.区间DP</h1>
<h2 id="a.cqoi2007-涂色">A.[CQOI2007] 涂色</h2>
<p><strong><em>假设你有一条长度为 <span class="math inline">\(5\)</span>
的木板，初始时没有涂过任何颜色。你希望把它的 <span
class="math inline">\(5\)</span>
个单位长度分别涂上红、绿、蓝、绿、红色，用一个长度为 <span
class="math inline">\(5\)</span> 的字符串表示这个目标：$ $
。</em></strong></p>
<p><strong><em>每次你可以把一段连续的木板涂成一个给定的颜色，后涂的颜色覆盖先涂的颜色。例如第一次把木板涂成
<span class="math inline">\(\texttt{RRRRR}\)</span> ，第二次涂成 <span
class="math inline">\(\texttt{RGGGR}\)</span> ，第三次涂成 <span
class="math inline">\(\texttt{RGBGR}\)</span>
，达到目标。</em></strong></p>
<p><strong><em>用尽量少的涂色次数达到目标。</em></strong></p>
<p><strong><em>数据范围： <span class="math inline">\(1\le n\le
50\)</span> 。</em></strong></p>
<p>裸的区间dp。方程：</p>
<p><span class="math display">\[
dp[j][i + j] = min(dp[j][i + j], dp[j][j + k] + dp[j + k + 1][j + i] -
(a[j] == a[j + i]))(i\in[2,n-1],j\in[1,n-i],k\in[0,i])
\]</span></p>
<p>其中<span class="math inline">\(a[i]\)</span> 为字符串的第<span
class="math inline">\(i\)</span> 个字符，初态为<span
class="math inline">\(dp[n][n]
=1\)</span>，同时初始化含两个字符的区间。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;cmath&gt;</span><br><span class="line">#include&lt;cstring&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">const int N = 0x7fff;</span><br><span class="line">int a[N];</span><br><span class="line">int dp[100][100];</span><br><span class="line">char x[60];</span><br><span class="line">int main() &#123;</span><br><span class="line">    cin &gt;&gt; x; int n = 0;</span><br><span class="line">    while (x[n] &gt;= 65) &#123;</span><br><span class="line">        a[n + 1] = x[n];</span><br><span class="line">        n++;</span><br><span class="line">    &#125;</span><br><span class="line">    for (int i = 1; i &lt;= n; i++)</span><br><span class="line">        for (int j = 1; j &lt;= n; j++)</span><br><span class="line">            dp[i][j] = 1000;</span><br><span class="line">    for (int i = 1; i &lt; n; i++) &#123;</span><br><span class="line">        dp[i][i] = 1;</span><br><span class="line">        if (a[i] == a[i + 1]) dp[i][i + 1] = 1;</span><br><span class="line">        else dp[i][i + 1] = 2;</span><br><span class="line">    &#125;</span><br><span class="line">    dp[n][n] = 1;</span><br><span class="line">    for (int i = 2; i &lt; n; i++) &#123;//长度</span><br><span class="line">        for (int j = 1; j + i &lt;= n; j++) &#123;//起点</span><br><span class="line">            for (int k = 0; k &lt; i; k++) &#123;</span><br><span class="line">                if (a[j] == a[j + i]) dp[j][i + j] = min(dp[j][i + j], dp[j][j + k] + dp[j + k + 1][j + i] - 1);</span><br><span class="line">                else dp[j][i + j] = min(dp[j][i + j], dp[j][j + k] + dp[j + k + 1][j + i]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; dp[1][n];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<hr />
<h1 id="背包dp">4.背包DP</h1>
<h2 id="a.bjoi2019-排兵布阵">A.[BJOI2019] 排兵布阵</h2>
<p><strong><em>小 C 正在玩一款排兵布阵的游戏。在游戏中有 <span
class="math inline">\(n\)</span>
座城堡，每局对战由两名玩家来争夺这些城堡。每名玩家有 <span
class="math inline">\(m\)</span> 名士兵，可以向第 <span
class="math inline">\(i\)</span> 座城堡派遣 <span
class="math inline">\(a_i\)</span>
名士兵去争夺这个城堡，使得总士兵数不超过 <span
class="math inline">\(m\)</span>。</em></strong></p>
<p><strong><em>如果一名玩家向第 <span class="math inline">\(i\)</span>
座城堡派遣的士兵数严格大于对手派遣士兵数的两倍，那么这名玩家就占领了这座城堡，获得
<span class="math inline">\(i\)</span> 分。</em></strong></p>
<p><strong><em>现在小 C 即将和其他 <span
class="math inline">\(s\)</span> 名玩家两两对战，这 <span
class="math inline">\(s\)</span> 场对决的派遣士兵方案必须相同。小 C
通过某些途径得知了其他 <span class="math inline">\(s\)</span>
名玩家即将使用的策略，他想知道他应该使用什么策略来最大化自己的总分。</em></strong></p>
<p><strong><em>由于答案可能不唯一，你只需要输出小 C
总分的最大值。</em></strong></p>
<p><strong><em>数据范围： <span class="math inline">\(1\le s \le
100\)</span> <span class="math inline">\(1\le n \le 100\)</span> <span
class="math inline">\(1\le m \le 20000\)</span> 对于每名玩家 <span
class="math inline">\(a_i \ge 0\)</span>，<span
class="math inline">\(\sum\limits_{i=1}^n a_i \le
m\)</span></em></strong></p>
<p>分组背包裸题，方程：</p>
<p><span class="math display">\[
dp[i][j] = \max(dp[i - 1][j],dp[i - 1][j - 2 * a[i].zu[k] - 1] + i * k)
(i\in[1,n],j\in[1,m],k\in[1,s])
\]</span></p>
<p>细节：每个组要先排序，严格大于意味着花费是两倍还要再加一。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;cmath&gt;</span><br><span class="line">#include&lt;cstring&gt;</span><br><span class="line">#include&lt;algorithm&gt;</span><br><span class="line">#include&lt;vector&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">const int N = 0x7fffff;</span><br><span class="line">int n,m,s;</span><br><span class="line">struct p</span><br><span class="line">&#123;</span><br><span class="line">    int hang;</span><br><span class="line">    int zu[120];</span><br><span class="line">&#125;a[120];</span><br><span class="line"></span><br><span class="line">int b[105][105];</span><br><span class="line"></span><br><span class="line">int dp[10001][10001];</span><br><span class="line">int main()&#123;</span><br><span class="line">    cin&gt;&gt;s&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    for(int i = 1;i &lt;= n;i++)&#123;</span><br><span class="line">        for(int j = 1;j &lt;= s;j++)&#123;</span><br><span class="line">            int x;cin&gt;&gt;x;</span><br><span class="line">            b[i][j] = x;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    for(int j = 1;j &lt;= s;j++)&#123;</span><br><span class="line">        for(int i = 1;i &lt;= n;i++)&#123;</span><br><span class="line">            a[i].zu[j] = b[i][j];</span><br><span class="line">        &#125;</span><br><span class="line">        sort(a[j].zu + 1,a[j].zu + s + 1);</span><br><span class="line">    &#125;</span><br><span class="line">    for(int i = 1;i &lt;= n;i++)&#123;</span><br><span class="line">        for(int j = m;j &gt;= 1;j--)&#123;</span><br><span class="line">            for(int k = 1;k &lt;= s;k++)&#123;</span><br><span class="line">                if(j &gt; 2 * a[i].zu[k]) dp[i][j] = max(dp[i - 1][j],dp[i - 1][j - 2 * a[i].zu[k] - 1] + i * k);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;dp[n][s];</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<hr />
<h2 id="b.垃圾陷阱">B.垃圾陷阱</h2>
<p><strong><em>卡门――农夫约翰极其珍视的一条 <code>Holsteins</code>
奶牛――已经落了到 “垃圾井” 中。“垃圾井” 是农夫们扔垃圾的地方，它的深度为
<span class="math inline">\(D\)</span>（<span class="math inline">\(2
\le D \le 100\)</span>）英尺。</em></strong></p>
<p><strong><em>卡门想把垃圾堆起来，等到堆得与井同样高时，她就能逃出井外了。另外，卡门可以通过吃一些垃圾来维持自己的生命。</em></strong></p>
<p><strong><em>每个垃圾都可以用来吃或堆放，并且堆放垃圾不用花费卡门的时间。</em></strong></p>
<p><strong><em>假设卡门预先知道了每个垃圾扔下的时间 <span
class="math inline">\(t\)</span>（<span class="math inline">\(1 \le t
\le 1000\)</span>），以及每个垃圾堆放的高度 <span
class="math inline">\(h\)</span>（<span class="math inline">\(1 \le h
\le 25\)</span>）和吃进该垃圾能维持生命的时间 <span
class="math inline">\(f\)</span>（<span class="math inline">\(1 \le f
\le
30\)</span>），要求出卡门最早能逃出井外的时间，假设卡门当前体内有足够持续
<span class="math inline">\(10\)</span> 小时的能量，如果卡门 <span
class="math inline">\(10\)</span> 小时内（不含 <span
class="math inline">\(10\)</span>
小时，维持生命的时间同）没有进食，卡门就将饿死。</em></strong></p>
<p><strong><em>第一行为两个整数，<span class="math inline">\(D\)</span>
和 <span class="math inline">\(G\)</span>（<span class="math inline">\(1
\le G \le 100\)</span>），<span class="math inline">\(G\)</span>
为被投入井的垃圾的数量。</em></strong></p>
<p><strong><em>第二到第 <span class="math inline">\(G+1\)</span>
行每行包括三个整数：<span class="math inline">\(T\)</span>（<span
class="math inline">\(1 \le T \le
1000\)</span>），表示垃圾被投进井中的时间；<span
class="math inline">\(F\)</span>（<span class="math inline">\(1 \le F
\le 30\)</span>），表示该垃圾能维持卡门生命的时间；和 <span
class="math inline">\(H\)</span>（<span class="math inline">\(1 \le H
\le 25\)</span>），该垃圾能垫高的高度。</em></strong></p>
<p>将<span
class="math inline">\(D\)</span>看作背包容量，用该高度与时间的最大体力当作状态，则题目变为在限制条件求下最快填满背包的时间，吃掉用刷表法，垫起来用填表法（这是因为填表不好初始化，且不好与吃掉同步）。吃掉的方程：</p>
<p><span class="math display">\[
dp[i][j] = \max(dp[i - 1][j] + n[i].f - n[i].t + n[i-1].t) \tag{1}
\]</span></p>
<p>垫起来的方程：</p>
<p><span class="math display">\[
dp[i][j + n[i].h] = \max(dp[i][j + n[i].h],dp[i - 1][j] - n[i].t +
n[i-1].t) \tag{2}
\]</span></p>
<p>转移条件：</p>
<p><span class="math display">\[
dp[i - 1][j] \ge n[i].t - n[i-1].t \tag{3}
\]</span></p>
<p>其中<span class="math inline">\(n[i]\)</span>为对<span
class="math inline">\(t\)</span>排序后的第<span
class="math inline">\(i\)</span>物品。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;cmath&gt;</span><br><span class="line">#include&lt;cstring&gt;</span><br><span class="line">#include&lt;algorithm&gt;</span><br><span class="line">#include&lt;vector&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">const int N = 0x7fffff;</span><br><span class="line">int d,g;</span><br><span class="line">struct node</span><br><span class="line">&#123;</span><br><span class="line">    int t,f,h;</span><br><span class="line">&#125;n[10000];</span><br><span class="line">bool cmp(node a,node b)&#123;</span><br><span class="line">    return a.t&lt;b.t;</span><br><span class="line">&#125;</span><br><span class="line">int dp[150][150];</span><br><span class="line"></span><br><span class="line">int main()&#123;</span><br><span class="line">    cin&gt;&gt;d&gt;&gt;g;</span><br><span class="line">    for(int i=1;i&lt;=g;i++)&#123;</span><br><span class="line">        cin&gt;&gt;n[i].t&gt;&gt;n[i].f&gt;&gt;n[i].h;</span><br><span class="line">    &#125;</span><br><span class="line">    sort(n+1,n+g+1,cmp);</span><br><span class="line">    dp[0][0] = 10;</span><br><span class="line">    memset(dp,-100,sizeof(dp));</span><br><span class="line">    dp[0][0] = 10;</span><br><span class="line">    int ans = -100000;</span><br><span class="line">    for(int i = 1;i&lt;=g;i++)&#123;</span><br><span class="line">        for(int j = d; j &gt;= 0;j--)&#123;</span><br><span class="line">            if(dp[i - 1][j] &lt; n[i].t - n[i-1].t) continue;</span><br><span class="line">            if(j + n[i].h &gt;= d)&#123;</span><br><span class="line">                cout&lt;&lt;n[i].t;</span><br><span class="line">                return 0;</span><br><span class="line">            &#125;</span><br><span class="line">            dp[i][j] = max(dp[i][j],dp[i - 1][j] + n[i].f - n[i].t + n[i-1].t);//吃掉</span><br><span class="line">            dp[i][j + n[i].h] = max(dp[i][j + n[i].h],dp[i - 1][j] - n[i].t + n[i-1].t);//垫起来</span><br><span class="line">        &#125;</span><br><span class="line">        ans = max(ans,n[i].t + dp[i][0]);</span><br><span class="line">    &#125;//体力一定要最多</span><br><span class="line">    cout&lt;&lt;ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<hr />
<h2 id="c.noip2014-提高组-飞扬的小鸟">C.[NOIP2014 提高组]
飞扬的小鸟</h2>
<p><strong><em>Flappy Bird
是一款风靡一时的休闲手机游戏。玩家需要不断控制点击手机屏幕的频率来调节小鸟的飞行高度，让小鸟顺利通过画面右方的管道缝隙。如果小鸟一不小心撞到了水管或者掉在地上的话，便宣告失败。</em></strong></p>
<p><strong><em>为了简化问题，我们对游戏规则进行了简化和改编:</em></strong></p>
<p><strong><em>游戏界面是一个长为 <span
class="math inline">\(n\)</span>，高为 <span
class="math inline">\(m\)</span> 的二维平面，其中有 <span
class="math inline">\(k\)</span>
个管道（忽略管道的宽度）。</em></strong></p>
<p><strong><em>小鸟始终在游戏界面内移动。小鸟从游戏界面最左边任意整数高度位置出发，到达游戏界面最右边时，游戏完成。</em></strong></p>
<p><strong><em>小鸟每个单位时间沿横坐标方向右移的距离为 <span
class="math inline">\(1\)</span>，竖直移动的距离由玩家控制。如果点击屏幕，小鸟就会上升一定高度
<span
class="math inline">\(x\)</span>，每个单位时间可以点击多次，效果叠加；如果不点击屏幕，小鸟就会下降一定高度
<span
class="math inline">\(y\)</span>。小鸟位于横坐标方向不同位置时，上升的高度
<span class="math inline">\(x\)</span> 和下降的高度 <span
class="math inline">\(y\)</span> 可能互不相同。</em></strong></p>
<p><strong><em>小鸟高度等于 <span class="math inline">\(0\)</span>
或者小鸟碰到管道时，游戏失败。小鸟高度为 <span
class="math inline">\(m\)</span> 时，无法再上升。</em></strong></p>
<p><strong><em>现在,请你判断是否可以完成游戏。如果可以，输出最少点击屏幕数；否则，输出小鸟最多可以通过多少个管道缝隙。</em></strong></p>
<p><strong><em>第 <span class="math inline">\(1\)</span> 行有 <span
class="math inline">\(3\)</span> 个整数 <span class="math inline">\(n,
m,
k\)</span>，分别表示游戏界面的长度，高度和水管的数量，每两个整数之间用一个空格隔开；</em></strong></p>
<p><strong><em>接下来的 <span class="math inline">\(n\)</span> 行，每行
<span class="math inline">\(2\)</span> 个用一个空格隔开的整数 <span
class="math inline">\(x\)</span> 和 <span
class="math inline">\(y\)</span>，依次表示在横坐标位置 <span
class="math inline">\(0 \sim n-1\)</span>
上玩家点击屏幕后，小鸟在下一位置上升的高度 <span
class="math inline">\(x\)</span>，以及在这个位置上玩家不点击屏幕时，小鸟在下一位置下降的高度
<span class="math inline">\(y\)</span>。</em></strong></p>
<p><strong><em>接下来 <span class="math inline">\(k\)</span> 行，每行
<span class="math inline">\(3\)</span> 个整数 <span
class="math inline">\(p,l,h\)</span>，每两个整数之间用一个空格隔开。每行表示一个管道，其中
<span class="math inline">\(p\)</span> 表示管道的横坐标，<span
class="math inline">\(l\)</span> 表示此管道缝隙的下边沿高度，<span
class="math inline">\(h\)</span> 表示管道缝隙上边沿的高度（输入数据保证
<span class="math inline">\(p\)</span>
各不相同，但不保证按照大小顺序给出）。</em></strong></p>
<p><strong><em>对于 <span class="math inline">\(100\%\)</span>
的数据：<span class="math inline">\(5 \leq n \leq 10000\)</span>，<span
class="math inline">\(5 \leq m \leq 1000\)</span>，<span
class="math inline">\(0 \leq k &lt; n\)</span>，<span
class="math inline">\(0 &lt; x,y &lt; m\)</span>，<span
class="math inline">\(0 &lt; p &lt; n\)</span>，<span
class="math inline">\(0 \leq l &lt; h \leq m\)</span>， <span
class="math inline">\(l + 1 &lt; h\)</span>。</em></strong></p>
<p>建模为两个背包：上升为完全背包，下降为01背包。</p>
<p>对于下降而言没什么坑点，但对于上升而言，必须特判到最顶点的情况，以及特判在初始时刻能从原点出发。</p>
<p>最后还要注意排序也有坑点。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#include &lt;iostream&gt;</span><br><span class="line">#include &lt;cmath&gt;</span><br><span class="line">#include &lt;cstring&gt;</span><br><span class="line">#include &lt;algorithm&gt;</span><br><span class="line">#include &lt;vector&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">const int N = 0x7fffff;</span><br><span class="line">int n, m, k;</span><br><span class="line">struct guan</span><br><span class="line">&#123;</span><br><span class="line">    int maxh, minh, x = 0x7ff;</span><br><span class="line">&#125; n1[10500];</span><br><span class="line">struct updown</span><br><span class="line">&#123;</span><br><span class="line">    int up, down;</span><br><span class="line">&#125; move1[10500];</span><br><span class="line">int ha[10500];</span><br><span class="line">int dp[10500][1050];</span><br><span class="line">bool cmp(guan a, guan b)</span><br><span class="line">&#123;</span><br><span class="line">    return a.x &lt; b.x ? 1 : 0;</span><br><span class="line">&#125;</span><br><span class="line">int new_h[10500][1050];</span><br><span class="line"></span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m &gt;&gt; k;</span><br><span class="line">    int cnt1 = 1;</span><br><span class="line">    memset(ha, 0, sizeof(ha));</span><br><span class="line">    for (int i = 0; i &lt; n; i++)</span><br><span class="line">        cin &gt;&gt; move1[i].up &gt;&gt; move1[i].down;</span><br><span class="line">    for (int i = 1; i &lt;= k; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        int x;</span><br><span class="line">        cin &gt;&gt; x;</span><br><span class="line">        ha[x]++;</span><br><span class="line">        cin &gt;&gt; n1[i].minh &gt;&gt; n1[i].maxh;</span><br><span class="line">        n1[i].x = x;</span><br><span class="line">        cnt1++;</span><br><span class="line">    &#125;</span><br><span class="line">    sort(n1 + 1, n1 + k + 1, cmp);</span><br><span class="line">    memset(dp, 0x3f, sizeof(dp));</span><br><span class="line">    int cnt2 = 1;</span><br><span class="line">    for (int i = 1; i &lt;= m; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        dp[0][i] = 0;</span><br><span class="line">    &#125;</span><br><span class="line">    for (int i = 0; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        new_h[i][1] = move1[i].up;</span><br><span class="line">        int cnt = 2;</span><br><span class="line">        for (int j = 2; j * move1[i].up &lt;= m; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            new_h[i][cnt++] = j * move1[i].up;</span><br><span class="line">        &#125;</span><br><span class="line">        new_h[i][cnt] = -1;</span><br><span class="line">    &#125;</span><br><span class="line">    for (int i = 1; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        if (!ha[i])</span><br><span class="line">        &#123;</span><br><span class="line">            if (i == 1)</span><br><span class="line">                for (int j = 0; j &lt;= m; j++)</span><br><span class="line">                &#123;</span><br><span class="line">                    if (j &gt;= move1[i - 1].up)</span><br><span class="line">                    &#123;</span><br><span class="line">                        dp[i][j] = min(dp[i][j], dp[i - 1][j - move1[i - 1].up] + 1);</span><br><span class="line">                        dp[i][j] = min(dp[i][j], dp[i][j - move1[i - 1].up] + 1);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            else</span><br><span class="line">                for (int j = 1; j &lt;= m; j++)</span><br><span class="line">                &#123;</span><br><span class="line">                    if (j &gt;= move1[i - 1].up)</span><br><span class="line">                    &#123;</span><br><span class="line">                        dp[i][j] = min(dp[i][j], dp[i - 1][j - move1[i - 1].up] + 1);</span><br><span class="line">                        dp[i][j] = min(dp[i][j], dp[i][j - move1[i - 1].up] + 1);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            if (i == 1)</span><br><span class="line">                for (int j = 0; j &lt;= m; j++)</span><br><span class="line">                &#123;</span><br><span class="line">                    if (j + move1[i - 1].down &lt;= m)</span><br><span class="line">                        dp[i][j] = min(dp[i][j], dp[i - 1][j + move1[i - 1].down]);</span><br><span class="line">                &#125;</span><br><span class="line">            else</span><br><span class="line">                for (int j = 1; j &lt;= m; j++)</span><br><span class="line">                &#123;</span><br><span class="line">                    if (j + move1[i - 1].down &lt;= m)</span><br><span class="line">                        dp[i][j] = min(dp[i][j], dp[i - 1][j + move1[i - 1].down]);</span><br><span class="line">                &#125;</span><br><span class="line">            for (int j = m - move1[i - 1].up; j &lt;= m; j++)</span><br><span class="line">            &#123;</span><br><span class="line">			    dp[i][m]=min(dp[i][m],min(dp[i][j],dp[i-1][j])+1);</span><br><span class="line">            &#125;</span><br><span class="line">            dp[i][m] = min(dp[i - 1][m] + 1, dp[i][m]);</span><br><span class="line">        &#125;</span><br><span class="line">        if (ha[i])</span><br><span class="line">        &#123;</span><br><span class="line">            if (i == 1)</span><br><span class="line">                for (int j = 0; j &lt;= m; j++)</span><br><span class="line">                &#123;</span><br><span class="line">                    if (j &gt;= move1[i - 1].up)</span><br><span class="line">                    &#123;</span><br><span class="line">                        dp[i][j] = min(dp[i][j], dp[i - 1][j - move1[i - 1].up] + 1);</span><br><span class="line">                        dp[i][j] = min(dp[i][j], dp[i][j - move1[i - 1].up] + 1);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            else</span><br><span class="line">                for (int j = 1; j &lt;= m; j++)</span><br><span class="line">                &#123;</span><br><span class="line">                    if (j &gt;= move1[i - 1].up)</span><br><span class="line">                    &#123;</span><br><span class="line">                        dp[i][j] = min(dp[i][j], dp[i - 1][j - move1[i - 1].up] + 1);</span><br><span class="line">                        dp[i][j] = min(dp[i][j], dp[i][j - move1[i - 1].up] + 1);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            if (i == 1)</span><br><span class="line">                for (int j = 0; j &lt;= m; j++)</span><br><span class="line">                &#123;</span><br><span class="line">                    if (j + move1[i - 1].down &lt;= m)</span><br><span class="line">                        dp[i][j] = min(dp[i][j], dp[i - 1][j + move1[i - 1].down]);</span><br><span class="line">                &#125;</span><br><span class="line">            else</span><br><span class="line">                for (int j = 1; j &lt;= m; j++)</span><br><span class="line">                &#123;</span><br><span class="line">                    if (j + move1[i - 1].down &lt;= m)</span><br><span class="line">                        dp[i][j] = min(dp[i][j], dp[i - 1][j + move1[i - 1].down]);</span><br><span class="line">                &#125;</span><br><span class="line">            for (int j = m - move1[i - 1].up; j &lt;= m; j++)</span><br><span class="line">            &#123;</span><br><span class="line">			    dp[i][m]=min(dp[i][m],min(dp[i][j],dp[i-1][j])+1);</span><br><span class="line">            &#125;</span><br><span class="line">            dp[i][m] = min(dp[i - 1][m] + 1, dp[i][m]);</span><br><span class="line">            int res = 0x3f3f3f3f;</span><br><span class="line">            for (int j = n1[cnt2].minh + 1; j &lt;= n1[cnt2].maxh - 1; j++)</span><br><span class="line">            &#123;</span><br><span class="line">                res = min(res, dp[i][j]);</span><br><span class="line">            &#125;</span><br><span class="line">            for (int j = 1; j &lt;= m; j++)</span><br><span class="line">            &#123;</span><br><span class="line">                if (!(j &gt;= n1[cnt2].minh + 1 &amp;&amp; j &lt;= n1[cnt2].maxh - 1))</span><br><span class="line">                    dp[i][j] = 0x3f3f3f3f;</span><br><span class="line">            &#125;</span><br><span class="line">            if (res &gt;= 0x3f3f3f3f)</span><br><span class="line">            &#123;</span><br><span class="line">                cout &lt;&lt; 0 &lt;&lt; endl</span><br><span class="line">                     &lt;&lt; cnt2 - 1;</span><br><span class="line">                return 0;</span><br><span class="line">            &#125;</span><br><span class="line">            cnt2++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    int ans = 0x7ffff;</span><br><span class="line">    for (int i = 1; i &lt;= m; i++)</span><br><span class="line">        ans = min(ans, dp[n][i]);</span><br><span class="line">    cout &lt;&lt; 1 &lt;&lt; endl</span><br><span class="line">         &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<hr />
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>acm</tag>
        <tag>DP</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2023/11/08/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very
first post. Check <a href="https://hexo.io/docs/">documentation</a> for
more info. If you get any problems when using Hexo, you can find the
answer in <a
href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or
you can ask me on <a
href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="quick-start">Quick Start</h2>
<h3 id="create-a-new-post">Create a new post</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>
<p>More info: <a
href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="run-server">Run server</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="generate-static-files">Generate static files</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a
href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="deploy-to-remote-sites">Deploy to remote sites</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a
href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>奇奇怪怪的线代题(1)</title>
    <url>/2023/12/01/page-2/</url>
    <content><![CDATA[<h1 id="一些奇奇怪怪的线代题">一些奇奇怪怪的线代题</h1>
<h2 id="a.行列式">A.行列式</h2>
<p><em>1.计算<span class="math inline">\(n\)</span>阶行列式</em></p>
$$ D_n = |
<span class="math display">\[\begin{array}{cccc}
2\cos x &amp;1   &amp; 0 &amp; \dots &amp;0&amp;0\\
1 &amp;2\cos x &amp; 1 &amp; \dots &amp;0&amp;0\\
0 &amp;1 &amp;2\cos x &amp;  \dots &amp;0&amp;0\\

\vdots &amp; \vdots &amp; \vdots &amp; &amp;\vdots &amp; \vdots \\
0 &amp;0 &amp; 0 &amp; \dots &amp;2\cos x&amp;1\\
0 &amp;0 &amp; 0 &amp; \dots &amp;1&amp;2 \cos x\\

\end{array}\]</span>
<p>|. $$</p>
<p>将其按第一行展开：</p>
$$ D_n = |
<span class="math display">\[\begin{array}{cccc}
2\cos x &amp;1   &amp; 0 &amp; \dots &amp;0&amp;0\\
1 &amp;2\cos x &amp; 1 &amp; \dots &amp;0&amp;0\\
0 &amp;1 &amp;2\cos x &amp;  \dots &amp;0&amp;0\\

\vdots &amp; \vdots &amp; \vdots &amp; &amp;\vdots &amp; \vdots \\
0 &amp;0 &amp; 0 &amp; \dots &amp;2\cos x&amp;1\\
0 &amp;0 &amp; 0 &amp; \dots &amp;1&amp;2 \cos x\\

\end{array}\]</span>
| \=2x |
<span class="math display">\[\begin{array}{cccc}
2\cos x &amp;1    &amp; \dots &amp;0&amp;0\\
1 &amp;2\cos x  &amp; \dots &amp;0&amp;0\\
\vdots  &amp; \vdots &amp; &amp;\vdots &amp; \vdots \\
0 &amp;0 &amp; \dots &amp;2\cos x&amp;1\\
0 &amp;0  &amp; \dots &amp;1&amp;2 \cos x\\
\end{array}\]</span>
| - |
<span class="math display">\[\begin{array}{cccc}
1 &amp;1   &amp; \dots &amp;0&amp;0\\
0 &amp;2\cos x  &amp; \dots &amp;0&amp;0\\
\vdots &amp; \vdots  &amp; &amp;\vdots &amp; \vdots \\
0 &amp;0 &amp;  \dots &amp;2\cos x&amp;1\\
0 &amp;0 &amp;  \dots &amp;1&amp;2 \cos x\\
\end{array}\]</span>
<p>|\= 2D_{n-1} - D_{n-2} $$</p>
<p>因此<span
class="math inline">\(D_n\)</span>为二阶线性递推数列，求特征根得</p>
<p><span class="math display">\[
\lambda_1=\cos x + i\sin x,\lambda_2=\cos x-i\sin x
\]</span></p>
<p>结合<span class="math inline">\(D_1=2\cos x\)</span>以及<span
class="math inline">\(D_2 = 4\cos^2 x - 1\)</span>得</p>
<p><span class="math display">\[
D_n = \cos nx + \cot x\sin nx.
\]</span></p>
<hr />
<p><em>2.计算n阶行列式</em></p>
$$ D_n = |
<span class="math display">\[\begin{array}{cccc}
1 &amp;1 &amp; \dots &amp;1\\
x &amp;x &amp;\dots&amp;x\\
x^2 &amp;x^2&amp;\dots &amp;x^2\\

\vdots &amp; \vdots &amp; &amp; \vdots \\
x^{n-2} &amp;x^{n-2}&amp;\dots &amp;x^{n-2}\\
x^n &amp;x^n &amp; \dots &amp;x^n\\

\end{array}\]</span>
<p>|. $$</p>
<p>考虑<span class="math inline">\(n+1\)</span>阶范德蒙德行列式</p>
$$ |
<span class="math display">\[\begin{array}{cccc}
1 &amp;1 &amp; \dots &amp;1&amp;1\\
x &amp;x &amp;\dots&amp;x&amp;y\\
x^2 &amp;x^2&amp;\dots &amp;x^2&amp;y^2\\

\vdots &amp; \vdots &amp; &amp; \vdots &amp;\vdots\\
x^{n-2} &amp;x^{n-2}&amp;\dots &amp;x^{n-2}&amp;y^{n-2}\\
x^{n-1} &amp;x^{n-1}&amp;\dots &amp;x^{n-1}&amp;y^{n-1}\\

x^n &amp;x^n &amp; \dots &amp;x^n&amp;y^n\\

\end{array}\]</span>
<p>|=<em>{k=1}^n(y-x_k)</em>{1j&lt;in}(x_i-x_j) $$</p>
<p>按第<span class="math inline">\(n+1\)</span>列展开：</p>
<p><span class="math display">\[
D_{n+1} = A_{1,n+1} + yA_{2,n+1}+\dots +y^{n-1}A_{n,n+1}+y^nA_{n+1,n+1}
\]</span></p>
<p>并注意到</p>
<p><span class="math display">\[
A_{n,n+1} = -D_n
\]</span></p>
<p>以及</p>
<p><span class="math display">\[
\prod \limits_{k=1}^n(y-x_k) = y^n-y^{n-1}\sum_{k=1}^{n}x_k+\dots
+(-1)^n\prod_{k=1}^{n}x_k
\]</span></p>
<p>从而</p>
<p><span class="math display">\[
D_n = \sum_{k=1}^{n}x_k\prod_{1\le j&lt;i\le n}(x_i-x_j).
\]</span></p>
<hr />
<h2 id="b.证明题">B.证明题</h2>
<p><em>设<span class="math inline">\(\{\alpha _i\}\)</span>为<span
class="math inline">\(n-1\)</span>个线性无关的<span
class="math inline">\(n\)</span>维向量组，<span
class="math inline">\(\xi
_1,\xi_2\)</span>为与该向量组向量均正交的两个<span
class="math inline">\(n\)</span>维列向量，证明：<span
class="math inline">\(\xi _1,\xi_2\)</span>线性相关。</em></p>
<p>证明：将 $_1 $ 添入向量组中，考虑到正交即线性无关，包含 <span
class="math inline">\(\xi _1\)</span> 的向量组即为空间的一组基，并设
<span class="math inline">\(\xi_1\)</span> 在该组基下的坐标表示为<span
class="math inline">\((k_1,k_2,\dots k_n)\)</span>即有</p>
<p><span class="math display">\[
\xi_1 ^T\xi _2 =(\sum_{i=1}^{n-1}k_i\alpha_i^T+k_n\xi_2^T)\xi
_2=k_n\xi_2^T\xi_2
\]</span></p>
<p>以及</p>
<p><span class="math display">\[
\xi_1 ^T\xi _1 =(\sum_{i=1}^{n-1}k_i\alpha_i^T+k_n\xi_2^T)\xi
_1=k_n\xi_2^T\xi_1
\]</span></p>
<p>从而有</p>
<p><span class="math display">\[
\frac{\xi_1 ^T\xi _2 }{\xi_2^T\xi_2}=\frac{\xi _1^T \xi_1}{\xi_2^T\xi_1}
\]</span></p>
<p>写成内积的形式：</p>
<p><span class="math display">\[
||(\xi_1, \xi_2)||^2 =(||\xi_2||^2)(||\xi _1||^2)
\]</span></p>
<p>此即欧氏空间的柯西不等式等号成立的情况，当且仅当<span
class="math inline">\(\xi_1,\xi_2\)</span>线性相关。<span
class="math inline">\(\square\)</span></p>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>代数</tag>
        <tag>行列式</tag>
        <tag>柯西不等式</tag>
      </tags>
  </entry>
  <entry>
    <title>数论笔记</title>
    <url>/2024/01/28/page-3/</url>
    <content><![CDATA[<h1 id="数论笔记不断更新">数论笔记（不断更新）</h1>
<h2 id="a">A</h2>
<p><strong><em>有一组给定的序列，构造一个数，使这个序列关于这个数的模有且仅有两个数。</em></strong></p>
<p><strong>结论：所求答案为：</strong></p>
<p><span class="math display">\[
ans = 2(a_2-a_1,a_3-a_2,\dots,a_n-a_{n-1})
\]</span></p>
<p><strong>证明：</strong></p>
<p>首先可以证明</p>
<p><span class="math display">\[
a_i \equiv a_j \pmod {(a_2-a_1,a_3-a_2,\dots,a_n-a_{n-1})}(\forall{i,j
\in[1,n]})
\]</span></p>
<p>设模值为 <span class="math inline">\(G=
(a_2-a_1,a_3-a_2,\dots,a_n-a_{n-1})\)</span>，并设</p>
<p><span class="math display">\[
a_i=p_iG+x \tag{A.1}
\]</span></p>
<p>考察 <span class="math inline">\(p_i\)</span> 的奇偶性，以下 <span
class="math inline">\(t\)</span> 为整数。若为奇数，便有</p>
<p><span class="math display">\[
a_i=(2t+1)G+x \rightarrow a_i \equiv G+x \pmod{2G}
\]</span></p>
<p>若为偶数，则有</p>
<p><span class="math display">\[
a_i=(2t)G+x \rightarrow a_i \equiv x \pmod{2G}
\]</span></p>
<p>下面证明任意序列 <span class="math inline">\(p_i\)</span>
必然不关于2同余。这是因为若关于2同余，那么对任意 <span
class="math inline">\(i,j \in [1,n]\)</span>，</p>
<p><span class="math display">\[
(p_i-p_j)|2
\]</span></p>
<p>利用<span class="math inline">\((1)\)</span>立得</p>
<p><span class="math display">\[
a_i - a_j=(p_i-p_j)G \rightarrow a_i - a_j\equiv 0 \pmod{2G}
\]</span></p>
<p>与所设 <span class="math inline">\(G\)</span> 矛盾，命题得证。<span
class="math inline">\(\square\)</span></p>
]]></content>
      <tags>
        <tag>数论</tag>
      </tags>
  </entry>
  <entry>
    <title>洛必达</title>
    <url>/2023/11/10/page/</url>
    <content><![CDATA[<h1 id="洛必达法则练习">洛必达法则练习</h1>
<hr />
<h2
id="求lim_xrightarrow-infty-fracexx100lim_nrightarrow-infty-fracenn100">1.求<span
class="math inline">\(\lim_{x\rightarrow +\infty}
\frac{e^{x}}{x^{100}}\)</span>；<span
class="math inline">\(\lim_{n\rightarrow +\infty}
\frac{e^{n}}{n^{100}}\)</span></h2>
<p><span class="math display">\[
\lim_{x\rightarrow +\infty} \frac{e^{x}}{x^{100}}\\=\lim_{x\rightarrow
+\infty} \frac{(e^{x})^{(100)}}{100!}=+\infty.
\]</span></p>
<p>由归结原则，数列极限也为0.</p>
<hr />
<h2
id="求lim_xrightarrow-infty-fracln20xxlim_nrightarrow-infty-fracln20nn">2.求<span
class="math inline">\(\lim_{x\rightarrow +\infty}
\frac{\ln^{20}(x)}{x}\)</span>;<span
class="math inline">\(\lim_{n\rightarrow +\infty}
\frac{\ln^{20}(n)}{n}\)</span></h2>
<p><span class="math display">\[
\lim_{x\rightarrow +\infty} \frac{\ln^{20}(x)}{x}\\=\lim_{x\rightarrow
+\infty} \frac{(\ln^{20}(x))^{&#39;}}{1}=\lim_{x\rightarrow
+\infty}(20/x)\ln^{19}(x)
\]</span></p>
<p>重复求导易得极限为0.</p>
<hr />
<h2 id="求lim_xrightarrow-0-frac113xa-12xa-1xax2">3.求<span
class="math inline">\(\lim_{x\rightarrow 0}
\frac{1+(1+3x)^{a}-(1+2x)^{a}-(1+x)^{a}}{x^{2}}\)</span></h2>
<p><span class="math display">\[
\lim_{x\rightarrow 0}
\frac{1+(1+3x)^{a}-(1+2x)^{a}-(1+x)^{a}}{x^{2}}\\=\lim_{x\rightarrow 0}
\frac{3a(1+3x)^{a-1}-2a(1+2x)^{a-1}-a(1+x)^{a-1}}{2x}\\=\lim_{x\rightarrow
0}
\frac{9a(a-1)(1+3x)^{a-2}-4a(a-1)(1+2x)^{a-2}-a(a-1)(1+x)^{a-2}}{2}\\=(9a^{2}-9a-4a^{2}+4a-a^{2}+a)/2=2a^{2}-2a.
\]</span></p>
<hr />
<h2 id="若-lim_xrightarrow-0-fracln-x-lnsin-xax21求aa不为0">4.若 <span
class="math inline">\(\lim_{x\rightarrow 0^{+}} \frac{\ln x-\ln(\sin
x)}{ax^{2}}=1\)</span>，求a(a不为0)</h2>
<p><span class="math display">\[
\lim_{x\rightarrow 0^{+}} \frac{\ln{x}-\ln(\sin
x)}{ax^{2}}\\=\lim_{x\rightarrow 0^{+}} \frac{\ln{(x/\sin
x)}}{ax^{2}}\\=\lim_{x\rightarrow 0^{+}}\frac{(x-\sin x)/\sin x}{ax^{2}}
\tag{1}
\]</span></p>
<p>将<span class="math inline">\(\sin x\)</span>展开到第二项即得</p>
<p><span class="math display">\[
{(x\rightarrow 0^{+})} \frac{x-\sin x}{x} \sim \frac{x^{2}}{6}
\]</span></p>
<p>代入<span class="math inline">\((1)\)</span>即得</p>
<p><span class="math display">\[
\lim_{x\rightarrow 0^{+}} \frac{\ln x-\ln(\sin
x)}{ax^{2}}=\frac{1}{6a}=1 \Rightarrow a= \frac{1}{6}.
\]</span></p>
<hr />
<h2 id="证明lim_xrightarrow-0-fracxxxx1.">5.证明：<span
class="math inline">\(\lim_{x\rightarrow 0^{+}}
\frac{x^{x^{x}}}{x}=1\)</span>.</h2>
<p>设<span class="math inline">\(k\)</span>为正数，则</p>
<p><span class="math display">\[
\lim_{x\rightarrow 0^{+}} x\ln^{k}{x}=\lim_{x\rightarrow
0^{+}}\frac{\ln^{k}{x}}{1/x}=\lim_{x\rightarrow
0^{+}}\frac{k\ln^{k-1}{x}}{-1/x^{3}}
\]</span></p>
<p>连续求导得</p>
<p><span class="math display">\[
lim_{x\rightarrow 0^{+}}\frac{k\ln^{k-1}{x}}{-1/x^{3}}=lim_{x\rightarrow
0^{+}}\frac{\prod_{i=1}^{[k]}(i+k-[k])\ln^{k-[k]}{x}}{-1/x^{1+2[k]}}
\tag{1}
\]</span></p>
<p>再对<span
class="math inline">\((1)\)</span>上下求一次导即得极限为0.</p>
<p>从而</p>
<p><span class="math display">\[
\lim_{x\rightarrow 0^{+}} \ln{x}(x^{x}-1)\\=\lim_{x\rightarrow 0^{+}}
\ln x(e^{x\ln{x}}-1)\\=\lim_{x\rightarrow 0^{+}} \ln x(x\ln x) =0.
\]</span></p>
<p>进而有</p>
<p><span class="math display">\[
\lim_{x\rightarrow 0^{+}}
\frac{x^{x^{x}}}{x}=\lim_{x\rightarrow0^{+}}e^{\ln
x(x^{x}-1)}=1.~~~\square
\]</span></p>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>分析</tag>
        <tag>极限</tag>
      </tags>
  </entry>
  <entry>
    <title>多项式笔记</title>
    <url>/2024/01/29/%E5%A4%9A%E9%A1%B9%E5%BC%8F%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="多项式笔记随缘更新">多项式笔记（随缘更新）</h1>
<h2 id="基础部分">基础部分</h2>
<h3 id="a.反演">A.反演</h3>
<p><strong>定义A.1：称函数 <span class="math inline">\(F(i)\)</span>
由另一函数 <span class="math inline">\(G(i)\)</span> 表出的运算 <span
class="math inline">\(f\)</span></strong></p>
<p><span class="math display">\[
F(i)=f(G(i))
\]</span></p>
<p><strong>为 <span class="math inline">\(F(i)\)</span> 关于 <span
class="math inline">\(G(i)\)</span> 的演绎，运算 <span
class="math inline">\(f^{-1}\)</span></strong></p>
<p><span class="math display">\[
G(i)=f^{-1}(F(i))
\]</span></p>
<p><strong>为 <span class="math inline">\(F(i)\)</span> 关于 <span
class="math inline">\(G(i)\)</span> 的反演.</strong></p>
<p>关于逆运算的存在性，在这里不严格证明。</p>
<p>计算机中主要应用的反演是离散的，上式中 <span
class="math inline">\(F\)</span> 和 <span
class="math inline">\(G\)</span> 通常以数列形式出现，<span
class="math inline">\(f\)</span> 通常会是线性算子：</p>
<p><span class="math display">\[
F_i=\sum_{j=0}^{i}A_{i,j}G_i\tag{1}
\]</span></p>
<p><span class="math display">\[
G_i=\sum_{j=0}^{i}B_{i,j}F_i\tag{1&#39;}
\]</span></p>
<p>演绎与反演也会有积分形式（例如傅里叶变换和傅里叶反演），但并不在本节讨论的范围内.因此(1)也可以写作矩阵形式</p>
<p><span class="math display">\[
(F_1,F_2,\dots,F_n)^T=\textbf{A}(G_1,G_2,\dots,G_n)^T
\]</span></p>
<p>(2)同理.</p>
<p><strong>定义A.2：定义1中的 <span
class="math inline">\(\textbf{A},\)</span> <span
class="math inline">\(\textbf{B}\)</span>
分别称作演绎矩阵、反演矩阵.</strong></p>
<p>由矩阵形式不难看出</p>
<p><strong>性质A.1：演绎矩阵、反演矩阵互逆.</strong></p>
<p>例A.1：给定一个数列 <span class="math inline">\({A_n}\)</span>
，其前缀和与差分运算互为反演。具体地有：</p>
<p><span class="math display">\[
(S_1,S_2,\dots,S_n)^T = \left (\begin{array}{cccc}1 &amp;0  &amp; 0
&amp; \dots &amp;0&amp;0\\1 &amp;1 &amp; 0 &amp; \dots
&amp;0&amp;0\\\vdots &amp; \vdots &amp; \vdots &amp; &amp;\vdots &amp;
\vdots \\1 &amp;1 &amp; 1 &amp; \dots &amp;1 &amp;0\\1 &amp;1 &amp; 1
&amp; \dots &amp;1&amp;1\\\end{array}\right)_{n}(A_1,A_2,\dots,A_n)^T
\]</span></p>
<p>为前缀和，</p>
<p><span class="math display">\[
(A_1,A_2,\dots,A_n)^T = \left (\begin{array}{cccc}1 &amp;0  &amp; 0
&amp; \dots &amp;0&amp;0\\-1 &amp;1 &amp; 0 &amp; \dots &amp;0&amp;0\\0
&amp; -1 &amp; 1 &amp; \dots &amp;0&amp;0\\\vdots &amp; \vdots &amp;
\vdots &amp; &amp;\vdots &amp;\vdots \\0 &amp;0 &amp; 0 &amp; \dots
&amp;-1&amp;1\\\end{array}\right)_{n}(S_1,S_2,\dots,S_n)^T
\]</span></p>
<p>为差分.不难验证</p>
<p><span class="math display">\[
\left (\begin{array}{cccc}1 &amp;0  &amp; 0 &amp; \dots &amp;0&amp;0\\1
&amp;1 &amp; 0 &amp; \dots &amp;0&amp;0\\\vdots &amp; \vdots &amp;
\vdots &amp; &amp;\vdots &amp; \vdots \\1 &amp;1 &amp; 1 &amp; \dots
&amp;1  &amp;0\\1 &amp;1 &amp; 1 &amp; \dots
&amp;1&amp;1\\\end{array}\right)\left (\begin{array}{cccc}1
&amp;0  &amp; 0 &amp; \dots &amp;0&amp;0\\-1 &amp;1 &amp; 0 &amp; \dots
&amp;0&amp;0\\0 &amp; -1 &amp; 1 &amp; \dots &amp;0&amp;0\\\vdots &amp;
\vdots &amp; \vdots &amp; &amp;\vdots &amp; \vdots \\0 &amp;0 &amp; 0
&amp; \dots &amp;-1&amp;1\\\end{array}\right) = \textbf{E}.
\]</span></p>
<p><strong>性质A.2：反演中系数可以转移.</strong></p>
<p><strong>性质A.3：反演矩阵、演绎矩阵转置后，将求和从向下至下界变为向上至上界，反演关系仍然存在.</strong></p>
<p>对于性质2，可以由矩阵逆性质简单得出.
对于性质3，根据定义，演绎矩阵必然是三角阵，根据线性代数，三角阵的转置的逆等于原三角阵逆的转置.</p>
<p>例A.2（二项式反演）：</p>
<p><span class="math display">\[
F_n=\sum_{i=0}^{n}(-1)^i{n \choose i} G_n\iff G_n=\sum_{i=0}^{n}(-1)^i{n
\choose i} F_n
\]</span></p>
<p>证明：此处不用容斥证明.直接将下三角阵 <span
class="math inline">\(\textbf{A}_{i,j}=(-1)^n {n \choose i}\)</span>
平方计算便可得到需要的结果. <span
class="math inline">\(\square\)</span></p>
<p>常见的形式是将 <span class="math inline">\((-1)^i\)</span>
移至一边，即</p>
<p><span class="math display">\[
F_n=\sum_{i=0}^{n}{n \choose i} G_n\iff G_n=\sum_{i=0}^{n}(-1)^{n-i}{n
\choose i} F_n \tag{2}
\]</span></p>
<p>这种形式在组合数学的意义是已知使用 <span
class="math inline">\(n\)</span> 个数中某 <span
class="math inline">\(i\)</span>
个数构成特殊结构的组合方案的总合下，求出用 <span
class="math inline">\(i\)</span>
个数构成某种特殊结构的方案数.最典型的案例是错位排列数.一般来说，反演的用处就是将题给条件适当放大直到能求出解后对解进行反演.</p>
<hr />
<h3 id="b.生成函数基础">B.生成函数基础</h3>
<p><strong>定义B.1：给定一个数列 <span
class="math inline">\(A_i\)</span> ，称</strong></p>
<p><span class="math display">\[
A(x)= \sum_{i=0}^{\infty} A_ix^i\tag{3}
\]</span></p>
<p><strong>为 <span class="math inline">\(A_i\)</span>
的生成函数或形式幂级数环.</strong></p>
<p>容易看出，生成函数都是多项式，可以对其进行多项式能进行的操作：</p>
<ol type="1">
<li>加法，满足交换律</li>
<li>乘法，满足结合律、交换律</li>
<li>复合，满足结合律</li>
<li>微商，满足一元函数求导的性质</li>
<li>乘逆元，对 <span class="math inline">\(f^{-1}\)</span>
作泰勒展开</li>
</ol>
<p>由于泰勒展开的存在，如果得知一个数列的递推式，用生成函数可以求它的通项.</p>
<p>例B.1：求贝尔数</p>
<p><span class="math display">\[
B_{n+1}=\sum_{i=0}^{n} {n\choose i}B_i,B_0=1
\]</span></p>
<p>的通项公式.</p>
<p>设其指数生成函数为</p>
<p><span class="math display">\[
B(x)= \sum_{i=0}^{\infty} \frac{B_i}{i!}x^i=1+\sum_{i=0}^{\infty}
\frac{B_{i+1}}{(i+1)!}x^{i+1}\tag{4}
\]</span></p>
<p>其微商为</p>
<p><span class="math display">\[
B&#39;(x)=\sum_{i=0}^{\infty} B_ix^{i+1}
\]</span></p>
<p>由递推式得</p>
<p><span class="math display">\[
\frac{B_{n+1}}{n!}=\sum_{i=0}^{n}\frac{B_i}{i!}\frac{1}{(n-i)!}
\]</span></p>
<p>将 <span class="math inline">\(e^x\)</span>
的级数展开对应上式，即得</p>
<p><span class="math display">\[
B(x)=e^xB&#39;(x)
\]</span></p>
<p>这是一个一阶微分方程，变形得</p>
<p><span class="math display">\[
\frac{\mathrm dB}{B}=e^{-x}dx
\]</span></p>
<p>两边积分即得</p>
<p><span class="math display">\[
B(x)=\exp(e^x+C)
\]</span></p>
<p>代入边界条件即得 <span class="math inline">\(C=-1\)</span> ,于是</p>
<p><span class="math display">\[
B(x)=\exp(e^x-1) \tag{5}
\]</span></p>
<p>便是贝尔数的生成函数封闭形式.</p>
<p>将其第一层泰勒展开，</p>
<p><span class="math display">\[
B(x)=\frac{1}{e}(\sum_{i=0}^{\infty}\frac{1}{i!}e^{ix})
\]</span></p>
<p>第二层展开，</p>
<p><span class="math display">\[
B(x)=\frac{1}{e}(\sum_{i=0}^{\infty}\frac{1}{i!}e^{ix})\\=\frac{1}{e}(\sum_{i=0}^{\infty}\frac{1}{i!}\sum
_{j=0}^{\infty}\frac{1}{j!}(ix)^j)
\]</span></p>
<p>对比<span
class="math inline">\((4)\)</span>，考虑到生成函数在正数上良定义，可以交换求和顺序，用
<span class="math inline">\(n\)</span> 替换 <span
class="math inline">\(j\)</span> 便可得出通项公式</p>
<p><span class="math display">\[
B_n=\frac{1}{e}\sum_{i=0}^{\infty}\frac{i^n}{i!}\tag{6}
\]</span></p>
<p><span class="math inline">\(\square\)</span></p>
<hr />
<h3 id="c.拉格朗日插值法">C.拉格朗日插值法</h3>
<p>对于已知序列 <span class="math inline">\(X_i=f(x_i)\)</span>
，考虑还原出原多项式.</p>
<p>首先，关于复数域上 <span class="math inline">\(n\)</span>
个多项式根能否确定一个 <span class="math inline">\(n\)</span>
次多项式，需要由代数基本定理给出.</p>
<p><strong>定理（代数基本定理）：任何复系数一元 <span
class="math inline">\(n\)</span> 次多项式（<span
class="math inline">\(n\)</span> 至少为
1）方程在复数域上至少有一根.</strong></p>
<p>该定理证明较为复杂，且与本节所述内容无太大关系，因此将其作为结论使用，证明将会留在附录给出.下面我们将得出本节最重要的成果</p>
<p><strong>定理C.1（拉格朗日插值法）：数域 $ $ 上一个次数不超过 <span
class="math inline">\(n\)</span> 的多项式 <span
class="math inline">\(f(x)\)</span>，被它在 $ $ 中的 <span
class="math inline">\(n+1\)</span> 个不同元素 <span
class="math inline">\(x_i\)</span> 的函数值 <span
class="math inline">\(y_i=f(x_i)\)</span> 所唯一确定</strong></p>
<p><span class="math display">\[
f(x)=\sum_{i=0}^{n}y_i\prod_{j=0,j\neq i}^n\frac{(x-x_j)}{(x_i-x_j)}
\tag{8}
\]</span></p>
<p>证明：</p>
<p>1）唯一性证明 考虑演绎</p>
<p><span class="math display">\[
(y_0,y_1,\dots,y_n)^T=\left (\begin{array}{cccc}1&amp; x_0 &amp; \dots
&amp;x_{0}^{n-1}&amp;x_0^n\\1&amp; x_1 &amp; \dots
&amp;x_{1}^{n-1}&amp;x_1^n\\ \vdots &amp; \vdots &amp; &amp;\vdots
&amp;\vdots \\1&amp; x_n &amp; \dots
&amp;x_{n}^{n-1}&amp;x_n^n\\\end{array}\right)(a_0,a_1,\dots,a_n)^T
\tag{9}
\]</span></p>
<p>为每个函数值对应系数的矩阵表示，注意到演绎矩阵 <span
class="math inline">\(\textbf{V}\)</span> 为范德蒙德矩阵，有如下引理</p>
<p><strong>引理C.1：对于范德蒙德行列式，有如下结论</strong></p>
<p><span class="math display">\[
|\textbf{V}|= \left |\begin{array}{cccc}1&amp; x_0 &amp; \dots
&amp;x_{0}^{n-1}&amp;x_0^n\\1&amp; x_1 &amp; \dots
&amp;x_{1}^{n-1}&amp;x_1^n\\ \vdots &amp; \vdots &amp; &amp;\vdots
&amp;\vdots \\1&amp; x_n &amp; \dots
&amp;x_{n}^{n-1}&amp;x_n^n\\\end{array}\right|=\prod_{0\leq i&lt;j\leq
n}(x_j-x_i)
\]</span></p>
<p>证明留在附录给出.</p>
<p>将 <span class="math inline">\((9)\)</span> 看作线性方程组，由于
<span class="math inline">\(x_i\)</span> 互不相等，范德蒙德行列式不为
<span
class="math inline">\(0\)</span>，根据<strong>克拉默法则</strong>，方程有且仅有唯一解.唯一性得证.</p>
<p>2）必要性显然</p>
<p>3）充分性证明 根据克拉默法则，<span
class="math inline">\((9)\)</span> 的解为</p>
<p><span class="math display">\[
a_i=\frac{|\textbf{V}_{i}|}{|\textbf{V}|},i=0,1,\dots,n
\]</span></p>
<p>其中 <span class="math inline">\(|\textbf{V}_{i}|\)</span>
为将原矩阵次数为 <span class="math inline">\(i\)</span> 的列替换为 <span
class="math inline">\((y_0,y_1,\dots,y_n)^T\)</span>
的行列式.因此我们有</p>
<p><span class="math display">\[
f(x)=\sum_{i=0}^n\frac{|\textbf{V}_{i}|}{|\textbf{V}|}x^i
\]</span></p>
<p>我们将 <span class="math inline">\(|\textbf{V}_{i}|\)</span>
按被替换的那列展开，即有</p>
<p><span class="math display">\[
|\textbf{V}_{i}|=\sum_{j=0}^ny_j |\textbf{V}_{ji}|
\]</span></p>
<p>其中 <span class="math inline">\(|\textbf{V}_{ji}|\)</span>
为代数余子式.因此</p>
<p><span class="math display">\[
f(x)=\sum_{i=0}^n\frac{|\textbf{V}_{i}|}{|\textbf{V}|}x^i=\sum_{i=0}^n\frac{\sum_{j=0}^ny_j
|\textbf{V}_{ji}|}{|\textbf{V}|}x^i=\frac{1}{|\textbf{V}|}\sum_{j=0}^ny_j\sum_{i=0}^nx^i|\textbf{V}_{ji}|
\]</span></p>
<p>其中后项关于 <span class="math inline">\(i\)</span>
的求和事实上是将范德蒙德行列式</p>
<p><span class="math display">\[
\left |\begin{array}{cccc}1&amp; x_0 &amp; \dots
&amp;x_{0}^{n-1}&amp;x_0^n\\1&amp; x_1 &amp; \dots
&amp;x_{1}^{n-1}&amp;x_1^n\\ \vdots &amp; \vdots &amp; &amp;\vdots
&amp;\vdots \\1&amp; x_n &amp; \dots
&amp;x_{n}^{n-1}&amp;x_n^n\\\end{array}\right|
\]</span></p>
<p>第 <span class="math inline">\(j + 1\)</span> 行按照将 <span
class="math inline">\(x_j^i\)</span> 替换为 <span
class="math inline">\(x^i\)</span> 的另一范德蒙德行列式，因此由引理1</p>
<p><span class="math display">\[
\sum_{i=0}^nx^i|\textbf{V}_{ji}|=\prod_{0\leq p &lt;q\leq n}^{p,q\neq
j}(x_q-x_p)\prod_{0\leq r \leq n}^{r \neq j}(x-x_r)
\]</span></p>
<p>从而</p>
<p><span class="math display">\[
f(x)=\frac{1}{|\textbf{V}|}\sum_{j=0}^ny_j\sum_{i=0}^nx^i|\textbf{V}_{ji}|=\sum_{j=0}^ny_j\frac{\prod_{1\leq
p &lt;q\leq n}^{p,q\neq j}(x_q-x_p)\prod_{1\leq r \leq n}^{r \neq
j}(x-x_r)}{\prod_{1\leq p&lt;q\leq
n}(x_q-x_p)}\\=\sum_{i=0}^{n}y_i\prod_{j=0,j\neq
i}^n\frac{(x-x_j)}{(x_i-x_j)} .
\]</span></p>
<p><span class="math inline">\(\square\)</span></p>
<p>代码先咕着（</p>
<hr />
<h3 id="d.快速多项式乘法">D.快速多项式乘法</h3>
<p>快速傅里叶变换算法可以在 <span class="math inline">\(O(n \log
n)\)</span> 时间内求出两个多项式的乘积.</p>
<p>首先阐述卷积定义以方便下文叙述.</p>
<p><strong>定义D.1：将关于两个可积函数 <span
class="math inline">\(f(x),g(x)\)</span>
的生成一个新函数的运算</strong></p>
<p><span class="math display">\[
h(x)= \int_{-\infty}^{+\infty}f(x- t)g(x)dt \tag{7}
\]</span></p>
<p><strong>称为函数的卷积运算，记作</strong></p>
<p><span class="math display">\[
h(x)=f(x)*g(x)
\]</span></p>
<p>此处的函数可以是离散函数，将积分变为求和即可.</p>
<p>考察两个多项式</p>
<p><span class="math display">\[
f(x)=\sum_{i=0}^{n}a_ix^i,g(x)=\sum_{i=0}^{n}b_ix^i
\]</span></p>
<p>若想求出两多项式的乘积 <span
class="math inline">\(h(x)=f(x)g(x)\)</span> 的<strong>系数</strong>
<span
class="math inline">\({c_i}\)</span>，朴素的想法是直接将括号打开，一个对着另一个乘，即</p>
<p><span class="math display">\[
c_kx^k=\sum_{i=0}^{k}a_{k-i}x^{k-i}g_{i}x^i \tag{7&#39;}
\]</span></p>
<p>这事实上正是对 <span class="math inline">\(a_i,b_i\)</span>
进行卷积操作，那么我们便可以有朴素的 <span
class="math inline">\(O(n^2)\)</span> 算法求出 <span
class="math inline">\(c_i\)</span> .</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">const int N = 200050;</span><br><span class="line">int f[2 * N],g[N],c[N];</span><br><span class="line"></span><br><span class="line">void conv()&#123;</span><br><span class="line">	for(int i = 0;i &lt;= N;i++)&#123;</span><br><span class="line">        	for(int j = 0;j &lt;= N;j++)&#123;</span><br><span class="line">            		c[i + j] += g[i] * f[i];</span><br><span class="line">        	&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>这样的算法可行但效率不高，下面分两部分来介绍优化过程.</p>
<h4 id="离散傅里叶变换dft">1.离散傅里叶变换（DFT）</h4>
<p>DFT的核心思想是用<strong>函数值还原系数</strong>.</p>
<p>如果我们已知一个多项式的函数值，利用拉格朗日插值法可以在已知函数值和点值的情况下求出原函数的系数，下面考虑一种性质非常好的插值</p>
<p><strong>定理D.1（DFT）：对于演绎</strong></p>
<p><span class="math display">\[
X_k=\sum_{i=0}^{n-1}a_i\omega_n^{ik} \tag{10}
\]</span></p>
<p><strong>其反演为</strong></p>
<p><span class="math display">\[
a_k=\frac{1}{n}\sum_{i=0}^{n-1}X_i\omega_n^{-ik} \tag{10&#39;}
\]</span></p>
<p>其中 <span class="math inline">\(\omega_n\)</span> 表示方程 <span
class="math inline">\(x^n=-1\)</span> 的单位根.我们将 <span
class="math inline">\((8)\)</span> 称为离散傅里叶变换，<span
class="math inline">\((8&#39;)\)</span> 称为逆离散傅里叶变换.</p>
<p>该定理在多项式上的意义是把 <span class="math inline">\(n\)</span>
次单位根带进了多项式里，得到了 <span class="math inline">\(n\)</span>
个值，进而反求出系数.</p>
<p>证明：</p>
<p><span class="math display">\[
\frac{1}{n}\sum_{i=0}^{n-1}X_i\omega_n^{-ik}\\=\frac{1}{n}\sum_{i=0}^{n-1}\sum_{j=0}^{n-1}a_j\omega_n^{ij}\omega_n^{-ik}\\=\frac{1}{n}\sum_{i=0}^{n-1}\sum_{j=0}^{n-1}a_j\omega_n^{i(j-k)}
\]</span></p>
<p>若 <span class="math inline">\(j=k\)</span>，显然总贡献值为 <span
class="math inline">\(na_i\)</span>；</p>
<p>若 <span class="math inline">\(j\neq k\)</span>，贡献为</p>
<p><span class="math display">\[
\sum_{i=0}^{n-1}\omega_n^{i(j-k)}a_{j-k+k}=0
\]</span></p>
<p>从而推论成立.<span class="math inline">\(\square\)</span></p>
<p>这样的插值正逆极度对称，可以用相同的方法计算.</p>
<h4 id="多项式分治">2.多项式分治</h4>
<p>继续考虑单位根插值，我们考虑将多项式补成 <span
class="math inline">\(2^n\)</span>
次项后按<strong>奇偶分治</strong>，设</p>
<p><span class="math display">\[
FL(x)=\sum_{i=0}^{n/2-1}a_{2i}x^i,FR(x)=\sum_{i=1}^{ n/2-1}a_{2i}x^i
\]</span></p>
<p>即有</p>
<p><span class="math display">\[
f(x)=FL(x^2)+xFR(x^2)
\]</span></p>
<p>将单位根代入，不难推出如下分治</p>
<p><span class="math display">\[
f(\omega_n^k)=FL(\omega_n^{2k})+\omega_n^{k}FR(\omega_n^{2k}),\\f(\omega_n^{k/2+n})=FL(\omega_n^{2k})-\omega_n^kFR(\omega_n^{2k}),k\in[0,\frac{n}{2})
\tag{11}
\]</span></p>
<p>这允许我们在 <span class="math inline">\(O(n\log n)\)</span>
复杂度下求出 <span class="math inline">\(f\)</span> 的 <span
class="math inline">\(n\)</span>
个单位根点值表示.具体地，将大的区间不断按奇偶分半递归，回溯时更新原函数值.</p>
<h4 id="最终实现">3.最终实现</h4>
<p>终于可以回到多项式乘法了.</p>
<p>算法流程很简单：将所给多项式 <span class="math inline">\(f,g\)</span>
分治求出单位根点值，将多项式点值对应相乘后用逆 DFT 还原系数.</p>
<p>代码以洛谷P3803为例</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">complex&lt;double&gt; f[5000050],g[5000050];</span><br><span class="line">complex&lt;double&gt; tmp[5000050];</span><br><span class="line">int tag[5000050];</span><br><span class="line">void dft(complex&lt;double&gt; *ff,int n,int flg)&#123;</span><br><span class="line">    if(n == 1) return;</span><br><span class="line">    for(int i = 0;i &lt; n;i++)tmp[i] = ff[i];</span><br><span class="line">    for(int i = 0;i &lt; n;i++)&#123;</span><br><span class="line">        if(i &amp; 1) ff[n / 2 + i / 2] = tmp[i];</span><br><span class="line">        else ff[i / 2] = tmp[i];</span><br><span class="line">    &#125;</span><br><span class="line">    complex&lt;double&gt; *q = ff,*p = ff + n / 2;</span><br><span class="line">    dft(q,n/2,flg),dft(p,n/2,flg);</span><br><span class="line">    complex&lt;double&gt; cur(1,0),step(cos(2 * PI/ n) ,sin(2 * PI * flg / n));</span><br><span class="line">    for(int k = 0;k &lt; n / 2;k++)&#123;</span><br><span class="line">        tmp[k] = q[k] + cur * p[k];</span><br><span class="line">        tmp[k + n / 2] = q[k] - cur * p[k];</span><br><span class="line">        cur *= step;</span><br><span class="line">    &#125;</span><br><span class="line">    for(int i = 0;i &lt; n;i++)ff[i] = tmp[i];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void solve() &#123;</span><br><span class="line">    int n,m;cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    for(int i = 0;i &lt;= n;i++)&#123;int x;cin&gt;&gt;x;f[i] = x;&#125;</span><br><span class="line">    for(int j = 0;j &lt;= m;j++)&#123;int x;cin&gt;&gt;x;g[j] = x;&#125;</span><br><span class="line">    int t = 1;</span><br><span class="line">    while(t &lt; n + m + 2) t&lt;&lt;=1;</span><br><span class="line">    dft(f,t,1),dft(g,t,1);</span><br><span class="line">    for(int i = 0;i &lt; t;i++) f[i] = f[i] * g[i];</span><br><span class="line">    dft(f,t,-1);</span><br><span class="line">    int flg = 1;</span><br><span class="line">    for(int i = 0;i &lt;= m + n;i++)cout&lt;&lt;int(f[i].real() / t + 0.50)&lt;&lt;&quot; &quot;;</span><br><span class="line">    return;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这就是基础的快速多项式乘法的分治写法.</p>
]]></content>
      <tags>
        <tag>多项式 代数</tag>
      </tags>
  </entry>
  <entry>
    <title>做题笔记 2023/11/8</title>
    <url>/2023/11/08/%E5%81%9A%E9%A2%98%E7%AC%94%E8%AE%B0-2023-11-8/</url>
    <content><![CDATA[<h1 id="做题笔记-2023118">做题笔记 2023/11/8</h1>
<h3 id="a.依赖背包-noip2006-金明的预算方案">A.依赖背包 [NOIP2006
金明的预算方案]</h3>
<p><strong><em>Q:有<span class="math inline">\(n\)</span>元钱，想买<span
class="math inline">\(m\)</span>个物品，第<span
class="math inline">\(i\)</span>个物品的价格为<span
class="math inline">\(v_{i}\)</span>，重要度为<span
class="math inline">\(p_{i}\)</span>，有些物品是从属于某个主件物品的附件，要买这个物品，必须购买它的主件。目标是让所有购买的物品的<span
class="math inline">\(v_{i}p_{i}\)</span>之和最大。</em></strong></p>
<p>考虑将每个物品与其子类的各种组合看成另一些物品，先不将子类存在应遍历的数据里，在
dp 到父类时遍历一遍物品的子类与其的组合。</p>
<p>例如：3 物品有两个子类 7 、8 ，先不将 7 8 放入要查的数组里，查到 3
时再查 7 8，总共有 3 、3 7 、3 8 、3 7 8
四种取法，遍历子类组合时将组合里所有的 <span
class="math inline">\(v\)</span> 和 <span
class="math inline">\(vp\)</span> 加起来看作一个新物品。</p>
<p>代码：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;algorithm&gt;</span><br><span class="line">#include&lt;cstring&gt;</span><br><span class="line">#include&lt;vector&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">const int N = 0X7FFF;</span><br><span class="line">int n,m;</span><br><span class="line">int dp[N];</span><br><span class="line">pair&lt;int,int&gt; p1[N];</span><br><span class="line">vector&lt;pair&lt;int,int&gt; &gt; s[N]; /*（其实写之前不知道 vector 有这个用法，想用两个数组来着）*/</span><br><span class="line">int main()&#123;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    for(int i=1;i&lt;=m;i++)&#123;</span><br><span class="line">        int v,p,q;cin&gt;&gt;v&gt;&gt;p&gt;&gt;q;</span><br><span class="line">        p *=v;</span><br><span class="line">        if(!q)p1[i]=&#123;v,p&#125;;</span><br><span class="line">        else s[q].push_back(&#123;v,p&#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    for(int i=1;i&lt;=m;i++)&#123;</span><br><span class="line">        for(int j=n;j&gt;=0;j--)&#123;</span><br><span class="line">            for(int t=0;t&lt;1&lt;&lt;s[i].size();t++)&#123;</span><br><span class="line">                int v=p1[i].first;</span><br><span class="line">                int w=p1[i].second;</span><br><span class="line">                for(int z=0;z&lt;s[i].size();z++)&#123;</span><br><span class="line">                    if(t&gt;&gt;z &amp; 1)&#123;</span><br><span class="line">                        v+=s[i][z].first;</span><br><span class="line">                        w+=s[i][z].second;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                if(j&gt;=v) dp[j]=max(dp[j],dp[j-v] + w);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;dp[n];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<hr />
<h2 id="b.分治计算几何-平面最近点对-luogu-p1429">B.分治+计算几何
[平面最近点对 Luogu P1429]</h2>
<p><strong><em>Q:给出<span
class="math inline">\(R^{2}\)</span>上的一些点，搜出这些点中最小的距离。</em></strong></p>
<p><del>爆搜即可</del> 乍一看无从下手
<del>确实无从下手</del>，但是仔细想想，有点像区间dp（能量项链）：先将这些点按横坐标排序，再将其不断二分成两个或一个点的集合：<span
class="math inline">\((x_{1},x_{2})\)</span>、<span
class="math inline">\((x_{3},x_{4})\)</span>
……如果集合只有一个点将其值设置为无穷，有两个则设置为两点距离。接着进行合并，合并时除了先求出原先两个区间的最小值中的更小值之外，只需要再考虑跨越右区间左端
<span class="math inline">\(mid\)</span>或左区间右端 <span
class="math inline">\(mid+1\)</span>
的相互“比较近”的点，与上面求出的更小值进行比较即可。（如果全部点都遍历一遍复杂度就变成<span
class="math inline">\(O(nlogn)\)</span>了，必t）</p>
<p>那么问题就落到怎么定义“比较近”了。注意到在平面中：</p>
<p><span class="math display">\[
A:(x_{A}-x_{B}&gt;m) \vee B:(y_{A}-y_{B}&gt;m) \Rightarrow d(A,B)&gt;m
\\
\]</span></p>
<p>由于是横向分割，关于 <span class="math inline">\((mid)\)</span>
不满足 <span class="math inline">\(A\)</span> 的的点互相不满足 <span
class="math inline">\(A\)</span> ，且落在一个横向距离为 <span
class="math inline">\(2m\)</span>
，纵向无线延长的条带上，而遍历条带中的点对组合时，先考察一遍 <span
class="math inline">\(B\)</span> 性质代替 <span
class="math inline">\(sqrt\)</span>()
的运算即可。（注意，遍历“近”点时，必须保证纵坐标有序）</p>
<p>代码：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;algorithm&gt;</span><br><span class="line">#include&lt;cstring&gt;</span><br><span class="line">#include&lt;cmath&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">const int N = 0X7FFFF;</span><br><span class="line">int n;</span><br><span class="line">int flag = 0;</span><br><span class="line">struct pont&#123;</span><br><span class="line">    double first,second;</span><br><span class="line">&#125;point[N];</span><br><span class="line"></span><br><span class="line">bool cmp(pont a,pont b)&#123;</span><br><span class="line">    if(a.first==b.first) return a.second&lt;b.second;</span><br><span class="line">    else if(a.first==b.first &amp;&amp;a.second==b.second) flag=1;</span><br><span class="line">    return a.first&lt;b.first;</span><br><span class="line">&#125;</span><br><span class="line">bool cmps(int a,int b)&#123;</span><br><span class="line">    return point[a].second&lt;point[b].second;</span><br><span class="line">&#125;</span><br><span class="line">double cal(pont a,pont b)&#123;</span><br><span class="line">    return sqrt((a.first-b.first)*(a.first-b.first)+(a.second-b.second)*(a.second-b.second));</span><br><span class="line">&#125;</span><br><span class="line">int temp[N];</span><br><span class="line">double merge(int l,int r)&#123;</span><br><span class="line">    if(r-l==1)&#123;</span><br><span class="line">        return cal(point[l],point[r]);   </span><br><span class="line">    &#125;</span><br><span class="line">    else if(l==r) return N;</span><br><span class="line">    int mid = (l+r)/2;</span><br><span class="line">    double d1 = merge(l,mid);</span><br><span class="line">    double d2 = merge(mid + 1,r);</span><br><span class="line">    int k = 0;</span><br><span class="line">    double d3 = N;</span><br><span class="line">    for(int i = l; i &lt;= r;i ++)</span><br><span class="line">    if(fabs(point[mid].first-point[i].first) &lt; min(d1,d2))</span><br><span class="line">        temp[k++] = i;</span><br><span class="line">    sort(temp, temp + k, cmps);</span><br><span class="line">    for(int i=0;i&lt;k;i++)&#123;</span><br><span class="line">        for(int j=1+i;j&lt;k &amp;&amp; fabs(point[temp[j]].second-point[temp[i]].second) &lt; min(d1,d2);j++)&#123;</span><br><span class="line">            d3 = min(d3,cal(point[temp[j]],point[temp[i]]));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return min(min(d1,d2),d3);</span><br><span class="line">&#125;</span><br><span class="line">int main()&#123;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    for(int i=1;i&lt;=n;i++)&#123;</span><br><span class="line">        cin&gt;&gt;point[i].first&gt;&gt;point[i].second;</span><br><span class="line">    &#125;</span><br><span class="line">    sort(point+1,point+n+1,cmp);</span><br><span class="line">    printf(&quot;%.4lf&quot;,merge(1,n));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2
id="c.前缀和逆序对coci2015-20162-vudu">C.前缀和+逆序对[COCI2015-2016#2
VUDU]</h2>
<p><strong><em>Q：给定一个长度为 n 的序列以及一个数 p
，求出该序列的平均数大于 p 的连续子列的个数。</em></strong></p>
<p>看到平均数，先想到前缀和。下面对前缀和做一些数学推导。设序列为 <span
class="math inline">\(a_{n}\)</span> ，前缀和为 <span
class="math inline">\(s_{n}\)</span> ，假设某连续子列满足题意，不妨设
<span class="math inline">\(k&gt;j\)</span> ，则有</p>
<p><span class="math display">\[
{\frac{\sum_{i=j}^{k}a_{i}}{k-j}\geq p} \tag{C.1}
\]</span></p>
<p>即</p>
<p><span class="math display">\[
{\frac{s_{k}-s_{j}}{k-j}}\geq p  \Leftrightarrow s_{k}-kp\geq s_{j} -jp
\tag{C.2}\quad(j,k\in[0,n])
\]</span></p>
<p><span
class="math inline">\((2)\)</span>式右端极其对称，考虑构造新数列</p>
<p><span class="math display">\[
{b_{n}=\sum_{i=1}^{n}a_{i}-np\quad(n&gt;0)\\}\tag{C.3}
\]</span></p>
<p>特别地，令 <span class="math inline">\(b_{0}=0\)</span> ，使<span
class="math inline">\((C.2)\)</span>和 <span
class="math inline">\((C.3)\)</span> 完全等价。（这是因为 <span
class="math inline">\(j\)</span> 在 <span
class="math inline">\((C.3)\)</span> 中不能取到0，而在 <span
class="math inline">\((C.2)\)</span> 中可以取到 <span
class="math inline">\(0\)</span> ）</p>
<p>考察 <span class="math inline">\(b_{n}\)</span> 的递推式，易得</p>
<p><span class="math display">\[
{b_{n}=b_{n-1}+a_{n}-p\quad(n\geq0)\\}\tag{C.3&#39;}
\]</span></p>
<p>则题目变为求当 <span class="math inline">\(k&gt;j\)</span>时，<span
class="math inline">\(b_{j}\leq b_{k}\)</span> 的 <span
class="math inline">\((j,k)\)</span> 对数。</p>
<p>推完了，这不就求顺序对吗？两个办法：归并排序或树状数组。本人代码里用的是归并。（直接把板子弄过来的
<del>我是fw，归并改了半天不对</del>）</p>
<p>说一下树状数组的思路：简单来说就是大型哈希，先将数组初始化为0，当输入每个值时，先查询一遍前缀和加到答案上，再使树状数组的对应该值的下标的值++即可。</p>
<p>代码：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;cstring&gt;</span><br><span class="line">#include&lt;algorithm&gt;</span><br><span class="line">const int N = 1000005;</span><br><span class="line">using namespace std;</span><br><span class="line">long long n;</span><br><span class="line">long long a[N];</span><br><span class="line">long long s[N];</span><br><span class="line">long long s2[N];</span><br><span class="line">long long ans = 0;</span><br><span class="line">long long d[N];</span><br><span class="line">long long p;</span><br><span class="line">void msort(int L, int R)//归并求逆序对</span><br><span class="line">&#123;</span><br><span class="line">    if (L == R) &#123;</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line">    int mid = (L + R) / 2;</span><br><span class="line">    msort(L, mid); msort(mid + 1, R);</span><br><span class="line">    for (int k = L; k &lt;= R; k++)a[k] = s2[k];</span><br><span class="line">    int i = L, j = mid + 1;</span><br><span class="line">    for (int k = L; k &lt;= R; k++) &#123;</span><br><span class="line">        if ((i &lt;= mid) &amp;&amp; (a[i]&lt;a[j] || j&gt;R))s2[k] = a[i++];</span><br><span class="line">        else s2[k] = a[j++], ans += mid - i + 1;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">int main() &#123;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    for (int i = 1; i &lt;= n; i++) &#123;</span><br><span class="line">        cin&gt;&gt;a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    cin &gt;&gt; p;</span><br><span class="line">    s2[0] = 0;</span><br><span class="line">    for (int i = 1; i &lt;= n; i++) &#123;</span><br><span class="line">        s2[i] = s2[i-1] + a[i] - p;</span><br><span class="line">    &#125;</span><br><span class="line">    reverse(s2 + 1, s2 + n + 1);//翻转后求逆序对</span><br><span class="line">    s2[n+1] = 0;</span><br><span class="line">    msort(1, n+1);</span><br><span class="line">    cout &lt;&lt; ans;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>(比较有思维难度的题)</p>
<hr />
<h2
id="d.分类讨论实数二分icpc2020-shanghai-r-walker">D.分类讨论+实数二分[ICPC2020
Shanghai R Walker]</h2>
<p><strong><em>Q:给出一段区间[0,n],给定两个点的位置<span
class="math inline">\(\boldsymbol
{x_{A},x_{B}}\)</span>它们分别能以<span
class="math inline">\(\boldsymbol{v_{A},v_{B}}\)</span>的速率在区间内移动，速度的方向变化认为是瞬时的，A、B的移动会留下轨迹，求出这个区间被轨迹完全覆盖的最短时间。</em></strong></p>
<p>乍一看有点像物理题。这题的确有种高考板块模型的味道，即对A、B的运动状态详尽分类，搜索出每种状态的时间后取最小值。下面对状态进行分类：(不妨设
<span class="math inline">\(x_{A}&gt;x_{B}\)</span> )</p>
<p>A.二者相向而行，此时完全覆盖的时间为:</p>
<p><span class="math display">\[
min(\frac{x_{B}}{v_{B}},\frac{n-x_{A}}{v_{A}}) \tag{D.1}
\]</span></p>
<p>B.二者之一单独完全覆盖了区间，此种情况的最小时间为</p>
<p><span class="math display">\[
min(\frac{min(n-x_A,x_{A})+n}{v_{A}},\frac{min(n-x_B,x_{B})+n}{v_{B}})
\tag{D.2}
\]</span></p>
<p>C.二者各自负责自己的一边。设分界线为 <span
class="math inline">\(mid\)</span> ,则此种情况的最小值为</p>
<p><span class="math display">\[
max(\frac{min(x_{A}-mid,n-x_{A})+n-mid}{v_{A}},\frac{min(x_{B},mid-x_{B})+x_{B}}{v_{B}})
\tag{D.3}
\]</span></p>
<p>这种情况不太好直接算出来，因此对 <span
class="math inline">\((D.3)\)</span> 式的 <span
class="math inline">\(mid\)</span> 在 <span
class="math inline">\([x_{B},x_{A}]\)</span> 上进行二分搜索。</p>
<p>最后，上三式取最小值即可。</p>
<p>代码：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;cmath&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">int main() &#123;</span><br><span class="line">	int t; cin &gt;&gt; t;</span><br><span class="line">	while (t--) &#123;</span><br><span class="line">		double n, x1, v1, x2, v2; cin &gt;&gt; n &gt;&gt; x1 &gt;&gt; v1 &gt;&gt; x2 &gt;&gt; v2;</span><br><span class="line">		if (x1 &lt; x2) &#123;</span><br><span class="line">			swap(x1, x2);</span><br><span class="line">			swap(v1, v2);</span><br><span class="line">		&#125;</span><br><span class="line">		double ans = 0;</span><br><span class="line">		ans = min(min((2 * n - x1), n + x1) / v1, min((n + x2), 2 * n - x2) / v2);</span><br><span class="line">		ans = min(ans, max(x1 / v1, (n - x2) / v2));</span><br><span class="line">		double l = x2;</span><br><span class="line">		double r = x1;</span><br><span class="line">		while (r - l &gt;= 1e-7) &#123;</span><br><span class="line">			double mid = (l + r) / 2;</span><br><span class="line">			double m = (min(n - x1, x1 - mid) + n - mid) / v1; double q = (min(mid - x2, x2) + mid) / v2;</span><br><span class="line">			ans = min(ans, max(m, q));</span><br><span class="line">			if (m &gt; q) l = mid;</span><br><span class="line">			else r = mid;</span><br><span class="line">		&#125;</span><br><span class="line">		printf(&quot;%.10lf\n&quot;, ans);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="e.函数stolz定理华师数分">E.函数stolz定理[华师数分]</h2>
<p><strong><em>Q：设函数<span class="math inline">\(\boldsymbol
f\)</span>定义在<span
class="math inline">\(\boldsymbol{(a,+\infty)}\)</span>上，<span
class="math inline">\(\boldsymbol f\)</span>在每一个有限区间<span
class="math inline">\(\boldsymbol
{(a,b)}\)</span>上有界，并满足</em></strong></p>
<p><span class="math display">\[
\lim_{x\rightarrow+\infty}{(f(x+1)-f(x))}=A.
\]</span></p>
<p><strong><em>证明</em></strong></p>
<p><span class="math display">\[
\lim_{x\rightarrow+\infty}\frac{f(x)}{x}=A. \tag{E}
\]</span></p>
<p>证明：由题</p>
<p><span class="math display">\[
\forall \varepsilon,\exists M&gt;0,\forall x&gt;M,\left| f(x+1)-f(x)-A
\right|&lt; \varepsilon \tag{E.1}
\]</span></p>
<p>令</p>
<p><span class="math display">\[
g(x)=\frac{f(x)}{x}
\]</span></p>
<p>设<span class="math inline">\(f(x)\)</span>的界为<span
class="math inline">\(k\)</span>，并注意到</p>
<p><span class="math display">\[
\left| \frac{f(x)}{x}-A \right|=\frac{1}{x}\left|f(x)-Ax\right|
\tag{E.2}
\]</span></p>
<p>对<span class="math inline">\((E.2)\)</span>式右端进行构造</p>
<p><span class="math display">\[
\frac{1}{x}\left|f(x)-Ax\right|=\frac{1}{x}\left|\sum_{i=x-[x-M]+1}^{x}(f(i)-f(i-1)-A)+f(x-[x-M])-A(x-[x-M])\right|
\tag{E.2&#39;}
\]</span></p>
<p>结合</p>
<p><span class="math display">\[
x-M-1&lt;[x-M]\le x-M\\ M\le x-[x-M]&lt;M+1
\]</span></p>
<p>以及<span class="math inline">\((E.2&#39;)\)</span>、<span
class="math inline">\((E.1)\)</span>和绝对值不等式易见</p>
<p><span class="math display">\[
\begin{aligned} |g(x)-A| &amp;\leq
\frac{1}{x}\{\sum_{i=x-[x-M]+1}^{x}|f(i)-f(i-1)-A|+|f(x-[x-M])|+|A(x-[x-M])|
\}\\  &amp;&lt; \frac{1}{x}([x-M]\varepsilon+|A|(M+1)+k))\\
&amp;=\frac{[x-M]\varepsilon}{x}+\frac{k+(M+1)|A|}{x}\tag{E.3}
\end{aligned}
\]</span></p>
<p>考察等式右端第二项，注意到分式上方皆为常数，即有<span
class="math inline">\(\lim_{x\rightarrow+\infty}\frac{k+(M+1)|A|}{x}=0.\)</span>从而存在正数<span
class="math inline">\(M\)</span>,当<span
class="math inline">\(x&gt;M\)</span>时，对于任给正数<span
class="math inline">\(\varepsilon\)</span> ，有 <span
class="math inline">\(\frac{k+(M+1)|A|}{x}&lt; \varepsilon\)</span>
.因此当<span class="math inline">\(x&gt;M\)</span>时，有</p>
<p><span class="math display">\[
|g(x)-A|&lt;\frac{[x-M]\varepsilon}{x}+\frac{k+(M+1)|A|}{x}&lt;2\varepsilon\tag{E.4}
\]</span></p>
<p>这就证明了<span class="math inline">\((E)\)</span>.<span
class="math inline">\(\ \ \ \square\)</span></p>
<p>评注：这题证明方法类似stolz定理的证明，即依照极限定义式进行放缩。但由于函数非离散，需要对末端进行一些处理才能达到目的。</p>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>acm</tag>
        <tag>分析</tag>
      </tags>
  </entry>
  <entry>
    <title>群论</title>
    <url>/2024/07/09/%E6%8A%BD%E4%BB%A3%EF%BC%9A%E7%BE%A4%E8%AE%BA/</url>
    <content><![CDATA[<h1 id="群论基础补足"><a href="#群论基础补足" class="headerlink" title="群论基础补足"></a>群论基础补足</h1><h2 id="群的陪集和分拆"><a href="#群的陪集和分拆" class="headerlink" title="群的陪集和分拆"></a>群的陪集和分拆</h2><blockquote>
<p>定义1：设群 $H&lt;G$，对任意 $a \in G$ ，称</p>
<script type="math/tex; mode=display">
aH=\{ax:x\in H\} \tag1</script><p>为 $G$ 关于 $H$ 的左（右）陪集.</p>
</blockquote>
<p>可以证明陪集构成群的一个分拆.先引入如下引理</p>
<blockquote>
<p>引理1：设映射</p>
<script type="math/tex; mode=display">
f:H\to aH  \\  x \to ax</script><p>该映射为满射.</p>
</blockquote>
<p><em>证明：</em></p>
<p><em>只需证对任意 $x,y \in H$ 有 $x=y \iff f(x)=f(y)$.充分性显然.必要性根据群的消去律也是显然的.</em></p>
<p>同时可以有如下论断</p>
<blockquote>
<p>论断1：对于群 $H&lt;G$ ，不同元素 $a,b$ 生成的陪集 $aH,bH$ 要么相等，要么不交。</p>
</blockquote>
<p><em>证明：</em></p>
<p><em>假设 $aH \cap bH \neq \empty$， $ah_1 = bh_2 \in aH \cap bH$，由对称性只需证 $aH \subset bH$. 任取 $ah \in aH$，就有 $ah = (bh_2h_1^{-1})h=b(h_2h_1^{-1}h) \in bH$（利用假设）.这就完成了证明.</em></p>
<p>因此，陪集构成了群的一个分拆.下面由陪集引入商集的概念</p>
<blockquote>
<p>定义2：设群 $H&lt;G$ ，将 $G$ 关于 $H$ 的所有左陪集构成的集合</p>
<script type="math/tex; mode=display">
S:=\{aH:a\in G\} \tag2</script><p>称作 $G$ 关于 $H$ 的商集，记作</p>
<script type="math/tex; mode=display">
G/H</script><p>同时称这个商集的大小为 $H$ 在 $G$ 中的指数，记作</p>
<script type="math/tex; mode=display">
[G:H]=|G/H| \tag3</script></blockquote>
<p>综合上述引理及命题，我们就有</p>
<blockquote>
<p>定理1（拉格朗日定理）：对于群 $H&lt;G$，有</p>
<script type="math/tex; mode=display">
|G|=[G:H]|H| \tag4</script></blockquote>
<p><em>证明：</em></p>
<p><em>$|G|=|\cup<em>{a \in I}aH|=\sum</em>{a \in I}|aH|=\sum_{a \in I}|H|=[G:H]|H|$，其中 $I$ 为陪集不交的元素集合，它的大小就是指数.</em></p>
<p>这就有了子群的阶整除群的阶的推论，这一点是显而易见的.</p>
<p>我们考察何时两个陪集会相等，有如下引理</p>
<blockquote>
<p>引理2：对于 $G&lt;H$，陪集 $aH=bH$ 的充要条件是 $b^{-1}a \in H$.</p>
</blockquote>
<p><em>证明：</em></p>
<p><em>考虑等价转换，只需证陪集 $aH=H$ 的充要条件是 $a \in H$.</em></p>
<p><em>必要性：根据群的封闭性立得 $aH \subset H$.同理有 $a^{-1}H \subset H$.立得结论.</em></p>
<p><em>充分性： $a=ae \in aH$.</em></p>
<p>根据上面的定理，我们有关于子群的重要定理</p>
<blockquote>
<p>定理2：对于群 $K&lt;G&lt;H$ 有</p>
<script type="math/tex; mode=display">
[H:K]=[G:K][H:G] \tag5</script></blockquote>
<p><em>证明：</em></p>
<p><em>根据 $(4)$，这是显然的.</em></p>
<p>我们考察两个群 $H,K$ 的元素互相乘积所构成的集合</p>
<script type="math/tex; mode=display">
HK=\{hk:h\in H,k\in K\}</script><p>一般地，群的乘积不是一个群.关于群的乘积是否是群有如下命题</p>
<blockquote>
<p>论断2：群的乘积是群当且仅当 $HK=KH$.</p>
</blockquote>
<p><em>证明：</em></p>
<p><em>充分性：设 $h_1k_1h_2k_2=e$，显然有 $h_2k_2=k_1^{-1}h_1^{-1} \in KH$，根据对称性立得.</em></p>
<p><em>必要性：与群的定义一一对照立得.</em></p>
<p>我们考察乘积的大小，有如下定理</p>
<blockquote>
<p>定理3：对于群 $K,H&lt;G$，有</p>
<script type="math/tex; mode=display">
|HK|=\frac{|H||K|}{|H\cap K|} \tag6</script></blockquote>
<p><em>证明：</em></p>
<p><em>微调至</em></p>
<script type="math/tex; mode=display">
\frac{|HK|}{|K|}=\frac{|H|}{|H\cap K|} \tag{6'}</script><p><em>等号右端可依照陪集分割 $H$ 构成一个指标集 $I$ ，使得其中元素陪集不交并为 $H$.</em></p>
<script type="math/tex; mode=display">
H=\bigsqcup_{h\in I}h(H \cap K)\tag7</script><p><em>等式左端同样可以写成类似形式：</em></p>
<script type="math/tex; mode=display">
HK=\bigsqcup_{h\in I'} hK\tag8</script><p><em>注意，此时不需要关心 $HK$ 是否构成一个群.我们考虑证明 $|I|=|I’|$.尝试构造映射</em></p>
<script type="math/tex; mode=display">
f:h(K)\to h(H \cap K)\tag9</script><p><em>只需证对任意 $xK,yK：x,y\in H$ 有 $xK=yK \iff f(xK)=f(yK)$.</em></p>
<p><em>设 $xK=yK$，根据引理2，我们有 $y^{-1}x \in K$，因此有 $y^{-1}x \in H \cap K$.再次根据引理2即可得证.</em></p>
<hr>
<h2 id="正规子群和商群"><a href="#正规子群和商群" class="headerlink" title="正规子群和商群"></a>正规子群和商群</h2><p> 本节的最终目标是为陪集赋予群的结构.</p>
<p>首先定义左（右）陪集的乘法</p>
<script type="math/tex; mode=display">
(aH)(bH)=(abH) \tag{10}</script><p>考察这个定义是否是良定义的，就需要有 $a’H=aH,b’H=bH$ 推出 $a’b’H=abH$ .一般而言这个条件是不成立的，我们需要额外添加条件以达成目的.下面给出正规子群</p>
<blockquote>
<p>定义3：若 $N&lt;G$，$\forall a\in G$</p>
<script type="math/tex; mode=display">
aN=Na \tag{11}</script><p>称 $N$ 是 $G$ 的正规子群，记作</p>
<script type="math/tex; mode=display">
N \lhd G</script></blockquote>
<p>下面我们会看到正规子群的性质是非常良好的.它为陪集的乘法赋予了良定义.</p>
<blockquote>
<p>论断2：对于 $G$ 的正规子群 $N$，形如 $(10)$ 的定义是良定义的.</p>
</blockquote>
<p><em>证明：这里直接将 $(10)$ 看作群的乘法，有 $aNbN=abNN=abN$，其中最后一步可以根据封闭性和单位元分别推出左包含和右包含.这就由 $G$ 的乘法的良定义推出了 $(10)$ 的良定义.</em></p>
<p>这样，我们就可以构造出陪集的群：商群</p>
<blockquote>
<p>定理4：设 $N \lhd G$，则 $G/N$ 在由 $(10)$ 定义的乘法下构成群 $(G/N,\times)$，我们称为商群.</p>
</blockquote>
<p><em>证明：我们一一验证</em></p>
<p><em>单位元：$N$ 是单位元，显然由 $\forall a \in G,(aN)(eN)=aN$.反向同理.</em></p>
<p><em>逆元：$\forall a\in G,(aN)(a^{-1}N)=(aa^{-1})N=N$</em></p>
<p><em>封闭性：根据陪集的分拆性质即得.</em></p>
<p><em>结合律：不难由 $G$ 的结合律推出.</em></p>
<p>为了更好地判别正规子群，我们给出如下引理</p>
<blockquote>
<p>引理3：以下论断等价</p>
<script type="math/tex; mode=display">
H \lhd G</script><script type="math/tex; mode=display">
\forall a\in G,aNa^{-1}\subset N \tag{12}</script><script type="math/tex; mode=display">
\forall a\in G,\forall n \in N,ana^{-1} \in N \tag{13}</script></blockquote>
<p><em>证明：$(12)$ 与 $(13)$ 等价在集合上是显然的，现在只证 $(12)$ 和 $(11)$ 等价.</em></p>
<p><em>充分性：根据定义立得 $aNa^{-1}=N \subset N$.</em></p>
<p><em>必要性：根据定义立得 $aN \sub Na^{-1}$，$(12)$ 中将 $a$ 替换为 $a^{-1}$ 立得 $a^{-1}N(a^{-1})^{-1}=a^{-1}Na\subset N$，那么结论就是显然的了.</em></p>
<p>一般而言， $(12),(13)$ 在实践中能更好地利用正规子群的性质.</p>
<p>利用上面的铺垫，我们有几个简单的论断</p>
<blockquote>
<p>论断3：任意个正规子群的交还是正规子群.</p>
</blockquote>
<p><em>利用 $(13)$ 就能简洁地证明，这里略去证明.</em></p>
<blockquote>
<p>论断4：对于群 $G$，有 ${e} \lhd G,G \lhd G$.</p>
<p>论断5：交换群的子群都是正规子群.</p>
</blockquote>
<p><em>这些论断的证明都是平凡的，略去.</em></p>
<hr>
<h2 id="群的同构定理"><a href="#群的同构定理" class="headerlink" title="群的同构定理"></a>群的同构定理</h2><p>接下来是目前为止最重要的成果</p>
<blockquote>
<p>定理5（第一同构定理）：设 $f:G \rightarrow H$ 是群 $G$ 到 $H$ 的同态，则有</p>
<script type="math/tex; mode=display">
\operatorname{ker}(G) \lhd G</script><p>且</p>
<script type="math/tex; mode=display">
G/\operatorname{ker}(G) \simeq \operatorname{im}(f) \tag{14}</script></blockquote>
<p><em>证明：</em></p>
<p><em>首先，需要证明 $\operatorname{ker}(G) \lhd G$，设 $a\in G,n \in \operatorname{ker}(G)$，有</em></p>
<script type="math/tex; mode=display">
f(ana^{-1})=f(a)e'f(a)^{-1}=e'</script><p><em>根据引理3，结论得证.设 $N= \operatorname{ker}(G)$，我们构造映射</em></p>
<script type="math/tex; mode=display">
F:G/N \rightarrow \operatorname{im}(f)</script><p><em>定义为</em></p>
<script type="math/tex; mode=display">
F(aN)=f(a),a\in G \tag{15}</script><p><em>验证是否良定义，即对于 $aN=a’N$，是否有 $f(a)=f(a’)$。我们立刻有 $aa’^{-1} \in N$，$f(aa’^{-1})=e’$，从而 $f(a)f(a’^{-1})=e’,a^{-1}=a’^{-1},a=a’$.这就是良定义的.</em></p>
<p><em>下面验证 $F$ 的同态、单射、满射.</em></p>
<p><em>同态：</em></p>
<script type="math/tex; mode=display">
F(aN)F(bN)=f(a)f(b)=f(ab)=F(abN)=F(aNbN)</script><p><em>单射：只需验证 $\operatorname{ker}(aN) = {N}$.设 $F(aN)=e’$，即 $f(a)=e’$，从而 $a\in N$，因此 $aN=N$.</em></p>
<p><em>满射：设 $a’\in H$，取 $a:f(a)=a’$，即得 $F(aN)=f(a)=a’$.</em></p>
<p><em>综上，$F$ 是一个群同构，因此定理得证.</em></p>
<p>定理表明了从任意的群同态，可以构造出群同构.这是非常良好的性质.</p>
<p>下面的例子表明了定理（可能）在算法竞赛中的应用.</p>
<p>设有群同态 $f:C<em>7 \rightarrow C</em>{16}$，$f$ 必然是平凡的.这是因为根据定理，必然有 $|\operatorname{im}(f)| \mid|C<em>{16}|$（子群）和 $|\operatorname{im}(f)| \mid|C</em>{7}|$.第二点是因为根据定理，</p>
<script type="math/tex; mode=display">
|G|=|\operatorname{im}(f)||\operatorname{ker}(G)| \tag{16}</script><p>从而 $\operatorname{im}(f) \mid \gcd(16,9)$，这就说明了平凡性.</p>
<p>从第一同构定理可以推出第二、第三同构定理.</p>
<blockquote>
<p>定理6（第二同构定理）：设 $H&lt;G,N \lhd G$，则 $H\cap N \lhd H，N\lhd HN$，且</p>
<script type="math/tex; mode=display">
H/(H \cap N)\simeq HN/N \tag{17}</script></blockquote>
<p><em>证明：</em></p>
<p><em>首先需要证明前两条.</em></p>
<p><em>首先令 $h \in H,x\in H\cap N$，有 $hxh^{-1}\in H$，同时根据 $N$ 的正规性， $hxh^{-1} \in N$.这就证明了第一条.</em></p>
<p>其次，需要证明 $HN$ 是个群，根据论断2和 $N$ 的正规性就可以得出.</p>
<p><em>再令 $hn \in HN,n’\in N$，则 $hnn’(hn)^{-1}=hnn’n^{-1}h^{-1}$，$nn’n^{-1}\in N$，这就证明了第二条.</em></p>
<p><em>于是可以构造映射</em></p>
<script type="math/tex; mode=display">
H \rightarrow HN/N : f(h)=hN \tag{18}</script><p><em>良定义性由引理2保证，同态性由 $H$ 的子群性质保证，下面证明 $\operatorname{ker}(f)= H\cap N$.这是因为 $\forall h \in H,hN=N \Rightarrow h\in N,h \in H \cap N$.根据第一同构定理，这就完成了证明.</em></p>
<p>这就是定理3有了正规性的更强形式.</p>
<blockquote>
<p>定理7（第三同构定理）：设 $N\lhd G,M \lhd G,M&lt;N$,则 $N/M \lhd G/M$，且</p>
<script type="math/tex; mode=display">
(G/M)/(N/M) \simeq G/N \tag{19}</script></blockquote>
<p><em>证明：</em></p>
<p><em>先证明第一条.首先，我们要证明 $N/M$ 是一个群，也就是证明 $M$ 关于 $N$ 的正规性.这完全可以由 $M$ 关于 $G$ 的正规性保证.</em></p>
<p><em>其次，我们取 $nM \in N/M,gM \in G/M$，则</em></p>
<script type="math/tex; mode=display">
nMgM(nM)^{-1}=ngn^{-1}M=g'M\in G/M,g'\in G \tag{20}</script><p><em>这就完成了正规性的证明.</em></p>
<p><em>下面证明 $(19)$，我们构造映射</em></p>
<script type="math/tex; mode=display">
G/M \rightarrow G/N:f(gM)=gN \tag{21}</script><p><em>良定义性由引理2保证，同态性由 $G$ 的运算保持，只需证明 $\operatorname{ker}(f)=N/M$.我们设 $f(nM)=N$，根据商集的定义，自然有 $nM \in N/M$.从而根据第一同构定理，这就完成了证明.</em></p>
<p>这就是定理2有了正规性的更强形式.</p>
<hr>
<h2 id="群作用"><a href="#群作用" class="headerlink" title="群作用"></a>群作用</h2><p>先回顾置换群的概念</p>
<blockquote>
<p>论断4：对于集合 $S$，所有双射 $f_i:S\to S$ 构成的集合 $\operatorname{Perm}(S)$ 与复合运算 $ \circ$ 构成群，记为 $(\operatorname{Perm}(S),\circ)$.</p>
</blockquote>
<p>略去证明.</p>
<p>我们现在从一个最简单的双射引出群作用的概念.设</p>
<script type="math/tex; mode=display">
f_x:G\to G \tag{22}</script><p>是一族群 $G$ 到自身的映射，定义为</p>
<script type="math/tex; mode=display">
f_x(y)=xy \tag{23}</script><p>显然对于固定的 $x$ 这是一个双射.也就是说，固定一个 $x$ 我们可以得到一个 $\operatorname{Perm}(G)$ 的元素 $f_x$，这启发我们枚举所有 $G$ 的元素，它们都可以对应上（或者说是映射到） $\operatorname{Perm}(G)$ 的一个元素（这个元素的类型是映射）.形式化地，</p>
<script type="math/tex; mode=display">
g(x):=f_x:G\to G \tag{24}</script><p>同时注意到这样的映射是群到群的映射，我们自然而然地猜测这个映射是个群同态.即证</p>
<script type="math/tex; mode=display">
g(xy)=g(x)\circ g(y) \tag{25}</script><p>注意，等号两端都是映射.为了证明映射相同，我们即需证</p>
<script type="math/tex; mode=display">
\forall z \in G,g(xy)|_z=(g(x)\circ g(y))|_z \tag{26}</script><p>而根据定义显然有</p>
<script type="math/tex; mode=display">
g(xy)|_z=(xy)z=x(yz)=g(x)|_{g(y)|_z}=(g(x) \circ g(y))|_z \tag{27}</script><p>这就完成了证明.</p>
<p>我们希望研究更多类似于这样的双射 $f_x$，能找到到一个置换群的同态 $\phi$ ，于是我们引入了以下定义</p>
<blockquote>
<p>定义4：我们称 $\phi(x)$ 是群 $G$ 在集合 $S$ 上的群作用，若它满足存在一族双射 $f_i$</p>
<script type="math/tex; mode=display">
\phi(x):G\to \operatorname{Perm}(S),\phi(x):=f_x(G\to S) \tag{28}</script><p>是一个 $G$ 到 $\operatorname{Perm}(S)$ 的群同态.在不引起混淆的情况下，我们将 $\phi(x)|_s$ 简记为 $x \cdot s$ 或 $xs$.</p>
</blockquote>
<p>定义可能有些抽象，理解时可以先抛开映射的具体内涵，把它理解成一个众多数据类型中的一种，就非常好理解了.群作用的定义包括 $f_x$ 和 $\phi$ 两个映射.</p>
<p>必须注意上面指的映射族必须是双射.</p>
<p>上述的左乘作用就是一个 $G \to G$ 的群作用.我们再举一个更加重要的例子.</p>
<blockquote>
<p>论断5：定义</p>
<script type="math/tex; mode=display">
f_x:G \to G,f_x(y):=xyx^{-1}\\
\phi(x):=f_x(G \to G) \tag{29}</script><p>是共轭作用.它是一个 $G \to G$ 的群作用.</p>
</blockquote>
<p><em>证明：</em></p>
<p><em>双射是显然的，因为</em></p>
<script type="math/tex; mode=display">
f_x\circ f_{x^{-1}}(y)=y \tag{30}</script><p><em>也就是说任意的 $f_x$ 都存在逆映射.并且显然地有</em></p>
<script type="math/tex; mode=display">
\forall z\in G,\phi(x)\circ \phi(y)|_z=xyzy^{-1}x^{-1}=xyz(xy)^{-1}=\phi(xy)|_z \tag{31}</script><p><em>这就证明了论断.</em></p>
<p>并且共轭作用还有一个很好的性质</p>
<blockquote>
<p>论断6：上述 $f_x$ 是一个自同构.</p>
</blockquote>
<p>熟读上面证明就会发现这是显然的，略去证明.</p>
<blockquote>
<p>定义5：形如上述 $f_x$ 的自同构称为内自同构，其余的同构称为外自同构.</p>
</blockquote>
<p>回到群作用.我们有下述引理</p>
<blockquote>
<p>引理4：$\phi$ 是一个群作用与同时满足下述条件等价</p>
<ol>
<li><script type="math/tex; mode=display">
\forall s\in S,e\cdot s=s \tag{32.1}</script></li>
<li><script type="math/tex; mode=display">
\forall x,y \in G,s\in S,x\cdot (y \cdot s)=(xy) \cdot s \tag{32.2}</script></li>
</ol>
</blockquote>
<p><em>证明：</em></p>
<p><em>正推是非常显然的.反推的同态性由第二式保证，我们只需证明所有的 $\phi(x)$ 都存在逆映射，也就是它是双射.不难发现</em></p>
<script type="math/tex; mode=display">
x\cdot( x^1 \cdot s)=(xx^{-1})\cdot s=e \cdot s=s\tag{33}</script><p><em>这就完成了证明.（注意第一条是不可或缺的）</em></p>
<hr>
<h2 id="轨道-稳定化子定理"><a href="#轨道-稳定化子定理" class="headerlink" title="轨道-稳定化子定理"></a>轨道-稳定化子定理</h2><p>我们从一个数数的例子来引出轨道-稳定化子定理.</p>
<p>考虑一个正 $n$ 边形，它的每个顶点互不相同，定义为 $A,B,C,\dots$ .定义状态 $P=(S_1,S_2,\dots,S_n)$ 为从某个固定的位置点开始顺时针数的顶点顺序.再定义翻转操作为沿着对称轴翻转的操作 $f(P)=P’$，旋转操作为将图形顺时针旋转使得每个顶点转到下一个顶点的操作 $g(P)=P’$ .说人话就是每次操作都要保证与上一个形状相比形状不变，变的只有顶点的顺序.我们的任务是找出有多少种这样的操作.</p>
<p>我们枚举可以知道 $n=3,4,5$ 时答案是 $6,8,10$，于是我们猜测答案就是 $2n$ .其实答案就是 $2n$，因为由轴对称和中心对称，旋转和翻转操作各有 $n$ 种.</p>
<p>我们尝试用群论的语言解释对称性.我们首先注意到所有操作构成的集合关于操作复合关系构成群，这是显然的，那么我们任取一个顶点 $s$，定义群作用为操作 $f$ 导致状态 $s$ 变到 $s’$ 的映射.我们发现有两个变换很特殊，它们把 $s$ 映回了自身，也就是旋转一周和绕过 $s$ 的轴的翻转.同时，$s$ 总共能被映射到 $n$ 个顶点.于是我们惊奇地发现答案就是这两个结果的乘积.</p>
<p>这是否是偶然？不是.这是由群作用的对称性得到的自然而然的结果.于是我们抽象出上述讨论种特殊的集合</p>
<blockquote>
<p>定义6：设 $\phi:(G,\times)\to (\operatorname{Perm}(S),\circ)$ 是一个 $G$ 在 $S$ 上的群作用.取 $s\in S$，则定义</p>
<script type="math/tex; mode=display">
\operatorname{Orb}(s)=\{x \cdot s|x\in G \} \tag{33}</script><p>为 $s$ 的轨道，</p>
<script type="math/tex; mode=display">
\operatorname{Stab}(s)=\{x |x \cdot s=s,x\in G\} \tag{34}</script><p>为 $s$ 的稳定化子.（注意，上述点乘都是群作用）</p>
</blockquote>
<p>也就是说，上面关于正 $n$ 边形的讨论中，映射回自身的操作就是 $s$ 的稳定化子，所有 $n$ 个点就是 $s$ 的轨道.既然定义为“轨道”了，我们自然猜想它们互不相交</p>
<blockquote>
<p>论断7：设 $\phi:(G,\times)\to (\operatorname{Perm}(S),\circ)$ 是一个 $G$ 在 $S$ 上的群作用，且 $s,s’\in S$，我们有 $s$ 和 $s’$ 的轨道要么相等要么不交，也就是 $S$ 所有元素的轨道构成集合 $S$ 的一个分拆.</p>
</blockquote>
<p><em>证明：</em></p>
<p><em>设 $s’’ \in \operatorname{Orb}(s)\cap\operatorname{Orb}(s’)$，对应的群作用分别为 $x,x’$，且有 $xs=x’s’=s’’$，再取 $ys\in \operatorname{Orb}(s)$ 即有</em></p>
<script type="math/tex; mode=display">
ys=(yx^{-1})xs=(yx^{-1})s''\in \operatorname{Orb}(s') \tag{35}</script><p><em>根据对称性就可以得到证明.至于分拆，只需注意到每个元素至少属于它自身的轨道即可.</em></p>
<p>注意到稳定化子中的元素都是 $G$ 中的元素，我们自然想去证明它是 $G$ 的子群</p>
<blockquote>
<p>论断8：设 $\phi:(G,\times)\to (\operatorname{Perm}(S),\circ)$ 是一个 $G$ 在 $S$ 上的群作用，$s\in S$，则 $s$ 的稳定化子是 $G$ 的子群.</p>
</blockquote>
<p><em>证明：</em></p>
<p><em>单位元：$es=s$ （引理4）</em></p>
<p><em>再任取 $x,y\in \operatorname{Stab}(s)$，我们要证 $xy^{-1}s \in \operatorname{Stab}(s)$.考虑群作用的同态性质，我们有</em></p>
<script type="math/tex; mode=display">
y^{-1}(ys)=y^{-1}s=es=s \tag{36}</script><p><em>从而 $y^{-1}\in \operatorname{Stab}(s)$，再根据引理4，于是引理得证.</em></p>
<blockquote>
<p>引理6：设 $\phi:(G,\times)\to (\operatorname{Perm}(S),\circ)$ 是一个 $G$ 在 $S$ 上的群作用，则 $xs=ys$ 当且仅当 $x^{-1}y \in \operatorname{Orb}(s)$</p>
</blockquote>
<p>证明：</p>
<p>同时左乘 $x^{-1}$ 即可得知.</p>
<p>于是我们就有了开头猜到的结论</p>
<blockquote>
<p>定理8（轨道-稳定化子定理）：设 $\phi:(G,\times)\to (\operatorname{Perm}(S),\circ)$ 是一个 $G$ 在 $S$ 上的群作用，$s\in S$，则存在 $G/\operatorname{Stab(s)}$ 到 $\operatorname{Orb}(s)$ 的双射.</p>
<p>特别地，若 $G$ 是有限群，则</p>
<script type="math/tex; mode=display">
|G|=|\operatorname{Stab}(s)||\operatorname{Orb}(s)| \tag{37}</script></blockquote>
<p><em>证明：</em></p>
<p><em>定义 $f:G/\operatorname{Stab(s)} \to \operatorname{Orb}(s)$ 为 $f(x \operatorname{Stab(s)}) = xs$.</em></p>
<p><em>首先证明 $f$ 是良定义的.根据引理6，$x\operatorname{Orb}(s)=y\operatorname{Orb}(s) \iff x^{-1}y \in \operatorname{Orb}(s) \iff xs=ys$ .同时根据充要性可以得出单射性.</em></p>
<p><em>满射根据稳定化子的定义是显然的.从而 $f$ 是个双射.再根据l拉格朗日定理就能得到证明.</em></p>
<p>这样，我们就可以回到开头提出的问题，$|D_n|=|\operatorname{Stab(s)}| |\operatorname{Orb}(s)| = 2n $ 就是显然的了.</p>
<p>轨道-稳定化子定理可以为数论提供非常好的数数方法，就像正 $n$ 边形的例子，只要知道被作用的元素的轨道大小和稳定化子大小就可以算出原群的大小.</p>
]]></content>
      <categories>
        <category>数学</category>
      </categories>
      <tags>
        <tag>代数</tag>
        <tag>群论</tag>
      </tags>
  </entry>
  <entry>
    <title>点集拓扑：拓扑空间</title>
    <url>/2024/07/10/page-4/</url>
    <content><![CDATA[<h1>拓扑空间</h1>
<h2 id="mathbb-r-上的通常拓扑">$ \mathbb R $ 上的通常拓扑</h2>
<p>为了研究 $ \mathbb R $ 上的通常拓扑，我们先研究开区间和闭区间.</p>
<p>我们已经熟知，开区间是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>U</mi><mo>:</mo><mo>=</mo><mo stretchy="false">{</mo><mi>x</mi><mo>:</mo><mi>a</mi><mo>&lt;</mo><mi>x</mi><mo>&lt;</mo><mi>b</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">U:=\{x:a&lt;x&lt;b\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">b</span><span class="mclose">}</span></span></span></span> ，闭区间是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>V</mi><mo>:</mo><mo>=</mo><mo stretchy="false">{</mo><mi>x</mi><mo>:</mo><mi>a</mi><mo>≤</mo><mi>x</mi><mo>≤</mo><mi>b</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">V:=\{x:a\leq x \leq b\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">b</span><span class="mclose">}</span></span></span></span>.其中 $a,b \in  \mathbb R $ ，也可以取到无穷.下面给出一个与分析中邻域概念雷同的，且在拓扑中常用的定义</p>
<blockquote>
<p>定义1：若 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>∈</mo><mi mathvariant="double-struck">R</mi><mo separator="true">,</mo><mi>ϵ</mi><mo>&gt;</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">x\in  \mathbb R ,\epsilon &gt; 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.88333em;vertical-align:-0.19444em;"></span><span class="mord mathbb">R</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">ϵ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>，则以 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span> 为圆心，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">\epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">ϵ</span></span></span></span> 为半径的开球为</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><mi>B</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>ϵ</mi><mo stretchy="false">)</mo><mo>:</mo><mo>=</mo><mo stretchy="false">{</mo><mi>y</mi><mo>∈</mo><mi mathvariant="double-struck">R</mi><mo>:</mo><mi mathvariant="normal">∣</mi><mi>y</mi><mo>−</mo><mi>x</mi><mi mathvariant="normal">∣</mi><mo>&lt;</mo><mi>ϵ</mi><mo stretchy="false">}</mo></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(1)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">B(x,\epsilon):=\{y\in \mathbb R :|y-x|&lt;\epsilon\} \tag1
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">ϵ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68889em;vertical-align:0em;"></span><span class="mord mathbb">R</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">x</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">ϵ</span><span class="mclose">}</span></span><span class="tag"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">1</span></span><span class="mord">)</span></span></span></span></span></span></p>
</blockquote>
<p>开球与邻域是相同的.</p>
<p>接下来考察开区间的性质</p>
<blockquote>
<p>论断1： <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>U</mi></mrow><annotation encoding="application/x-tex">U</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span></span></span></span> 为一个开区间和以下论述等价： <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∀</mi><mi>x</mi><mo>∈</mo><mi>U</mi><mo separator="true">,</mo><mi mathvariant="normal">∃</mi><mi>ϵ</mi><mo>&gt;</mo><mn>0</mn><mo separator="true">,</mo><mi>B</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>ϵ</mi><mo stretchy="false">)</mo><mo>⊂</mo><mi>U</mi></mrow><annotation encoding="application/x-tex">\forall x \in U,\exists\epsilon&gt;0,B(x,\epsilon)\subset U</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord">∀</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">∃</span><span class="mord mathdefault">ϵ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">ϵ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⊂</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span></span></span></span>.</p>
</blockquote>
<p><em><strong>证明：</strong></em></p>
<p><em>充分性：不失一般性，假设开区间 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>U</mi><mo>:</mo><mo>=</mo><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">U:=(a,b)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">b</span><span class="mclose">)</span></span></span></span> 两端都是实数，对于任给的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span> 只需取 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ϵ</mi><mo>=</mo><mi>min</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi mathvariant="normal">∣</mi><mi>a</mi><mo>−</mo><mi>x</mi><mi mathvariant="normal">∣</mi><mo separator="true">,</mo><mi mathvariant="normal">∣</mi><mi>b</mi><mo>−</mo><mi>x</mi><mi mathvariant="normal">∣</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\epsilon=\min(|a-x|,|b-x|)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">ϵ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop">min</span><span class="mopen">(</span><span class="mord">∣</span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">x</span><span class="mord">∣</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">∣</span><span class="mord mathdefault">b</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">x</span><span class="mord">∣</span><span class="mclose">)</span></span></span></span> 即可满足论述.</em></p>
<p><em>必要性：显然.</em></p>
<p><em>两端存在无穷的情况考虑无穷的极大性即可得证.</em></p>
<p>接下来，我们从开区间中抽象出开集的概念</p>
<blockquote>
<p>定义2：若 $U\subset  \mathbb R $，则称 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>U</mi></mrow><annotation encoding="application/x-tex">U</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span></span></span></span> 是 $ \mathbb R $ 上的开集，当 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>U</mi></mrow><annotation encoding="application/x-tex">U</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span></span></span></span> 满足 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∀</mi><mi>x</mi><mo>∈</mo><mi>U</mi><mo separator="true">,</mo><mi mathvariant="normal">∃</mi><mi>ϵ</mi><mo>&gt;</mo><mn>0</mn><mo separator="true">,</mo><mi>B</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>ϵ</mi><mo stretchy="false">)</mo><mo>⊂</mo><mi>U</mi></mrow><annotation encoding="application/x-tex">\forall x \in U,\exists\epsilon&gt;0,B(x,\epsilon)\subset U</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord">∀</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">∃</span><span class="mord mathdefault">ϵ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">ϵ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⊂</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span></span></span></span> 时.</p>
</blockquote>
<p>注意，开区间是开集的真子集，例如不交开区间的并就不是开区间，但它是开集.</p>
<p>为了引出闭集的概念，我们先引入与分析中极限雷同的极限点概念</p>
<blockquote>
<p>定义3：若 $A\subset  \mathbb R $，称 $x\in  \mathbb R $ 为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span></span></span></span> 的一个极限点，当存在数列 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">{</mo><msub><mi>a</mi><mi>n</mi></msub><mo stretchy="false">}</mo><mo>⊂</mo><mi>A</mi></mrow><annotation encoding="application/x-tex">\{a_n\} \subset A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⊂</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mo><mi>lim</mi><mo>⁡</mo></mo><mi mathvariant="normal">∞</mi></msub><msub><mi>a</mi><mi>n</mi></msub><mo>=</mo><mi>x</mi></mrow><annotation encoding="application/x-tex">\lim_{\infty}a_n=x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mop"><span class="mop">lim</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span>.</p>
</blockquote>
<blockquote>
<p>引理1：若 $A\subset  \mathbb R $，则 $x\in  \mathbb R $ 为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span></span></span></span> 的一个极限点当且仅当 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∀</mi><mi>ϵ</mi><mo>&gt;</mo><mn>0</mn><mo separator="true">,</mo><mi mathvariant="normal">∃</mi><mi>a</mi><mo>∈</mo><mi>A</mi><mo separator="true">,</mo><mi mathvariant="normal">∣</mi><mi>a</mi><mo>−</mo><mi>x</mi><mi mathvariant="normal">∣</mi><mo>&lt;</mo><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">\forall \epsilon&gt;0,\exists a\in A,|a-x|&lt;\epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord">∀</span><span class="mord mathdefault">ϵ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">∃</span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">A</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">∣</span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">x</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">ϵ</span></span></span></span>.</p>
</blockquote>
<p>这是分析中已经熟知的.</p>
<p>下面，我们引出闭区间的重要性质</p>
<blockquote>
<p>论断2：闭区间包含所有的极限点.</p>
</blockquote>
<p><em><strong>证明：</strong></em></p>
<p><em>我们假设存在 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo mathvariant="normal">∉</mo><mi>U</mi></mrow><annotation encoding="application/x-tex">x \notin U</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mord"><span class="mrel">∈</span></span><span class="mord"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.75em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="llap"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="inner"><span class="mord"><span class="mord">/</span><span class="mspace" style="margin-right:0.05555555555555555em;"></span></span></span><span class="fix"></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.25em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span></span></span></span> 是闭区间 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>U</mi><mo>:</mo><mo>=</mo><mo stretchy="false">[</mo><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">U := [a,b]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathdefault">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">b</span><span class="mclose">]</span></span></span></span> 的极限点。考虑对于右端点，存在数列 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">{</mo><msub><mi>a</mi><mi>n</mi></msub><mo stretchy="false">}</mo><mo>⊂</mo><mi>U</mi></mrow><annotation encoding="application/x-tex">\{a_n\} \subset U</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⊂</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mo><mi>lim</mi><mo>⁡</mo></mo><mi mathvariant="normal">∞</mi></msub><msub><mi>a</mi><mi>n</mi></msub><mo>=</mo><mi>x</mi></mrow><annotation encoding="application/x-tex">\lim_{\infty}a_n=x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mop"><span class="mop">lim</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span>，但是我们只要取 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">\epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">ϵ</span></span></span></span> 为一个比 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span></span></span></span> 的距离小的数，就必然有一个 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub><mo>∈</mo><mo stretchy="false">[</mo><mi>k</mi><mo separator="true">,</mo><mi>x</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">a_i \in [k,x]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6891em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">x</span><span class="mclose">]</span></span></span></span>，这里 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi><mo>&gt;</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">k&gt;b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ϵ</mi><mo>=</mo><mi>x</mi><mo>−</mo><mi>k</mi></mrow><annotation encoding="application/x-tex">\epsilon=x-k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">ϵ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span>.这就引出了矛盾.左端点的证明是类似的.</em></p>
<p>我们根据这条性质抽象出闭集的概念</p>
<blockquote>
<p>定义4：若 $V \in \mathbb R $，我们称 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>V</mi></mrow><annotation encoding="application/x-tex">V</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span></span></span></span> 为闭集当 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>V</mi></mrow><annotation encoding="application/x-tex">V</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span></span></span></span> 包含它的所有极限点.</p>
</blockquote>
<p>类似地，闭区间是闭集的真子集.</p>
<p>下面我们证明本节的最重要的成果</p>
<blockquote>
<p>定理1：设 $U\in \mathbb R $ 为闭集，则 $ \mathbb R  - U$ 为开集.反之亦然.</p>
</blockquote>
<p>在证明前，我们必须明确一个概念：集合不一定有开、闭的性质，也就是说非开不一定是闭集，非闭不一定是开集.左开右闭区间就是显而易见的例子.</p>
<p><em><strong>证明：</strong></em></p>
<p><em>我们先设 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>U</mi></mrow><annotation encoding="application/x-tex">U</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span></span></span></span> 为开集，需证 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>V</mi><mo>=</mo><mi mathvariant="double-struck">R</mi><mo>−</mo><mi>U</mi></mrow><annotation encoding="application/x-tex">V= \mathbb R  - U</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.77222em;vertical-align:-0.08333em;"></span><span class="mord mathbb">R</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span></span></span></span> 为闭集.用反证法，假设 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>V</mi></mrow><annotation encoding="application/x-tex">V</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span></span></span></span> 不是闭集，那么 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>V</mi></mrow><annotation encoding="application/x-tex">V</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span></span></span></span> 不包含它的所有极限点，设该极限点为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>∈</mo><mi>U</mi></mrow><annotation encoding="application/x-tex">x\in U</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span></span></span></span>，考虑数列 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">{</mo><msub><mi>a</mi><mi>n</mi></msub><mo stretchy="false">}</mo><mo>∈</mo><mi>V</mi></mrow><annotation encoding="application/x-tex">\{a_n\}\in V</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span></span></span></span>的极限，根据开集的定义，存在一个以该点为圆心的开球完全被 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>U</mi></mrow><annotation encoding="application/x-tex">U</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span></span></span></span> 包含，因此该开球的半径外的数列各值不能以比半径更小的距离 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">\epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">ϵ</span></span></span></span> 逼近该极限点，也就是说必须存在一个或以上的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">a_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 在该开球中，这与假设矛盾.</em></p>
<p><em>另一方面，我们设 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>V</mi></mrow><annotation encoding="application/x-tex">V</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span></span></span></span> 为闭集，需证 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>U</mi><mo>=</mo><mi mathvariant="double-struck">R</mi><mo>−</mo><mi>V</mi></mrow><annotation encoding="application/x-tex">U=  \mathbb R  - V</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.77222em;vertical-align:-0.08333em;"></span><span class="mord mathbb">R</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span></span></span></span> 为开集，用反证法，假设 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>U</mi></mrow><annotation encoding="application/x-tex">U</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span></span></span></span> 不是开集，则存在一个点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span>，它的任意小的开球 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>B</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>ϵ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">B(x,\epsilon)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">ϵ</span><span class="mclose">)</span></span></span></span> 不完全被 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>U</mi></mrow><annotation encoding="application/x-tex">U</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span></span></span></span> 包含.我们设 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi><mo>∈</mo><mi>B</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>ϵ</mi><mo stretchy="false">)</mo><mo>∩</mo><mi>U</mi></mrow><annotation encoding="application/x-tex">y \in B(x,\epsilon) \cap U</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7335400000000001em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">ϵ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∩</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span></span></span></span>，那么我们构造一个数列 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">{</mo><msub><mi>a</mi><mi>n</mi></msub><mo stretchy="false">}</mo><mo>⊂</mo><mi>V</mi></mrow><annotation encoding="application/x-tex">\{a_n\}\subset V</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⊂</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span></span></span></span>，只要取 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">\epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">ϵ</span></span></span></span> 为足够小的值，在这里不失一般性取为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mn>1</mn><mi>n</mi></mfrac></mrow><annotation encoding="application/x-tex">\frac{1}{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>，让每一项满足  <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mi>n</mi></msub><mo>∈</mo><mi>B</mi><mo stretchy="false">(</mo><mi>y</mi><mo separator="true">,</mo><mn>1</mn><mi mathvariant="normal">/</mi><mi>n</mi><mo stretchy="false">)</mo><mo>∩</mo><mi>V</mi></mrow><annotation encoding="application/x-tex">a_n\in B(y,1/n) \cap V</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6891em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mord">/</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∩</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span></span></span></span>，这样 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">a_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 就能以任意大小逼近 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span></span>，那么 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span></span> 就是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>V</mi></mrow><annotation encoding="application/x-tex">V</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span></span></span></span> 的一个极限点，必然是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>V</mi></mrow><annotation encoding="application/x-tex">V</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span></span></span></span> 的元素，这与假设矛盾.</em></p>
<p>这条定理说明开集和闭集是互补的，开集的补集是闭集.</p>
<hr>
<p>现在我们来研究开集和闭集的性质.</p>
<blockquote>
<p>定理2（开集的性质）：</p>
<ol>
<li>空集和 $ \mathbb R $ 是开集.</li>
<li>任意开集的并是开集.</li>
<li>有限开集的交是开集.</li>
</ol>
<hr>
</blockquote>
<p><em><strong>证明：</strong></em></p>
<p><em>性质1是显然的.</em></p>
<p><em>对于性质2，我们设并集为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>U</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">U_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，考虑任意元素 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>∈</mo><msub><mi>U</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">x\in U_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，它至少属于一个开集 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>U</mi></mrow><annotation encoding="application/x-tex">U</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span></span></span></span>，即有对任意开球 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>B</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>ϵ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">B(x,\epsilon)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">ϵ</span><span class="mclose">)</span></span></span></span>，都有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>B</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>ϵ</mi><mo stretchy="false">)</mo><mo>∈</mo><mi>U</mi><mo>⊂</mo><msub><mi>U</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">B(x,\epsilon)\in U \subset U_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">ϵ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⊂</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>.</em></p>
<p><em>对于性质3，设大小为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span> 的开集族 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>U</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">{U_i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span> 的交集为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>U</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">U_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，对任意 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>∈</mo><msub><mi>U</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">x\in U_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，取 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ϵ</mi><mo>=</mo><msub><mo><mi>min</mi><mo>⁡</mo></mo><mrow><mi>i</mi><mo>∈</mo><mi>I</mi></mrow></msub><mo stretchy="false">(</mo><msub><mi>ϵ</mi><mi>i</mi></msub><mo>:</mo><mi>B</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><msub><mi>ϵ</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>⊂</mo><msub><mi>U</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\epsilon = \min_{i \in I}(\epsilon_i:B(x,\epsilon_i) \subset U_i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">ϵ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop"><span class="mop">min</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">∈</span><span class="mord mathdefault mtight" style="margin-right:0.07847em;">I</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.17737em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">ϵ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">ϵ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⊂</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，就有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∀</mi><mi>i</mi><mo>∈</mo><mo stretchy="false">[</mo><mn>1</mn><mo separator="true">,</mo><mi>n</mi><mo stretchy="false">]</mo><mo separator="true">,</mo><mi>B</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>ϵ</mi><mo stretchy="false">)</mo><mo>⊂</mo><mi>B</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><msub><mi>ϵ</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>⊂</mo><msub><mi>U</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">\forall i \in [1,n],B(x,\epsilon)\subset B(x,\epsilon_i)\subset U_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord">∀</span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">n</span><span class="mclose">]</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">ϵ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⊂</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">ϵ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⊂</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，这就完成了证明.</em></p>
<p>注意性质3必须要是有限个开集的交.因为确界原理：无限个数的最小值无法确定.</p>
<p>例如：区间套</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>U</mi><mi>i</mi></msub><mo>=</mo><mo stretchy="false">(</mo><mfrac><mn>1</mn><mi>i</mi></mfrac><mo separator="true">,</mo><mfrac><mn>1</mn><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></mfrac><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">U_i=(\frac1i,\frac{1}{i+1})
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.09077em;vertical-align:-0.7693300000000001em;"></span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathdefault">i</span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord">1</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693300000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span></span></span></span></p>
<p>根据区间套原理，这个开集族交集是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">{</mo><mn>0</mn><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{0\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mclose">}</span></span></span></span>，显然不是开集.</p>
<p>根据对偶性，不难得出以下闭集的性质</p>
<blockquote>
<p>定理3：</p>
<ol>
<li>空集和 $ \mathbb R $ 是闭集.</li>
<li>有限闭集的并是闭集.</li>
<li>任意闭集的交是开集.</li>
</ol>
</blockquote>
<p><em><strong>证明：</strong></em></p>
<p><em>性质1是显然的.</em></p>
<p><em>对于性质2，考虑定理2的性质3，有限闭集的并就是它们补集的交的补集.</em></p>
<p><em>性质3同理.</em></p>
<p>为了熟悉拓扑的语言，我们引入闭包</p>
<blockquote>
<p>定义5： <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span></span></span></span> 的闭包是一个包含 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span></span></span></span> 的所有极限点（闭包点）的集合，记作 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>A</mi><mo stretchy="true">‾</mo></mover><mo>=</mo><mi>c</mi><mi>l</mi><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\overline A = cl(A)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8833300000000001em;vertical-align:0em;"></span><span class="mord overline"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8833300000000001em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathdefault">A</span></span><span style="top:-3.80333em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">c</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mopen">(</span><span class="mord mathdefault">A</span><span class="mclose">)</span></span></span></span>.</p>
</blockquote>
<p>形式化地</p>
<blockquote>
<p>定义5’：</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><mover accent="true"><mi>A</mi><mo stretchy="true">‾</mo></mover><mo>=</mo><mo stretchy="false">{</mo><mi>x</mi><mo>∈</mo><mi mathvariant="double-struck">R</mi><mo>:</mo><mi mathvariant="normal">∀</mi><mi>ϵ</mi><mo>&gt;</mo><mn>0</mn><mo separator="true">,</mo><mi mathvariant="normal">∃</mi><mi>a</mi><mo>∈</mo><mi>A</mi><mo separator="true">,</mo><mi mathvariant="normal">∣</mi><mi>x</mi><mo>−</mo><mi>a</mi><mi mathvariant="normal">∣</mi><mo>&lt;</mo><mi>ϵ</mi><mo stretchy="false">}</mo><mo>=</mo><mo stretchy="false">{</mo><mi>x</mi><mo>∈</mo><mi mathvariant="double-struck">R</mi><mo>:</mo><mi mathvariant="normal">∀</mi><mi>ϵ</mi><mo>&gt;</mo><mn>0</mn><mo separator="true">,</mo><mi>B</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>ϵ</mi><mo stretchy="false">)</mo><mo>∩</mo><mi>A</mi><mo mathvariant="normal">≠</mo><mi mathvariant="normal">∅</mi><mo stretchy="false">}</mo></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(2)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">\overline A = \{x\in \mathbb R:\forall\epsilon&gt;0,\exists a\in A,|x-a|&lt;\epsilon\}=\{x\in \mathbb R:\forall\epsilon&gt;0,B(x,\epsilon) \cap A \neq \emptyset\} \tag2
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8833300000000001em;vertical-align:0em;"></span><span class="mord overline"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8833300000000001em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathdefault">A</span></span><span style="top:-3.80333em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68889em;vertical-align:0em;"></span><span class="mord mathbb">R</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord">∀</span><span class="mord mathdefault">ϵ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">∃</span><span class="mord mathdefault">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">A</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">∣</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">a</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">ϵ</span><span class="mclose">}</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68889em;vertical-align:0em;"></span><span class="mord mathbb">R</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord">∀</span><span class="mord mathdefault">ϵ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">ϵ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∩</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mrel"><span class="mord"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="rlap"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel"></span></span><span class="fix"></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∅</span><span class="mclose">}</span></span><span class="tag"><span class="strut" style="height:1.13333em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">2</span></span><span class="mord">)</span></span></span></span></span></span></p>
</blockquote>
<p>由此，很自然地我们想替换闭集的语言</p>
<blockquote>
<p>引理2：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>V</mi></mrow><annotation encoding="application/x-tex">V</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span></span></span></span> 是 $ \mathbb R  $ 的闭子集当且仅当 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>V</mi><mo>=</mo><mover accent="true"><mi>V</mi><mo stretchy="true">‾</mo></mover></mrow><annotation encoding="application/x-tex">V= \overline V</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8833300000000001em;vertical-align:0em;"></span><span class="mord overline"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8833300000000001em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span></span><span style="top:-3.80333em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span></span></span></span></span></span></span>.</p>
</blockquote>
<p>不证.</p>
<p>接下来我们就可以刻画 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi></mrow><annotation encoding="application/x-tex">R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span></span></span></span> 上的通常拓扑形态</p>
<blockquote>
<p>定义6：设 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>⊂</mo><mi mathvariant="double-struck">R</mi></mrow><annotation encoding="application/x-tex">A \subset  \mathbb R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⊂</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68889em;vertical-align:0em;"></span><span class="mord mathbb">R</span></span></span></span>，我们有</p>
<ol>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span></span></span></span> 的内部</li>
</ol>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><mi mathvariant="normal">Int</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">{</mo><mi>x</mi><mo>∈</mo><mi mathvariant="double-struck">R</mi><mo>:</mo><mi mathvariant="normal">∃</mi><mi>ϵ</mi><mo>&gt;</mo><mn>0</mn><mo separator="true">,</mo><mi>B</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>ϵ</mi><mo stretchy="false">)</mo><mo>⊂</mo><mi>A</mi><mo stretchy="false">}</mo><mo>=</mo><mo stretchy="false">{</mo><mi>x</mi><mo>∈</mo><mi mathvariant="double-struck">R</mi><mo>:</mo><mi mathvariant="normal">∃</mi><mi>ϵ</mi><mo>&gt;</mo><mn>0</mn><mo separator="true">,</mo><mi>B</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>ϵ</mi><mo stretchy="false">)</mo><mo>∩</mo><mi mathvariant="double-struck">R</mi><mo>−</mo><mi>A</mi><mo>=</mo><mi mathvariant="normal">∅</mi><mo stretchy="false">}</mo></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(3)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">\operatorname{Int}(A)  = \{x \in  \mathbb R :\exists \epsilon &gt;0,B(x,\epsilon) \subset A \}=\{x \in  \mathbb R :\exists \epsilon &gt;0,B(x,\epsilon) \cap  \mathbb R -A =\emptyset \} \tag3
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop"><span class="mord mathrm">I</span><span class="mord mathrm">n</span><span class="mord mathrm">t</span></span><span class="mopen">(</span><span class="mord mathdefault">A</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68889em;vertical-align:0em;"></span><span class="mord mathbb">R</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord">∃</span><span class="mord mathdefault">ϵ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">ϵ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⊂</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">A</span><span class="mclose">}</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68889em;vertical-align:0em;"></span><span class="mord mathbb">R</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord">∃</span><span class="mord mathdefault">ϵ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">ϵ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∩</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.77222em;vertical-align:-0.08333em;"></span><span class="mord mathbb">R</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∅</span><span class="mclose">}</span></span><span class="tag"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">3</span></span><span class="mord">)</span></span></span></span></span></span></p>
<ol start="2">
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span></span></span></span> 的外部</li>
</ol>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><mi mathvariant="normal">Ext</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">{</mo><mi>x</mi><mo>∈</mo><mi mathvariant="double-struck">R</mi><mo>:</mo><mi mathvariant="normal">∃</mi><mi>ϵ</mi><mo>&gt;</mo><mn>0</mn><mo separator="true">,</mo><mi>B</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>ϵ</mi><mo stretchy="false">)</mo><mo>⊂</mo><mi mathvariant="double-struck">R</mi><mo>−</mo><mi>A</mi><mo stretchy="false">}</mo><mo>=</mo><mo stretchy="false">{</mo><mi>x</mi><mo>∈</mo><mi mathvariant="double-struck">R</mi><mo>:</mo><mi mathvariant="normal">∃</mi><mi>ϵ</mi><mo>&gt;</mo><mn>0</mn><mo separator="true">,</mo><mi>B</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>ϵ</mi><mo stretchy="false">)</mo><mo>∩</mo><mi>A</mi><mo>=</mo><mi mathvariant="normal">∅</mi><mo stretchy="false">}</mo></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(4)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">\operatorname{Ext}(A)=\{x \in  \mathbb R :\exists \epsilon &gt;0,B(x,\epsilon) \subset  \mathbb R -A \}=\{x \in  \mathbb R :\exists \epsilon &gt;0,B(x,\epsilon) \cap  A =\emptyset \} \tag4
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop"><span class="mord mathrm">E</span><span class="mord mathrm">x</span><span class="mord mathrm">t</span></span><span class="mopen">(</span><span class="mord mathdefault">A</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68889em;vertical-align:0em;"></span><span class="mord mathbb">R</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord">∃</span><span class="mord mathdefault">ϵ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">ϵ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⊂</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.77222em;vertical-align:-0.08333em;"></span><span class="mord mathbb">R</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">A</span><span class="mclose">}</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68889em;vertical-align:0em;"></span><span class="mord mathbb">R</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord">∃</span><span class="mord mathdefault">ϵ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">ϵ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∩</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∅</span><span class="mclose">}</span></span><span class="tag"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">4</span></span><span class="mord">)</span></span></span></span></span></span></p>
<ol start="3">
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span></span></span></span> 的边界</li>
</ol>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><mi mathvariant="normal">∂</mi><mi>A</mi><mo>=</mo><mi mathvariant="double-struck">R</mi><mo>−</mo><mi mathvariant="normal">Int</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo><mo>−</mo><mi mathvariant="normal">Ext</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(5)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">\partial A = \mathbb R-\operatorname{Int}(A)-\operatorname{Ext}(A) \tag5
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.77222em;vertical-align:-0.08333em;"></span><span class="mord mathbb">R</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop"><span class="mord mathrm">I</span><span class="mord mathrm">n</span><span class="mord mathrm">t</span></span><span class="mopen">(</span><span class="mord mathdefault">A</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop"><span class="mord mathrm">E</span><span class="mord mathrm">x</span><span class="mord mathrm">t</span></span><span class="mopen">(</span><span class="mord mathdefault">A</span><span class="mclose">)</span></span><span class="tag"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">5</span></span><span class="mord">)</span></span></span></span></span></span></p>
</blockquote>
<p>这样我们就能刻画一个拓扑的内、外、边界了.</p>
<hr>
<p>现在我们来讨论这三个部分之间的关系.下面的证明基本上都是上面定义的集合意义上的轱辘话，需要熟悉集合的语言.</p>
<blockquote>
<p>引理3：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Int</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo><mo>∩</mo><mi mathvariant="normal">Ext</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo><mo>=</mo><mi mathvariant="normal">∅</mi></mrow><annotation encoding="application/x-tex">\operatorname{Int}(A) \cap \operatorname{Ext}(A)=\emptyset</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop"><span class="mord mathrm">I</span><span class="mord mathrm">n</span><span class="mord mathrm">t</span></span><span class="mopen">(</span><span class="mord mathdefault">A</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∩</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop"><span class="mord mathrm">E</span><span class="mord mathrm">x</span><span class="mord mathrm">t</span></span><span class="mopen">(</span><span class="mord mathdefault">A</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.80556em;vertical-align:-0.05556em;"></span><span class="mord">∅</span></span></span></span>.</p>
</blockquote>
<p><em>证明 ：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∀</mi><mi>x</mi><mo>∈</mo><mi mathvariant="normal">Int</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>y</mi><mo>∈</mo><mi mathvariant="normal">Ext</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mi mathvariant="normal">∃</mi><msub><mi>ϵ</mi><mn>1</mn></msub><mo>&gt;</mo><mn>0</mn><mo separator="true">,</mo><msub><mi>ϵ</mi><mn>2</mn></msub><mo>&gt;</mo><mn>0</mn><mo separator="true">,</mo><mi>B</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><msub><mi>ϵ</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mo>⊂</mo><mi>A</mi><mo separator="true">,</mo><mi>B</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><msub><mi>ϵ</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mo>⊂</mo><msup><mi>A</mi><mi>C</mi></msup></mrow><annotation encoding="application/x-tex">\forall x\in \operatorname{Int}(A),y\in \operatorname{Ext}(A),\exists \epsilon_1&gt;0,\epsilon_2&gt;0,B(x,\epsilon_1) \subset A,B(x,\epsilon_2)\subset A^{C}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord">∀</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop"><span class="mord mathrm">I</span><span class="mord mathrm">n</span><span class="mord mathrm">t</span></span><span class="mopen">(</span><span class="mord mathdefault">A</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop"><span class="mord mathrm">E</span><span class="mord mathrm">x</span><span class="mord mathrm">t</span></span><span class="mopen">(</span><span class="mord mathdefault">A</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">∃</span><span class="mord"><span class="mord mathdefault">ϵ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">ϵ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">ϵ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⊂</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">A</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">ϵ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⊂</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">C</span></span></span></span></span></span></span></span></span></span></span></span>.</em></p>
<blockquote>
<p>引理4：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Int</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo><mo>=</mo><mi mathvariant="normal">Ext</mi><mo>⁡</mo><mo stretchy="false">(</mo><msup><mi>A</mi><mi>C</mi></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\operatorname{Int}(A)= \operatorname{Ext}(A^{C})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop"><span class="mord mathrm">I</span><span class="mord mathrm">n</span><span class="mord mathrm">t</span></span><span class="mopen">(</span><span class="mord mathdefault">A</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0913309999999998em;vertical-align:-0.25em;"></span><span class="mop"><span class="mord mathrm">E</span><span class="mord mathrm">x</span><span class="mord mathrm">t</span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">C</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>.</p>
</blockquote>
<p><em>证明：将定义中的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span></span></span></span> 替换为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>A</mi><mi>C</mi></msup></mrow><annotation encoding="application/x-tex">A^C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">C</span></span></span></span></span></span></span></span></span></span></span> 即可.</em></p>
<p>由此我们可以引出下面的基本性质</p>
<blockquote>
<p>引理5：</p>
<ol>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Int</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo><mo>⊂</mo><mi>A</mi></mrow><annotation encoding="application/x-tex">\operatorname{Int}(A) \subset A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop"><span class="mord mathrm">I</span><span class="mord mathrm">n</span><span class="mord mathrm">t</span></span><span class="mopen">(</span><span class="mord mathdefault">A</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⊂</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span></span></span></span>.</li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Ext</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo><mo>∩</mo><mi>A</mi><mo>=</mo><mi mathvariant="normal">∅</mi></mrow><annotation encoding="application/x-tex">\operatorname{Ext}(A) \cap A = \emptyset</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop"><span class="mord mathrm">E</span><span class="mord mathrm">x</span><span class="mord mathrm">t</span></span><span class="mopen">(</span><span class="mord mathdefault">A</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∩</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.80556em;vertical-align:-0.05556em;"></span><span class="mord">∅</span></span></span></span>.</li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Int</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mi mathvariant="normal">Ext</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\operatorname{Int}(A),\operatorname{Ext}(A)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop"><span class="mord mathrm">I</span><span class="mord mathrm">n</span><span class="mord mathrm">t</span></span><span class="mopen">(</span><span class="mord mathdefault">A</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mord mathrm">E</span><span class="mord mathrm">x</span><span class="mord mathrm">t</span></span><span class="mopen">(</span><span class="mord mathdefault">A</span><span class="mclose">)</span></span></span></span> 都是开的.</li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>∪</mo><mi mathvariant="normal">∂</mi><mi>A</mi><mo>=</mo><mi mathvariant="normal">Int</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo><mo>⊔</mo><mi mathvariant="normal">∂</mi><mi>A</mi></mrow><annotation encoding="application/x-tex">A \cup \partial A=\operatorname{Int}(A) \sqcup \partial A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∪</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop"><span class="mord mathrm">I</span><span class="mord mathrm">n</span><span class="mord mathrm">t</span></span><span class="mopen">(</span><span class="mord mathdefault">A</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊔</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault">A</span></span></span></span> 是闭的.</li>
</ol>
</blockquote>
<p><em>证明：</em></p>
<ol>
<li>
<p><em>考虑 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mn>2</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">2</span><span class="mclose">)</span></span></span></span> 中的开球一定是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span></span></span></span> 的子集即可得证.</em></p>
</li>
<li>
<p><em>对于原式稍作调整即证 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Ext</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo><mo>⊂</mo><msup><mi>A</mi><mi>C</mi></msup></mrow><annotation encoding="application/x-tex">\operatorname{Ext}(A) \subset A^C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop"><span class="mord mathrm">E</span><span class="mord mathrm">x</span><span class="mord mathrm">t</span></span><span class="mopen">(</span><span class="mord mathdefault">A</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⊂</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">C</span></span></span></span></span></span></span></span></span></span></span>.结合第一条以及引理4得证.</em></p>
</li>
<li>
<p><em>根据引理4，只需证内部是开的.我们任取 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>∈</mo><mi mathvariant="normal">Int</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>ϵ</mi><mo>&gt;</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">x \in \operatorname{Int}(A), \epsilon &gt;0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop"><span class="mord mathrm">I</span><span class="mord mathrm">n</span><span class="mord mathrm">t</span></span><span class="mopen">(</span><span class="mord mathdefault">A</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">ϵ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>，使得以 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span> 为圆心，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">\epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">ϵ</span></span></span></span> 为半径的开球是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span></span></span></span> 的子集.那么我们再任取 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi><mo>∈</mo><mi>B</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>ϵ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">y \in B(x,\epsilon)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7335400000000001em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">ϵ</span><span class="mclose">)</span></span></span></span>，根据定义，它必须是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span></span></span></span> 的内部的元素.取 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>ϵ</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>=</mo><mi>ϵ</mi><mo>−</mo><mi mathvariant="normal">∣</mi><mi>x</mi><mo>−</mo><mi>y</mi><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">\epsilon&#x27; = \epsilon - |x-y|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">ϵ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">ϵ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mord">∣</span></span></span></span>，容易得到</em></p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∀</mi><mi>z</mi><mo>∈</mo><mi>B</mi><mo stretchy="false">(</mo><mi>y</mi><mo separator="true">,</mo><msup><mi>ϵ</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">)</mo><mo separator="true">,</mo><mi mathvariant="normal">∣</mi><mi>x</mi><mo>−</mo><mi>z</mi><mi mathvariant="normal">∣</mi><mo>=</mo><mi mathvariant="normal">∣</mi><mi>x</mi><mo>−</mo><mi>y</mi><mo>+</mo><mo stretchy="false">(</mo><mi>y</mi><mo>−</mo><mi>z</mi><mo stretchy="false">)</mo><mi mathvariant="normal">∣</mi><mo>&lt;</mo><mi mathvariant="normal">∣</mi><mi>x</mi><mo>−</mo><mi>y</mi><mi mathvariant="normal">∣</mi><mo>+</mo><mi mathvariant="normal">∣</mi><mi>y</mi><mo>−</mo><mi>z</mi><mi mathvariant="normal">∣</mi><mo>&lt;</mo><msup><mi>ϵ</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>+</mo><mi mathvariant="normal">∣</mi><mi>x</mi><mo>−</mo><mi>y</mi><mi mathvariant="normal">∣</mi><mo>=</mo><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">\forall z \in B(y,\epsilon&#x27;),|x-z|=|x-y+(y-z)|&lt;|x-y|+|y-z|&lt;\epsilon&#x27;+|x-y|=\epsilon
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord">∀</span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.051892em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">ϵ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">∣</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.04398em;">z</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8852220000000001em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathdefault">ϵ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">ϵ</span></span></span></span></span></p>
<p><em>（利用三角不等式），也就是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>B</mi><mo stretchy="false">(</mo><mi>y</mi><mo separator="true">,</mo><msup><mi>ϵ</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">)</mo><mo>⊂</mo><mi>B</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>ϵ</mi><mo stretchy="false">)</mo><mo>⊂</mo><mi mathvariant="normal">Int</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">B(y,\epsilon&#x27;) \subset B(x,\epsilon) \subset \operatorname{Int}(A)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.001892em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">ϵ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⊂</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">ϵ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⊂</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop"><span class="mord mathrm">I</span><span class="mord mathrm">n</span><span class="mord mathrm">t</span></span><span class="mopen">(</span><span class="mord mathdefault">A</span><span class="mclose">)</span></span></span></span>.考虑 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span> 可以取遍 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span></span></span></span> 的内部，任意开集的并是开集，这就证明了 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Int</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\operatorname{Int}(A)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop"><span class="mord mathrm">I</span><span class="mord mathrm">n</span><span class="mord mathrm">t</span></span><span class="mopen">(</span><span class="mord mathdefault">A</span><span class="mclose">)</span></span></span></span> 是开集.</em></p>
</li>
<li>
<p><em>先证等号.根据第一条显然有左包含右，现证右包含左.只需证 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>⊂</mo><mi mathvariant="normal">Int</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo><mo>⊔</mo><mi mathvariant="normal">∂</mi><mi>A</mi></mrow><annotation encoding="application/x-tex">A \subset \operatorname{Int}(A) \sqcup \partial A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⊂</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop"><span class="mord mathrm">I</span><span class="mord mathrm">n</span><span class="mord mathrm">t</span></span><span class="mopen">(</span><span class="mord mathdefault">A</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊔</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault">A</span></span></span></span>.即证 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>∩</mo><mi mathvariant="normal">Ext</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo><mo>=</mo><mi mathvariant="normal">∅</mi></mrow><annotation encoding="application/x-tex">A \cap \operatorname{Ext}(A) = \emptyset</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∩</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop"><span class="mord mathrm">E</span><span class="mord mathrm">x</span><span class="mord mathrm">t</span></span><span class="mopen">(</span><span class="mord mathdefault">A</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.80556em;vertical-align:-0.05556em;"></span><span class="mord">∅</span></span></span></span>，根据第二条得证.再证闭集，考虑到第三条有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span></span></span></span> 的外部是开集，根据开集闭集的互补性质立即得证.</em></p>
</li>
</ol>
<p>根据上面的性质，我们就有了以下非常重要的性质</p>
<blockquote>
<p>定理4：</p>
<ol>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span></span></span></span> 是开的当且仅当 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>=</mo><mi mathvariant="normal">Int</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">A= \operatorname{Int}(A)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop"><span class="mord mathrm">I</span><span class="mord mathrm">n</span><span class="mord mathrm">t</span></span><span class="mopen">(</span><span class="mord mathdefault">A</span><span class="mclose">)</span></span></span></span>.</li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>A</mi><mo stretchy="true">‾</mo></mover><mo>=</mo><mi>A</mi><mo>∪</mo><mi mathvariant="normal">∂</mi><mi>A</mi></mrow><annotation encoding="application/x-tex">\overline A=A\cup \partial A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8833300000000001em;vertical-align:0em;"></span><span class="mord overline"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8833300000000001em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathdefault">A</span></span><span style="top:-3.80333em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∪</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault">A</span></span></span></span>.</li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span></span></span></span> 是闭的当且仅当 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∂</mi><mi>A</mi><mo>⊂</mo><mi>A</mi></mrow><annotation encoding="application/x-tex">\partial A \subset A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⊂</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span></span></span></span>.</li>
</ol>
</blockquote>
<p><em>证明：</em></p>
<ol>
<li><em>根据引理5第一条以及开集的定义得证.</em></li>
<li><em>注意到右端就是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Ext</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>A</mi><msup><mo stretchy="false">)</mo><mi>C</mi></msup></mrow><annotation encoding="application/x-tex">\operatorname{Ext}(A)^C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0913309999999998em;vertical-align:-0.25em;"></span><span class="mop"><span class="mord mathrm">E</span><span class="mord mathrm">x</span><span class="mord mathrm">t</span></span><span class="mopen">(</span><span class="mord mathdefault">A</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">C</span></span></span></span></span></span></span></span></span></span></span>，即 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∀</mi><mi>x</mi><mo>∈</mo><mi>A</mi><mo>∪</mo><mi mathvariant="normal">∂</mi><mi>A</mi><mo separator="true">,</mo><mi mathvariant="normal">∀</mi><mi>ϵ</mi><mo>&gt;</mo><mn>0</mn><mo separator="true">,</mo><mi>B</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>ϵ</mi><mo stretchy="false">)</mo><mo>∩</mo><mi>A</mi><mo mathvariant="normal">≠</mo><mi mathvariant="normal">∅</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\forall x\in A\cup \partial A,\forall \epsilon &gt;0,B(x,\epsilon) \cap A \neq\emptyset \}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord">∀</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∪</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault">A</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">∀</span><span class="mord mathdefault">ϵ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">ϵ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∩</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mrel"><span class="mord"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="rlap"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel"></span></span><span class="fix"></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∅</span><span class="mclose">}</span></span></span></span>，与 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mn>2</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">2</span><span class="mclose">)</span></span></span></span> 一致.</em></li>
<li><em>利用第二条得证.</em></li>
</ol>
<p>下面我们利用闭包和内部来衡量开集和闭集的大小</p>
<blockquote>
<p>定理5：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Int</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\operatorname{Int}(A)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop"><span class="mord mathrm">I</span><span class="mord mathrm">n</span><span class="mord mathrm">t</span></span><span class="mopen">(</span><span class="mord mathdefault">A</span><span class="mclose">)</span></span></span></span> 是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span></span></span></span> 的子开集中最大的开集，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>A</mi><mo stretchy="true">‾</mo></mover></mrow><annotation encoding="application/x-tex">\overline A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8833300000000001em;vertical-align:0em;"></span><span class="mord overline"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8833300000000001em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathdefault">A</span></span><span style="top:-3.80333em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span></span></span></span></span></span></span> 是包含了 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span></span></span></span> 的闭集中最大的闭集.</p>
</blockquote>
<p><em>证明：首先证明第一点.我们设 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>U</mi><mo>⊂</mo><mi mathvariant="normal">Int</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">U \subset \operatorname{Int}(A)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⊂</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop"><span class="mord mathrm">I</span><span class="mord mathrm">n</span><span class="mord mathrm">t</span></span><span class="mopen">(</span><span class="mord mathdefault">A</span><span class="mclose">)</span></span></span></span> 是开集，就显然有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Int</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>U</mi><mo stretchy="false">)</mo><mo>⊂</mo><mi>U</mi><mo>⊂</mo><mi mathvariant="normal">Int</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\operatorname{Int}(U) \subset U \subset\operatorname{Int}(A)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop"><span class="mord mathrm">I</span><span class="mord mathrm">n</span><span class="mord mathrm">t</span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⊂</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⊂</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop"><span class="mord mathrm">I</span><span class="mord mathrm">n</span><span class="mord mathrm">t</span></span><span class="mopen">(</span><span class="mord mathdefault">A</span><span class="mclose">)</span></span></span></span> .再证明第二点，设 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>⊂</mo><mi>V</mi></mrow><annotation encoding="application/x-tex">A \subset V</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⊂</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>V</mi></mrow><annotation encoding="application/x-tex">V</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span></span></span></span> 是闭集，则 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>A</mi><mo stretchy="true">‾</mo></mover><mo>⊂</mo><mover accent="true"><mi>V</mi><mo stretchy="true">‾</mo></mover><mo>⊂</mo><mi>V</mi></mrow><annotation encoding="application/x-tex">\overline A \subset \overline V \subset V</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9224300000000001em;vertical-align:-0.0391em;"></span><span class="mord overline"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8833300000000001em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathdefault">A</span></span><span style="top:-3.80333em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⊂</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.9224300000000001em;vertical-align:-0.0391em;"></span><span class="mord overline"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8833300000000001em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span></span><span style="top:-3.80333em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⊂</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span></span></span></span>.</em></p>
<p>将来的拓扑空间中将会将这条定理作为公理.</p>
<p>我们还有两条对称的性质</p>
<blockquote>
<p>论断3：设 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>⊂</mo><mi>R</mi></mrow><annotation encoding="application/x-tex">A\subset R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⊂</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span></span></span></span>，</p>
<ol>
<li>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><mo stretchy="false">(</mo><mi mathvariant="normal">Int</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo><msup><mo stretchy="false">)</mo><mi>C</mi></msup><mo>=</mo><mover accent="true"><mrow><mo stretchy="false">(</mo><msup><mi>A</mi><mi>C</mi></msup><mo stretchy="false">)</mo></mrow><mo stretchy="true">‾</mo></mover></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(6)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">(\operatorname{Int}(A))^C=\overline {(A^C)} \tag6
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1413309999999999em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mop"><span class="mord mathrm">I</span><span class="mord mathrm">n</span><span class="mord mathrm">t</span></span><span class="mopen">(</span><span class="mord mathdefault">A</span><span class="mclose">)</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">C</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2173310000000002em;vertical-align:-0.25em;"></span><span class="mord overline"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.967331em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.767331em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">C</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-3.887331em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.25em;"><span></span></span></span></span></span></span><span class="tag"><span class="strut" style="height:1.2173310000000002em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">6</span></span><span class="mord">)</span></span></span></span></span></span></p>
</li>
<li>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><msup><mover accent="true"><mi>A</mi><mo stretchy="true">‾</mo></mover><mi>C</mi></msup><mo>=</mo><mi mathvariant="normal">Int</mi><mo>⁡</mo><mo stretchy="false">(</mo><msup><mi>A</mi><mi>C</mi></msup><mo stretchy="false">)</mo></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(6’)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">\overline A^C  =\operatorname{Int}(A^C) \tag{6&#x27;}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1145610000000001em;vertical-align:0em;"></span><span class="mord"><span class="mord overline"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8833300000000001em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathdefault">A</span></span><span style="top:-3.80333em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.1145610000000001em;"><span style="top:-3.3362300000000005em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">C</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1413309999999999em;vertical-align:-0.25em;"></span><span class="mop"><span class="mord mathrm">I</span><span class="mord mathrm">n</span><span class="mord mathrm">t</span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">C</span></span></span></span></span></span></span></span><span class="mclose">)</span></span><span class="tag"><span class="strut" style="height:1.3645610000000001em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">6</span><span class="mord">’</span></span><span class="mord">)</span></span></span></span></span></span></p>
</li>
</ol>
</blockquote>
<p><em>证明：注意到这两条是互补的，只证 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mn>6</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(6)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">6</span><span class="mclose">)</span></span></span></span> .注意到 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∂</mi><mi>A</mi><mo>=</mo><mi mathvariant="normal">∂</mi><msup><mi>A</mi><mi>C</mi></msup></mrow><annotation encoding="application/x-tex">\partial A = \partial A^C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">C</span></span></span></span></span></span></span></span></span></span></span>，利用定理4的第2条及引理5的第4条即可得证.</em></p>
]]></content>
      <categories>
        <category>点集拓扑</category>
      </categories>
      <tags>
        <tag>拓扑</tag>
      </tags>
  </entry>
  <entry>
    <title>牛客多校补题</title>
    <url>/2024/07/17/page-5/</url>
    <content><![CDATA[<h1>第一场</h1>
<h2 id="1-容斥计数">1.容斥计数</h2>
<blockquote>
<p>给定 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo separator="true">,</mo><mi>m</mi><mo separator="true">,</mo><mi>q</mi></mrow><annotation encoding="application/x-tex">n,m,q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">n</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">m</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span></span></span></span>，求满足如下要求的序列个数模 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>q</mi></mrow><annotation encoding="application/x-tex">q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span></span></span></span> 的结果：</p>
<ul>
<li>长度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span></li>
<li>存在两个<strong>不同的</strong>子序列，满足子序列中的数区间与为1</li>
<li>序列中的数的大小范围在 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mn>0</mn><mo separator="true">,</mo><msup><mn>2</mn><mi>m</mi></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">[0,2^m)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">m</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></li>
</ul>
<p>数据范围： <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo>≤</mo><mn>5000</mn><mo separator="true">,</mo><mi>m</mi><mo>≤</mo><mn>5000</mn><mo separator="true">,</mo><mi>q</mi><mo>≤</mo><mn>1</mn><msup><mn>0</mn><mn>9</mn></msup></mrow><annotation encoding="application/x-tex">n \leq 5000,m \leq 5000,q \leq 10^9</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord">5</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord">5</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">9</span></span></span></span></span></span></span></span></span></span></span></p>
</blockquote>
<p>分析什么时候存在两个子序列满足上述条件。考虑该序列长度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span> 的全部奇数组成的子序列 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>B</mi></mrow><annotation encoding="application/x-tex">B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span></span></span></span>，容易证明若该序列存在区间与为 1 的子序列，则 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>B</mi></mrow><annotation encoding="application/x-tex">B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span></span></span></span> 是最大的满足区间与是 1 的子序列。考虑容斥，即计算满足比 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>B</mi></mrow><annotation encoding="application/x-tex">B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span></span></span></span> 小的子序列区间与都不为 1 的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span></span></span></span> 的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>B</mi></mrow><annotation encoding="application/x-tex">B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span></span></span></span> 的个数，记这个条件为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi></mrow><annotation encoding="application/x-tex">P</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span></span></span></span> 。也就是</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∀</mi><mi>x</mi><mo>∈</mo><mi>B</mi><mo separator="true">,</mo><mi mathvariant="normal">∃</mi><mi>i</mi><mo>≤</mo><mi mathvariant="normal">_</mi><mi mathvariant="normal">_</mi><mi>lg</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>x</mi><mtext>是</mtext><mi>B</mi><mtext>中唯一满足</mtext><msup><mn>2</mn><mi>i</mi></msup><mo>&amp;</mo><mi>x</mi><mo>=</mo><mn>0</mn><mtext>的元素</mtext></mrow><annotation encoding="application/x-tex">\forall x \in B,\exists i \leq \_\_\lg(x),x是B中唯一满足2^i \And  x= 0的元素
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord">∀</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">∃</span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.184664em;vertical-align:-0.31em;"></span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">l<span style="margin-right:0.01389em;">g</span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">x</span><span class="mord cjk_fallback">是</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord cjk_fallback">中</span><span class="mord cjk_fallback">唯</span><span class="mord cjk_fallback">一</span><span class="mord cjk_fallback">满</span><span class="mord cjk_fallback">足</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8746639999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">&amp;</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">0</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">元</span><span class="mord cjk_fallback">素</span></span></span></span></span></p>
<p>考虑枚举式子中的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span> ，称这个 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span> 为特殊位当且仅当存在 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>B</mi></mrow><annotation encoding="application/x-tex">B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span></span></span></span> 中的元素满足上述条件。根据逻辑推理的知识，容易证明这两个条件是等价的。</p>
<p>于是我们记 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><msub><mi>p</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi></mrow></msub></mrow><annotation encoding="application/x-tex">dp_{i,j}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord mathdefault">d</span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> 表示满足长度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span>，恰好有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span></span></span></span> 个特殊位的的奇数序列个数。考虑转移，假设有如下状态，数字纵向排列</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable rowspacing="0.15999999999999992em" columnalign="center center center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{array}{cccc}
1  &amp; 0 &amp; 1 &amp; 1\\ 
1 &amp; 1 &amp; 1 &amp; 0\\ 
1 &amp;1 &amp;0 &amp;1\end{array}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.6000000000000005em;vertical-align:-1.5500000000000007em;"></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span></span></span></span></span></p>
<p>对应状态 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mn>3</mn><mo separator="true">,</mo><mn>4</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(3,4)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">3</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">4</span><span class="mclose">)</span></span></span></span> 。</p>
<p>它可以向如下矩阵转移</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable rowspacing="0.15999999999999992em" columnalign="center center center center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext mathvariant="bold">0</mtext></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{array}{ccccc}
1  &amp; 0 &amp; 1 &amp; 1 &amp; 1\\ 
1 &amp; 1 &amp; 1 &amp; 0 &amp; \textbf 0\\ 
1 &amp;1 &amp;0 &amp;1 &amp; 1\end{array}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.6000000000000005em;vertical-align:-1.5500000000000007em;"></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord text"><span class="mord textbf">0</span></span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span></span></span></span></span></p>
<p>对应状态 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mn>3</mn><mo separator="true">,</mo><mn>5</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(3,5)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">3</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">5</span><span class="mclose">)</span></span></span></span> 。</p>
<p>注意粗体的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn></mrow><annotation encoding="application/x-tex">0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span> 可以有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span> 种选择，因此转移系数是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span> 。</p>
<p>还可以向如下矩阵转移</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable rowspacing="0.15999999999999992em" columnalign="center center center center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext mathvariant="bold">1</mtext></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext mathvariant="bold">1</mtext></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext mathvariant="bold">1</mtext></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext mathvariant="bold">1</mtext></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext mathvariant="bold">0</mtext></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{array}{ccccc}
1  &amp; 0 &amp; 1 &amp; 1 &amp; 1\\ 
1 &amp; 1 &amp; 1 &amp; 0 &amp;  1\\ 
1 &amp;1 &amp;0 &amp;1 &amp; 1\\
\textbf 1 &amp;\textbf 1 &amp;\textbf 1 &amp;\textbf 1 &amp;\textbf 0\end{array}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.800000000000001em;vertical-align:-2.1500000000000004em;"></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord text"><span class="mord textbf">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord text"><span class="mord textbf">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord text"><span class="mord textbf">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord text"><span class="mord textbf">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord text"><span class="mord textbf">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span></span></span></span></span></p>
<p>对应状态 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mn>4</mn><mo separator="true">,</mo><mn>5</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(4,5)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">4</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">5</span><span class="mclose">)</span></span></span></span> 。</p>
<p>注意，粗体的数字 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>11110</mn></mrow><annotation encoding="application/x-tex">11110</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">1</span><span class="mord">1</span><span class="mord">1</span><span class="mord">0</span></span></span></span> 可以被插在任意行，它所对应的序列是不同的，因此转移系数也是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span> 。</p>
<p>综上可以有转移方程</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><msub><mi>p</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn><mo separator="true">,</mo><mi>j</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>=</mo><mi>i</mi><mo stretchy="false">(</mo><mi>d</mi><msub><mi>p</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi></mrow></msub><mo>+</mo><mi>d</mi><msub><mi>p</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn><mo separator="true">,</mo><mi>j</mi></mrow></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">dp_{i + 1,j + 1}=i(dp_{i,j}+dp_{i+1,j})
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord mathdefault">d</span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord mathdefault">i</span><span class="mopen">(</span><span class="mord mathdefault">d</span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord mathdefault">d</span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p>
<p>求出 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mi>p</mi></mrow><annotation encoding="application/x-tex">dp</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">d</span><span class="mord mathdefault">p</span></span></span></span> 之后，我们固定 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>B</mi></mrow><annotation encoding="application/x-tex">B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span></span></span></span> 的长度 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi><mo stretchy="false">(</mo><mi>k</mi><mo>≥</mo><mn>2</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">k(k\geq2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mclose">)</span></span></span></span> 以及特殊位的个数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi></mrow><annotation encoding="application/x-tex">t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathdefault">t</span></span></span></span> ，就有满足 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi></mrow><annotation encoding="application/x-tex">P</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span></span></span></span> 的序列个数为</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>k</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo><mo>=</mo><mi>d</mi><msub><mi>p</mi><mrow><mi>k</mi><mo separator="true">,</mo><mi>t</mi></mrow></msub><mo stretchy="false">(</mo><msup><mn>2</mn><mi>k</mi></msup><mo>−</mo><mn>1</mn><mo>−</mo><mi>k</mi><msup><mo stretchy="false">)</mo><mrow><mi>m</mi><mo>−</mo><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">P(k,t)=dp_{k,t}(2^k-1-k)^{m-t-1}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1852159999999998em;vertical-align:-0.286108em;"></span><span class="mord mathdefault">d</span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span></span></p>
<p>加上偶数，我们就有结果</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>B</mi><mo stretchy="false">(</mo><mi>k</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">(</mo><mfrac linethickness="0px"><mi>n</mi><mi>k</mi></mfrac><mo fence="true">)</mo></mrow><mo stretchy="false">(</mo><msup><mn>2</mn><mrow><mi>m</mi><mo>−</mo><mn>1</mn></mrow></msup><msup><mo stretchy="false">)</mo><mrow><mi>n</mi><mo>−</mo><mi>k</mi></mrow></msup><mrow><mo fence="true">(</mo><mfrac linethickness="0px"><mrow><mi>m</mi><mo>−</mo><mn>1</mn></mrow><mi>t</mi></mfrac><mo fence="true">)</mo></mrow><mi>P</mi><mo stretchy="false">(</mo><mi>k</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mi mathvariant="normal">∣</mi><mi>B</mi><mi mathvariant="normal">∣</mi><mo>=</mo><mi>n</mi><mo stretchy="false">(</mo><msup><mn>2</mn><mrow><mi>m</mi><mo>−</mo><mn>1</mn></mrow></msup><msup><mo stretchy="false">)</mo><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msup><mo>+</mo><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>2</mn></mrow><mi>n</mi></munderover><mrow><mo fence="true">(</mo><mfrac linethickness="0px"><mi>n</mi><mi>k</mi></mfrac><mo fence="true">)</mo></mrow><mo stretchy="false">(</mo><msup><mn>2</mn><mrow><mi>m</mi><mo>−</mo><mn>1</mn></mrow></msup><msup><mo stretchy="false">)</mo><mrow><mi>n</mi><mo>−</mo><mi>k</mi></mrow></msup><munderover><mo>∑</mo><mrow><mi>t</mi><mo>=</mo><mi>k</mi></mrow><mrow><mi>m</mi><mo>−</mo><mn>1</mn></mrow></munderover><mrow><mo fence="true">(</mo><mfrac linethickness="0px"><mrow><mi>m</mi><mo>−</mo><mn>1</mn></mrow><mi>t</mi></mfrac><mo fence="true">)</mo></mrow><mi>P</mi><mo stretchy="false">(</mo><mi>k</mi><mo separator="true">,</mo><mi>t</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">B(k,t)=\dbinom{n}{k}(2^{m-1})^{n-k}\dbinom{m-1}{t}P(k,t)\\|B|=n(2^{m-1})^{n-1}+\sum_{k=2}^{n}\dbinom{n}{k}(2^{m-1})^{n-k} \sum_{t=k}^{m-1}\dbinom{m-1}{t}P(k,t)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="mord"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">(</span></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1075599999999999em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">)</span></span></span><span class="mopen">(</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">(</span></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">t</span></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">)</span></span></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">t</span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord mathdefault">n</span><span class="mopen">(</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:3.1032260000000003em;vertical-align:-1.302113em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.8478869999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">2</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.302113em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">(</span></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1075599999999999em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">)</span></span></span><span class="mopen">(</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8011130000000002em;"><span style="top:-1.8478869999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mrel mtight">=</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.302113em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">(</span></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">t</span></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">)</span></span></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">t</span><span class="mclose">)</span></span></span></span></span></p>
<p>于是引用上一题的答案，我们就有最终式子</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo fence="false">(</mo><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mrow><mo fence="true">(</mo><mfrac linethickness="0px"><mi>n</mi><mi>k</mi></mfrac><mo fence="true">)</mo></mrow><msup><mn>2</mn><mrow><mo stretchy="false">(</mo><mi>m</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mi>k</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">(</mo><msup><mn>2</mn><mi>k</mi></msup><mo>−</mo><mn>1</mn><msup><mo stretchy="false">)</mo><mi>m</mi></msup><mo fence="false">)</mo><mo>−</mo><mi mathvariant="normal">∣</mi><mi>B</mi><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">\big(\sum_{k=1}^{n}\dbinom{n}{k}2^{(m-1)(n-k)}(2^k-1)^m \big)-|B|
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.9535100000000005em;vertical-align:-1.302113em;"></span><span class="mord"><span class="delimsizing size1">(</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.8478869999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.302113em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">(</span></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1075599999999999em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">)</span></span></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">m</span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mclose mtight">)</span><span class="mopen mtight">(</span><span class="mord mathdefault mtight">n</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.20001em;vertical-align:-0.35001em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">m</span></span></span></span></span></span></span></span><span class="mord"><span class="delimsizing size1">)</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mord">∣</span></span></span></span></span></p>
<p>时间复杂度 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mo stretchy="false">(</mo><mi>n</mi><mo>+</mo><mi>m</mi><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O((n + m)^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathdefault">m</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 。</p>
<p>code:</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> GCC optimize(<span class="string">&quot;O3&quot;</span>)</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;utility&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> atcoder &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> internal &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">// @param m `1 &lt;= m`</span></span><br><span class="line"><span class="comment">// @return x mod m</span></span><br><span class="line"><span class="function"><span class="keyword">constexpr</span> <span class="type">long</span> <span class="type">long</span> <span class="title">safe_mod</span><span class="params">(<span class="type">long</span> <span class="type">long</span> x, <span class="type">long</span> <span class="type">long</span> m)</span> </span>&#123;</span><br><span class="line">    x %= m;</span><br><span class="line">    <span class="keyword">if</span> (x &lt; <span class="number">0</span>) x += m;</span><br><span class="line">    <span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Fast modular multiplication by barrett reduction</span></span><br><span class="line"><span class="comment">// Reference: https://en.wikipedia.org/wiki/Barrett_reduction</span></span><br><span class="line"><span class="comment">// <span class="doctag">NOTE:</span> reconsider after Ice Lake</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">barrett</span> &#123;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> _m;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span> im;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// @param m `1 &lt;= m &lt; 2^31`</span></span><br><span class="line">    <span class="built_in">barrett</span>(<span class="type">unsigned</span> <span class="type">int</span> m) : _m(m), <span class="built_in">im</span>((<span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span>)(<span class="number">-1</span>) / m + <span class="number">1</span>) &#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// @return m</span></span><br><span class="line">    <span class="function"><span class="type">unsigned</span> <span class="type">int</span> <span class="title">umod</span><span class="params">()</span> <span class="type">const</span> </span>&#123; <span class="keyword">return</span> _m; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// @param a `0 &lt;= a &lt; m`</span></span><br><span class="line">    <span class="comment">// @param b `0 &lt;= b &lt; m`</span></span><br><span class="line">    <span class="comment">// @return `a * b % m`</span></span><br><span class="line">    <span class="function"><span class="type">unsigned</span> <span class="type">int</span> <span class="title">mul</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> a, <span class="type">unsigned</span> <span class="type">int</span> b)</span> <span class="type">const</span> </span>&#123;</span><br><span class="line">        <span class="comment">// [1] m = 1</span></span><br><span class="line">        <span class="comment">// a = b = im = 0, so okay</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// [2] m &gt;= 2</span></span><br><span class="line">        <span class="comment">// im = ceil(2^64 / m)</span></span><br><span class="line">        <span class="comment">// -&gt; im * m = 2^64 + r (0 &lt;= r &lt; m)</span></span><br><span class="line">        <span class="comment">// let z = a*b = c*m + d (0 &lt;= c, d &lt; m)</span></span><br><span class="line">        <span class="comment">// a*b * im = (c*m + d) * im = c*(im*m) + d*im = c*2^64 + c*r + d*im</span></span><br><span class="line">        <span class="comment">// c*r + d*im &lt; m * m + m * im &lt; m * m + 2^64 + m &lt;= 2^64 + m * (m + 1) &lt; 2^64 * 2</span></span><br><span class="line">        <span class="comment">// ((ab * im) &gt;&gt; 64) == c or c + 1</span></span><br><span class="line">        <span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span> z = a;</span><br><span class="line">        z *= b;</span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> _MSC_VER</span></span><br><span class="line">        <span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span> x;</span><br><span class="line">        _umul128(z, im, &amp;x);</span><br><span class="line"><span class="meta">#<span class="keyword">else</span></span></span><br><span class="line">        <span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span> x =</span><br><span class="line">            (<span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span>)(((<span class="type">unsigned</span> __int128)(z)*im) &gt;&gt; <span class="number">64</span>);</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line">        <span class="type">unsigned</span> <span class="type">int</span> v = (<span class="type">unsigned</span> <span class="type">int</span>)(z - x * _m);</span><br><span class="line">        <span class="keyword">if</span> (_m &lt;= v) v += _m;</span><br><span class="line">        <span class="keyword">return</span> v;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// @param n `0 &lt;= n`</span></span><br><span class="line"><span class="comment">// @param m `1 &lt;= m`</span></span><br><span class="line"><span class="comment">// @return `(x ** n) % m`</span></span><br><span class="line"><span class="function"><span class="keyword">constexpr</span> <span class="type">long</span> <span class="type">long</span> <span class="title">pow_mod_constexpr</span><span class="params">(<span class="type">long</span> <span class="type">long</span> x, <span class="type">long</span> <span class="type">long</span> n, <span class="type">int</span> m)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (m == <span class="number">1</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> _m = (<span class="type">unsigned</span> <span class="type">int</span>)(m);</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span> r = <span class="number">1</span>;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span> y = <span class="built_in">safe_mod</span>(x, m);</span><br><span class="line">    <span class="keyword">while</span> (n) &#123;</span><br><span class="line">        <span class="keyword">if</span> (n &amp; <span class="number">1</span>) r = (r * y) % _m;</span><br><span class="line">        y = (y * y) % _m;</span><br><span class="line">        n &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> r;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Reference:</span></span><br><span class="line"><span class="comment">// M. Forisek and J. Jancina,</span></span><br><span class="line"><span class="comment">// Fast Primality Testing for Integers That Fit into a Machine Word</span></span><br><span class="line"><span class="comment">// @param n `0 &lt;= n`</span></span><br><span class="line"><span class="function"><span class="keyword">constexpr</span> <span class="type">bool</span> <span class="title">is_prime_constexpr</span><span class="params">(<span class="type">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (n &lt;= <span class="number">1</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">if</span> (n == <span class="number">2</span> || n == <span class="number">7</span> || n == <span class="number">61</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">if</span> (n % <span class="number">2</span> == <span class="number">0</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> d = n - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (d % <span class="number">2</span> == <span class="number">0</span>) d /= <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">constexpr</span> <span class="type">long</span> <span class="type">long</span> bases[<span class="number">3</span>] = &#123;<span class="number">2</span>, <span class="number">7</span>, <span class="number">61</span>&#125;;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">long</span> <span class="type">long</span> a : bases) &#123;</span><br><span class="line">        <span class="type">long</span> <span class="type">long</span> t = d;</span><br><span class="line">        <span class="type">long</span> <span class="type">long</span> y = <span class="built_in">pow_mod_constexpr</span>(a, t, n);</span><br><span class="line">        <span class="keyword">while</span> (t != n - <span class="number">1</span> &amp;&amp; y != <span class="number">1</span> &amp;&amp; y != n - <span class="number">1</span>) &#123;</span><br><span class="line">            y = y * y % n;</span><br><span class="line">            t &lt;&lt;= <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (y != n - <span class="number">1</span> &amp;&amp; t % <span class="number">2</span> == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span> &lt;<span class="type">int</span> n&gt; <span class="keyword">constexpr</span> <span class="type">bool</span> is_prime = <span class="built_in">is_prime_constexpr</span>(n);</span><br><span class="line"></span><br><span class="line"><span class="comment">// @param b `1 &lt;= b`</span></span><br><span class="line"><span class="comment">// @return pair(g, x) s.t. g = gcd(a, b), xa = g (mod b), 0 &lt;= x &lt; b/g</span></span><br><span class="line"><span class="function"><span class="keyword">constexpr</span> std::pair&lt;<span class="type">long</span> <span class="type">long</span>, <span class="type">long</span> <span class="type">long</span>&gt; <span class="title">inv_gcd</span><span class="params">(<span class="type">long</span> <span class="type">long</span> a, <span class="type">long</span> <span class="type">long</span> b)</span> </span>&#123;</span><br><span class="line">    a = <span class="built_in">safe_mod</span>(a, b);</span><br><span class="line">    <span class="keyword">if</span> (a == <span class="number">0</span>) <span class="keyword">return</span> &#123;b, <span class="number">0</span>&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Contracts:</span></span><br><span class="line">    <span class="comment">// [1] s - m0 * a = 0 (mod b)</span></span><br><span class="line">    <span class="comment">// [2] t - m1 * a = 0 (mod b)</span></span><br><span class="line">    <span class="comment">// [3] s * |m1| + t * |m0| &lt;= b</span></span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> s = b, t = a;</span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> m0 = <span class="number">0</span>, m1 = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (t) &#123;</span><br><span class="line">        <span class="type">long</span> <span class="type">long</span> u = s / t;</span><br><span class="line">        s -= t * u;</span><br><span class="line">        m0 -= m1 * u;  <span class="comment">// |m1 * u| &lt;= |m1| * s &lt;= b</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// [3]:</span></span><br><span class="line">        <span class="comment">// (s - t * u) * |m1| + t * |m0 - m1 * u|</span></span><br><span class="line">        <span class="comment">// &lt;= s * |m1| - t * u * |m1| + t * (|m0| + |m1| * u)</span></span><br><span class="line">        <span class="comment">// = s * |m1| + t * |m0| &lt;= b</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">auto</span> tmp = s;</span><br><span class="line">        s = t;</span><br><span class="line">        t = tmp;</span><br><span class="line">        tmp = m0;</span><br><span class="line">        m0 = m1;</span><br><span class="line">        m1 = tmp;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// by [3]: |m0| &lt;= b/g</span></span><br><span class="line">    <span class="comment">// by g != b: |m0| &lt; b/g</span></span><br><span class="line">    <span class="keyword">if</span> (m0 &lt; <span class="number">0</span>) m0 += b / s;</span><br><span class="line">    <span class="keyword">return</span> &#123;s, m0&#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Compile time primitive root</span></span><br><span class="line"><span class="comment">// @param m must be prime</span></span><br><span class="line"><span class="comment">// @return primitive root (and minimum in now)</span></span><br><span class="line"><span class="function"><span class="keyword">constexpr</span> <span class="type">int</span> <span class="title">primitive_root_constexpr</span><span class="params">(<span class="type">int</span> m)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (m == <span class="number">2</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> (m == <span class="number">167772161</span>) <span class="keyword">return</span> <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">if</span> (m == <span class="number">469762049</span>) <span class="keyword">return</span> <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">if</span> (m == <span class="number">754974721</span>) <span class="keyword">return</span> <span class="number">11</span>;</span><br><span class="line">    <span class="keyword">if</span> (m == <span class="number">998244353</span>) <span class="keyword">return</span> <span class="number">3</span>;</span><br><span class="line">    <span class="type">int</span> divs[<span class="number">20</span>] = &#123;&#125;;</span><br><span class="line">    divs[<span class="number">0</span>] = <span class="number">2</span>;</span><br><span class="line">    <span class="type">int</span> cnt = <span class="number">1</span>;</span><br><span class="line">    <span class="type">int</span> x = (m - <span class="number">1</span>) / <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">while</span> (x % <span class="number">2</span> == <span class="number">0</span>) x /= <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">3</span>; (<span class="type">long</span> <span class="type">long</span>)(i)*i &lt;= x; i += <span class="number">2</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (x % i == <span class="number">0</span>) &#123;</span><br><span class="line">            divs[cnt++] = i;</span><br><span class="line">            <span class="keyword">while</span> (x % i == <span class="number">0</span>) &#123;</span><br><span class="line">                x /= i;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (x &gt; <span class="number">1</span>) &#123;</span><br><span class="line">        divs[cnt++] = x;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> g = <span class="number">2</span>;; g++) &#123;</span><br><span class="line">        <span class="type">bool</span> ok = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; cnt; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">pow_mod_constexpr</span>(g, (m - <span class="number">1</span>) / divs[i], m) == <span class="number">1</span>) &#123;</span><br><span class="line">                ok = <span class="literal">false</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (ok) <span class="keyword">return</span> g;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span> &lt;<span class="type">int</span> m&gt; <span class="keyword">constexpr</span> <span class="type">int</span> primitive_root = <span class="built_in">primitive_root_constexpr</span>(m);</span><br><span class="line"></span><br><span class="line">&#125;  <span class="comment">// namespace internal</span></span><br><span class="line"></span><br><span class="line">&#125;  <span class="comment">// namespace atcoder</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cassert&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;numeric&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;type_traits&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> atcoder &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> internal &#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">ifndef</span> _MSC_VER</span></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">class</span> <span class="title class_">T</span>&gt;</span><br><span class="line"><span class="keyword">using</span> is_signed_int128 =</span><br><span class="line">    <span class="keyword">typename</span> std::conditional&lt;std::is_same&lt;T, <span class="type">__int128_t</span>&gt;::value ||</span><br><span class="line">                                  std::is_same&lt;T, __int128&gt;::value,</span><br><span class="line">                              std::true_type,</span><br><span class="line">                              std::false_type&gt;::type;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">class</span> <span class="title class_">T</span>&gt;</span><br><span class="line"><span class="keyword">using</span> is_unsigned_int128 =</span><br><span class="line">    <span class="keyword">typename</span> std::conditional&lt;std::is_same&lt;T, <span class="type">__uint128_t</span>&gt;::value ||</span><br><span class="line">                                  std::is_same&lt;T, <span class="type">unsigned</span> __int128&gt;::value,</span><br><span class="line">                              std::true_type,</span><br><span class="line">                              std::false_type&gt;::type;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">class</span> <span class="title class_">T</span>&gt;</span><br><span class="line"><span class="keyword">using</span> make_unsigned_int128 =</span><br><span class="line">    <span class="keyword">typename</span> std::conditional&lt;std::is_same&lt;T, <span class="type">__int128_t</span>&gt;::value,</span><br><span class="line">                              <span class="type">__uint128_t</span>,</span><br><span class="line">                              <span class="type">unsigned</span> __int128&gt;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">class</span> <span class="title class_">T</span>&gt;</span><br><span class="line"><span class="keyword">using</span> is_integral = <span class="keyword">typename</span> std::conditional&lt;std::is_integral&lt;T&gt;::value ||</span><br><span class="line">                                                  is_signed_int128&lt;T&gt;::value ||</span><br><span class="line">                                                  is_unsigned_int128&lt;T&gt;::value,</span><br><span class="line">                                              std::true_type,</span><br><span class="line">                                              std::false_type&gt;::type;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">class</span> <span class="title class_">T</span>&gt;</span><br><span class="line"><span class="keyword">using</span> is_signed_int = <span class="keyword">typename</span> std::conditional&lt;(is_integral&lt;T&gt;::value &amp;&amp;</span><br><span class="line">                                                 std::is_signed&lt;T&gt;::value) ||</span><br><span class="line">                                                    is_signed_int128&lt;T&gt;::value,</span><br><span class="line">                                                std::true_type,</span><br><span class="line">                                                std::false_type&gt;::type;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">class</span> <span class="title class_">T</span>&gt;</span><br><span class="line"><span class="keyword">using</span> is_unsigned_int =</span><br><span class="line">    <span class="keyword">typename</span> std::conditional&lt;(is_integral&lt;T&gt;::value &amp;&amp;</span><br><span class="line">                               std::is_unsigned&lt;T&gt;::value) ||</span><br><span class="line">                                  is_unsigned_int128&lt;T&gt;::value,</span><br><span class="line">                              std::true_type,</span><br><span class="line">                              std::false_type&gt;::type;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">class</span> <span class="title class_">T</span>&gt;</span><br><span class="line"><span class="keyword">using</span> to_unsigned = <span class="keyword">typename</span> std::conditional&lt;</span><br><span class="line">    is_signed_int128&lt;T&gt;::value,</span><br><span class="line">    make_unsigned_int128&lt;T&gt;,</span><br><span class="line">    <span class="keyword">typename</span> std::conditional&lt;std::is_signed&lt;T&gt;::value,</span><br><span class="line">                              std::make_unsigned&lt;T&gt;,</span><br><span class="line">                              std::common_type&lt;T&gt;&gt;::type&gt;::type;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">else</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">class</span> <span class="title class_">T</span>&gt; <span class="keyword">using</span> is_integral = <span class="keyword">typename</span> std::is_integral&lt;T&gt;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">class</span> <span class="title class_">T</span>&gt;</span><br><span class="line"><span class="keyword">using</span> is_signed_int =</span><br><span class="line">    <span class="keyword">typename</span> std::conditional&lt;is_integral&lt;T&gt;::value &amp;&amp; std::is_signed&lt;T&gt;::value,</span><br><span class="line">                              std::true_type,</span><br><span class="line">                              std::false_type&gt;::type;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">class</span> <span class="title class_">T</span>&gt;</span><br><span class="line"><span class="keyword">using</span> is_unsigned_int =</span><br><span class="line">    <span class="keyword">typename</span> std::conditional&lt;is_integral&lt;T&gt;::value &amp;&amp;</span><br><span class="line">                                  std::is_unsigned&lt;T&gt;::value,</span><br><span class="line">                              std::true_type,</span><br><span class="line">                              std::false_type&gt;::type;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">class</span> <span class="title class_">T</span>&gt;</span><br><span class="line"><span class="keyword">using</span> to_unsigned = <span class="keyword">typename</span> std::conditional&lt;is_signed_int&lt;T&gt;::value,</span><br><span class="line">                                              std::make_unsigned&lt;T&gt;,</span><br><span class="line">                                              std::common_type&lt;T&gt;&gt;::type;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">class</span> <span class="title class_">T</span>&gt;</span><br><span class="line"><span class="keyword">using</span> <span class="type">is_signed_int_t</span> = std::<span class="type">enable_if_t</span>&lt;is_signed_int&lt;T&gt;::value&gt;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">class</span> <span class="title class_">T</span>&gt;</span><br><span class="line"><span class="keyword">using</span> <span class="type">is_unsigned_int_t</span> = std::<span class="type">enable_if_t</span>&lt;is_unsigned_int&lt;T&gt;::value&gt;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">class</span> <span class="title class_">T</span>&gt; <span class="keyword">using</span> <span class="type">to_unsigned_t</span> = <span class="keyword">typename</span> to_unsigned&lt;T&gt;::type;</span><br><span class="line"></span><br><span class="line">&#125;  <span class="comment">// namespace internal</span></span><br><span class="line"></span><br><span class="line">&#125;  <span class="comment">// namespace atcoder</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cassert&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;numeric&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;type_traits&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> _MSC_VER</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;intrin.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> atcoder &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> internal &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">modint_base</span> &#123;&#125;;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">static_modint_base</span> : modint_base &#123;&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">class</span> <span class="title class_">T</span>&gt; <span class="keyword">using</span> is_modint = std::is_base_of&lt;modint_base, T&gt;;</span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">class</span> <span class="title class_">T</span>&gt; <span class="keyword">using</span> <span class="type">is_modint_t</span> = std::<span class="type">enable_if_t</span>&lt;is_modint&lt;T&gt;::value&gt;;</span><br><span class="line"></span><br><span class="line">&#125;  <span class="comment">// namespace internal</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="type">int</span> m, std::<span class="type">enable_if_t</span>&lt;(<span class="number">1</span> &lt;= m)&gt;* = <span class="literal">nullptr</span>&gt;</span><br><span class="line"><span class="keyword">struct</span> static_modint : internal::static_modint_base &#123;</span><br><span class="line">    <span class="keyword">using</span> mint = static_modint;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">static</span> <span class="keyword">constexpr</span> <span class="type">int</span> <span class="title">mod</span><span class="params">()</span> </span>&#123; <span class="keyword">return</span> m; &#125;</span><br><span class="line">    <span class="function"><span class="type">static</span> mint <span class="title">raw</span><span class="params">(<span class="type">int</span> v)</span> </span>&#123;</span><br><span class="line">        mint x;</span><br><span class="line">        x._v = v;</span><br><span class="line">        <span class="keyword">return</span> x;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">static_modint</span>() : _v(<span class="number">0</span>) &#123;&#125;</span><br><span class="line">    <span class="keyword">template</span> &lt;<span class="keyword">class</span> <span class="title class_">T</span>, internal::<span class="type">is_signed_int_t</span>&lt;T&gt;* = <span class="literal">nullptr</span>&gt;</span><br><span class="line">    <span class="built_in">static_modint</span>(T v) &#123;</span><br><span class="line">        <span class="type">long</span> <span class="type">long</span> x = (<span class="type">long</span> <span class="type">long</span>)(v % (<span class="type">long</span> <span class="type">long</span>)(<span class="built_in">umod</span>()));</span><br><span class="line">        <span class="keyword">if</span> (x &lt; <span class="number">0</span>) x += <span class="built_in">umod</span>();</span><br><span class="line">        _v = (<span class="type">unsigned</span> <span class="type">int</span>)(x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">template</span> &lt;<span class="keyword">class</span> <span class="title class_">T</span>, internal::<span class="type">is_unsigned_int_t</span>&lt;T&gt;* = <span class="literal">nullptr</span>&gt;</span><br><span class="line">    <span class="built_in">static_modint</span>(T v) &#123;</span><br><span class="line">        _v = (<span class="type">unsigned</span> <span class="type">int</span>)(v % <span class="built_in">umod</span>());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">static_modint</span>(<span class="type">bool</span> v) &#123; _v = ((<span class="type">unsigned</span> <span class="type">int</span>)(v) % <span class="built_in">umod</span>()); &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">unsigned</span> <span class="type">int</span> <span class="title">val</span><span class="params">()</span> <span class="type">const</span> </span>&#123; <span class="keyword">return</span> _v; &#125;</span><br><span class="line"></span><br><span class="line">    mint&amp; <span class="keyword">operator</span>++() &#123;</span><br><span class="line">        _v++;</span><br><span class="line">        <span class="keyword">if</span> (_v == <span class="built_in">umod</span>()) _v = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    mint&amp; <span class="keyword">operator</span>--() &#123;</span><br><span class="line">        <span class="keyword">if</span> (_v == <span class="number">0</span>) _v = <span class="built_in">umod</span>();</span><br><span class="line">        _v--;</span><br><span class="line">        <span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    mint <span class="keyword">operator</span>++(<span class="type">int</span>) &#123;</span><br><span class="line">        mint result = *<span class="keyword">this</span>;</span><br><span class="line">        ++*<span class="keyword">this</span>;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">    mint <span class="keyword">operator</span>--(<span class="type">int</span>) &#123;</span><br><span class="line">        mint result = *<span class="keyword">this</span>;</span><br><span class="line">        --*<span class="keyword">this</span>;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    mint&amp; <span class="keyword">operator</span>+=(<span class="type">const</span> mint&amp; rhs) &#123;</span><br><span class="line">        _v += rhs._v;</span><br><span class="line">        <span class="keyword">if</span> (_v &gt;= <span class="built_in">umod</span>()) _v -= <span class="built_in">umod</span>();</span><br><span class="line">        <span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    mint&amp; <span class="keyword">operator</span>-=(<span class="type">const</span> mint&amp; rhs) &#123;</span><br><span class="line">        _v -= rhs._v;</span><br><span class="line">        <span class="keyword">if</span> (_v &gt;= <span class="built_in">umod</span>()) _v += <span class="built_in">umod</span>();</span><br><span class="line">        <span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    mint&amp; <span class="keyword">operator</span>*=(<span class="type">const</span> mint&amp; rhs) &#123;</span><br><span class="line">        <span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span> z = _v;</span><br><span class="line">        z *= rhs._v;</span><br><span class="line">        _v = (<span class="type">unsigned</span> <span class="type">int</span>)(z % <span class="built_in">umod</span>());</span><br><span class="line">        <span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    mint&amp; <span class="keyword">operator</span>/=(<span class="type">const</span> mint&amp; rhs) &#123; <span class="keyword">return</span> *<span class="keyword">this</span> = *<span class="keyword">this</span> * rhs.<span class="built_in">inv</span>(); &#125;</span><br><span class="line"></span><br><span class="line">    mint <span class="keyword">operator</span>+() <span class="type">const</span> &#123; <span class="keyword">return</span> *<span class="keyword">this</span>; &#125;</span><br><span class="line">    mint <span class="keyword">operator</span>-() <span class="type">const</span> &#123; <span class="keyword">return</span> <span class="built_in">mint</span>() - *<span class="keyword">this</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function">mint <span class="title">pow</span><span class="params">(<span class="type">long</span> <span class="type">long</span> n)</span> <span class="type">const</span> </span>&#123;</span><br><span class="line">        <span class="built_in">assert</span>(<span class="number">0</span> &lt;= n);</span><br><span class="line">        mint x = *<span class="keyword">this</span>, r = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (n) &#123;</span><br><span class="line">            <span class="keyword">if</span> (n &amp; <span class="number">1</span>) r *= x;</span><br><span class="line">            x *= x;</span><br><span class="line">            n &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> r;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function">mint <span class="title">inv</span><span class="params">()</span> <span class="type">const</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (prime) &#123;</span><br><span class="line">            <span class="built_in">assert</span>(_v);</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">pow</span>(<span class="built_in">umod</span>() - <span class="number">2</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">auto</span> eg = internal::<span class="built_in">inv_gcd</span>(_v, m);</span><br><span class="line">            <span class="built_in">assert</span>(eg.first == <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">return</span> eg.second;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">friend</span> mint <span class="keyword">operator</span>+(<span class="type">const</span> mint&amp; lhs, <span class="type">const</span> mint&amp; rhs) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">mint</span>(lhs) += rhs;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">friend</span> mint <span class="keyword">operator</span>-(<span class="type">const</span> mint&amp; lhs, <span class="type">const</span> mint&amp; rhs) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">mint</span>(lhs) -= rhs;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">friend</span> mint <span class="keyword">operator</span>*(<span class="type">const</span> mint&amp; lhs, <span class="type">const</span> mint&amp; rhs) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">mint</span>(lhs) *= rhs;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">friend</span> mint <span class="keyword">operator</span>/(<span class="type">const</span> mint&amp; lhs, <span class="type">const</span> mint&amp; rhs) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">mint</span>(lhs) /= rhs;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">friend</span> <span class="type">bool</span> <span class="keyword">operator</span>==(<span class="type">const</span> mint&amp; lhs, <span class="type">const</span> mint&amp; rhs) &#123;</span><br><span class="line">        <span class="keyword">return</span> lhs._v == rhs._v;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">friend</span> <span class="type">bool</span> <span class="keyword">operator</span>!=(<span class="type">const</span> mint&amp; lhs, <span class="type">const</span> mint&amp; rhs) &#123;</span><br><span class="line">        <span class="keyword">return</span> lhs._v != rhs._v;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span>:</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> _v;</span><br><span class="line">    <span class="function"><span class="type">static</span> <span class="keyword">constexpr</span> <span class="type">unsigned</span> <span class="type">int</span> <span class="title">umod</span><span class="params">()</span> </span>&#123; <span class="keyword">return</span> m; &#125;</span><br><span class="line">    <span class="type">static</span> <span class="keyword">constexpr</span> <span class="type">bool</span> prime = internal::is_prime&lt;m&gt;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="type">int</span> id&gt; <span class="keyword">struct</span> <span class="title class_">dynamic_modint</span> : internal::modint_base &#123;</span><br><span class="line">    <span class="keyword">using</span> mint = dynamic_modint;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">static</span> <span class="type">int</span> <span class="title">mod</span><span class="params">()</span> </span>&#123; <span class="keyword">return</span> (<span class="type">int</span>)(bt.<span class="built_in">umod</span>()); &#125;</span><br><span class="line">    <span class="function"><span class="type">static</span> <span class="type">void</span> <span class="title">set_mod</span><span class="params">(<span class="type">int</span> m)</span> </span>&#123;</span><br><span class="line">        <span class="built_in">assert</span>(<span class="number">1</span> &lt;= m);</span><br><span class="line">        bt = internal::<span class="built_in">barrett</span>(m);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="type">static</span> mint <span class="title">raw</span><span class="params">(<span class="type">int</span> v)</span> </span>&#123;</span><br><span class="line">        mint x;</span><br><span class="line">        x._v = v;</span><br><span class="line">        <span class="keyword">return</span> x;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">dynamic_modint</span>() : _v(<span class="number">0</span>) &#123;&#125;</span><br><span class="line">    <span class="keyword">template</span> &lt;<span class="keyword">class</span> <span class="title class_">T</span>, internal::<span class="type">is_signed_int_t</span>&lt;T&gt;* = <span class="literal">nullptr</span>&gt;</span><br><span class="line">    <span class="built_in">dynamic_modint</span>(T v) &#123;</span><br><span class="line">        <span class="type">long</span> <span class="type">long</span> x = (<span class="type">long</span> <span class="type">long</span>)(v % (<span class="type">long</span> <span class="type">long</span>)(<span class="built_in">mod</span>()));</span><br><span class="line">        <span class="keyword">if</span> (x &lt; <span class="number">0</span>) x += <span class="built_in">mod</span>();</span><br><span class="line">        _v = (<span class="type">unsigned</span> <span class="type">int</span>)(x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">template</span> &lt;<span class="keyword">class</span> <span class="title class_">T</span>, internal::<span class="type">is_unsigned_int_t</span>&lt;T&gt;* = <span class="literal">nullptr</span>&gt;</span><br><span class="line">    <span class="built_in">dynamic_modint</span>(T v) &#123;</span><br><span class="line">        _v = (<span class="type">unsigned</span> <span class="type">int</span>)(v % <span class="built_in">mod</span>());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">dynamic_modint</span>(<span class="type">bool</span> v) &#123; _v = ((<span class="type">unsigned</span> <span class="type">int</span>)(v) % <span class="built_in">mod</span>()); &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">unsigned</span> <span class="type">int</span> <span class="title">val</span><span class="params">()</span> <span class="type">const</span> </span>&#123; <span class="keyword">return</span> _v; &#125;</span><br><span class="line"></span><br><span class="line">    mint&amp; <span class="keyword">operator</span>++() &#123;</span><br><span class="line">        _v++;</span><br><span class="line">        <span class="keyword">if</span> (_v == <span class="built_in">umod</span>()) _v = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    mint&amp; <span class="keyword">operator</span>--() &#123;</span><br><span class="line">        <span class="keyword">if</span> (_v == <span class="number">0</span>) _v = <span class="built_in">umod</span>();</span><br><span class="line">        _v--;</span><br><span class="line">        <span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    mint <span class="keyword">operator</span>++(<span class="type">int</span>) &#123;</span><br><span class="line">        mint result = *<span class="keyword">this</span>;</span><br><span class="line">        ++*<span class="keyword">this</span>;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">    mint <span class="keyword">operator</span>--(<span class="type">int</span>) &#123;</span><br><span class="line">        mint result = *<span class="keyword">this</span>;</span><br><span class="line">        --*<span class="keyword">this</span>;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    mint&amp; <span class="keyword">operator</span>+=(<span class="type">const</span> mint&amp; rhs) &#123;</span><br><span class="line">        _v += rhs._v;</span><br><span class="line">        <span class="keyword">if</span> (_v &gt;= <span class="built_in">umod</span>()) _v -= <span class="built_in">umod</span>();</span><br><span class="line">        <span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    mint&amp; <span class="keyword">operator</span>-=(<span class="type">const</span> mint&amp; rhs) &#123;</span><br><span class="line">        _v += <span class="built_in">mod</span>() - rhs._v;</span><br><span class="line">        <span class="keyword">if</span> (_v &gt;= <span class="built_in">umod</span>()) _v -= <span class="built_in">umod</span>();</span><br><span class="line">        <span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    mint&amp; <span class="keyword">operator</span>*=(<span class="type">const</span> mint&amp; rhs) &#123;</span><br><span class="line">        _v = bt.<span class="built_in">mul</span>(_v, rhs._v);</span><br><span class="line">        <span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    mint&amp; <span class="keyword">operator</span>/=(<span class="type">const</span> mint&amp; rhs) &#123; <span class="keyword">return</span> *<span class="keyword">this</span> = *<span class="keyword">this</span> * rhs.<span class="built_in">inv</span>(); &#125;</span><br><span class="line"></span><br><span class="line">    mint <span class="keyword">operator</span>+() <span class="type">const</span> &#123; <span class="keyword">return</span> *<span class="keyword">this</span>; &#125;</span><br><span class="line">    mint <span class="keyword">operator</span>-() <span class="type">const</span> &#123; <span class="keyword">return</span> <span class="built_in">mint</span>() - *<span class="keyword">this</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function">mint <span class="title">pow</span><span class="params">(<span class="type">long</span> <span class="type">long</span> n)</span> <span class="type">const</span> </span>&#123;</span><br><span class="line">        <span class="built_in">assert</span>(<span class="number">0</span> &lt;= n);</span><br><span class="line">        mint x = *<span class="keyword">this</span>, r = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (n) &#123;</span><br><span class="line">            <span class="keyword">if</span> (n &amp; <span class="number">1</span>) r *= x;</span><br><span class="line">            x *= x;</span><br><span class="line">            n &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> r;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function">mint <span class="title">inv</span><span class="params">()</span> <span class="type">const</span> </span>&#123;</span><br><span class="line">        <span class="keyword">auto</span> eg = internal::<span class="built_in">inv_gcd</span>(_v, <span class="built_in">mod</span>());</span><br><span class="line">        <span class="built_in">assert</span>(eg.first == <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">return</span> eg.second;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">friend</span> mint <span class="keyword">operator</span>+(<span class="type">const</span> mint&amp; lhs, <span class="type">const</span> mint&amp; rhs) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">mint</span>(lhs) += rhs;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">friend</span> mint <span class="keyword">operator</span>-(<span class="type">const</span> mint&amp; lhs, <span class="type">const</span> mint&amp; rhs) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">mint</span>(lhs) -= rhs;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">friend</span> mint <span class="keyword">operator</span>*(<span class="type">const</span> mint&amp; lhs, <span class="type">const</span> mint&amp; rhs) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">mint</span>(lhs) *= rhs;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">friend</span> mint <span class="keyword">operator</span>/(<span class="type">const</span> mint&amp; lhs, <span class="type">const</span> mint&amp; rhs) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">mint</span>(lhs) /= rhs;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">friend</span> <span class="type">bool</span> <span class="keyword">operator</span>==(<span class="type">const</span> mint&amp; lhs, <span class="type">const</span> mint&amp; rhs) &#123;</span><br><span class="line">        <span class="keyword">return</span> lhs._v == rhs._v;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">friend</span> <span class="type">bool</span> <span class="keyword">operator</span>!=(<span class="type">const</span> mint&amp; lhs, <span class="type">const</span> mint&amp; rhs) &#123;</span><br><span class="line">        <span class="keyword">return</span> lhs._v != rhs._v;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span>:</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> _v;</span><br><span class="line">    <span class="type">static</span> internal::barrett bt;</span><br><span class="line">    <span class="function"><span class="type">static</span> <span class="type">unsigned</span> <span class="type">int</span> <span class="title">umod</span><span class="params">()</span> </span>&#123; <span class="keyword">return</span> bt.<span class="built_in">umod</span>(); &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">template</span> &lt;<span class="type">int</span> id&gt; internal::barrett dynamic_modint&lt;id&gt;::bt = <span class="number">998244353</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> modint998244353 = static_modint&lt;<span class="number">998244353</span>&gt;;</span><br><span class="line"><span class="keyword">using</span> modint1000000007 = static_modint&lt;<span class="number">1000000007</span>&gt;;</span><br><span class="line"><span class="keyword">using</span> modint = dynamic_modint&lt;<span class="number">-1</span>&gt;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> internal &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">class</span> <span class="title class_">T</span>&gt;</span><br><span class="line"><span class="keyword">using</span> is_static_modint = std::is_base_of&lt;internal::static_modint_base, T&gt;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">class</span> <span class="title class_">T</span>&gt;</span><br><span class="line"><span class="keyword">using</span> <span class="type">is_static_modint_t</span> = std::<span class="type">enable_if_t</span>&lt;is_static_modint&lt;T&gt;::value&gt;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">class</span>&gt; <span class="keyword">struct</span> <span class="title class_">is_dynamic_modint</span> : <span class="keyword">public</span> std::false_type &#123;&#125;;</span><br><span class="line"><span class="keyword">template</span> &lt;<span class="type">int</span> id&gt;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">is_dynamic_modint</span>&lt;dynamic_modint&lt;id&gt;&gt; : <span class="keyword">public</span> std::true_type &#123;&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">class</span> <span class="title class_">T</span>&gt;</span><br><span class="line"><span class="keyword">using</span> <span class="type">is_dynamic_modint_t</span> = std::<span class="type">enable_if_t</span>&lt;is_dynamic_modint&lt;T&gt;::value&gt;;</span><br><span class="line"></span><br><span class="line">&#125;  <span class="comment">// namespace internal</span></span><br><span class="line"></span><br><span class="line">&#125;  <span class="comment">// namespace atcoder</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//#define int long long</span></span><br><span class="line"><span class="keyword">using</span> ll = <span class="type">long</span> <span class="type">long</span>;</span><br><span class="line"><span class="type">const</span> ll mod = <span class="number">998244353</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e7</span> + <span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> atcoder::modint MINT;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  </span><br><span class="line">    <span class="type">int</span> n,m,q;std::cin&gt;&gt;n&gt;&gt;m&gt;&gt;q;</span><br><span class="line">    MINT::<span class="built_in">set_mod</span>(q);</span><br><span class="line"></span><br><span class="line">    std::vector&lt;std::vector&lt;MINT&gt;&gt; <span class="built_in">dp</span>(n + m + <span class="number">2</span>,std::<span class="built_in">vector</span>&lt;MINT&gt;(m + n + <span class="number">2</span>,<span class="number">0</span>));</span><br><span class="line">  </span><br><span class="line">    dp[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt;= n;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>;j &lt; m;j++)</span><br><span class="line">            dp[i][j] = i * (dp[i][j - <span class="number">1</span>] + dp[i - <span class="number">1</span>][j - <span class="number">1</span>]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    MINT ans1 = <span class="number">0</span>;</span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">    std::vector&lt;std::vector&lt;MINT&gt; &gt; <span class="built_in">C</span>(<span class="number">5050</span>,std::<span class="built_in">vector</span>&lt;MINT&gt;(<span class="number">5050</span>,<span class="number">0</span>));</span><br><span class="line">    <span class="function">std::vector&lt;MINT&gt; <span class="title">po2</span><span class="params">(<span class="number">5050</span>,<span class="number">0</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line">    po2[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt;= <span class="number">5000</span>;i++)po2[i] = po2[i - <span class="number">1</span>] * <span class="number">2</span>;</span><br><span class="line">    C[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt;= <span class="number">5000</span>;i++)&#123;</span><br><span class="line">        C[i][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>;j &lt;= i;j++)</span><br><span class="line">            C[i][j] = (C[i - <span class="number">1</span>][j] + C[i - <span class="number">1</span>][j - <span class="number">1</span>]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">2</span>;i &lt;= n;i++)&#123;</span><br><span class="line">        MINT cur = <span class="number">1</span>,cur1 = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>;j &lt; m;j++) cur *= (po2[i] - <span class="number">1</span>),cur1 *= po2[n - i];</span><br><span class="line">        ans1 += C[n][i] * cur1 * cur;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//std::cout&lt;&lt;ans1&lt;&lt;&#x27;\n&#x27;;</span></span><br><span class="line"></span><br><span class="line">    MINT ans2 = <span class="number">0</span>;</span><br><span class="line">    <span class="function">std::vector&lt;MINT&gt; <span class="title">pw</span><span class="params">(m + <span class="number">2</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">2</span>;i &lt;= n;i++)&#123;</span><br><span class="line">        MINT tp = <span class="number">0</span>;</span><br><span class="line">        pw[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>;j &lt;= m;j++)pw[j] = pw[j - <span class="number">1</span>] * (po2[i] - <span class="number">1</span> - i);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = m - <span class="number">1</span>;j &gt;= i;j--)&#123;</span><br><span class="line">            tp += C[m - <span class="number">1</span>][j] * dp[i][j] * pw[m - j - <span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        MINT cur = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>;j &lt; m;j++) cur *= po2[n - i];</span><br><span class="line">        tp *= C[n][i] * cur;</span><br><span class="line">        ans2 += tp;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    std::cout&lt;&lt;(ans1 - ans2).<span class="built_in">val</span>()&lt;&lt;<span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 1 3 10</span></span><br><span class="line"><span class="comment">//(n  + 1) ^2 - (n)^ = 2n + 1</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    std::ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    std::cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> t = <span class="number">1</span>;</span><br><span class="line">    <span class="comment">// int res = 0;</span></span><br><span class="line">    <span class="comment">// for(int i = 1;i &lt;= 1145;i++) res |= i;</span></span><br><span class="line">    <span class="comment">// std::cerr&lt;&lt;res&lt;&lt;&#x27;\n&#x27;;</span></span><br><span class="line">    <span class="comment">//std::cin &gt;&gt; t;</span></span><br><span class="line">    <span class="keyword">while</span> (t--) &#123;</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">        std::cout.<span class="built_in">flush</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<hr>
<h2 id="2-模意义下的不等式">2.模意义下的不等式</h2>
<blockquote>
<p>给定一数组 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">a</span></span></span></span> ，初始为空。定义一次操作为</p>
<ul>
<li>将数组末尾 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi></mrow><annotation encoding="application/x-tex">t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathdefault">t</span></span></span></span> 个元素删去</li>
<li>将元素 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span> 添加至数组末尾</li>
</ul>
<p>每次操作给定 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi><mo separator="true">,</mo><mi>x</mi></mrow><annotation encoding="application/x-tex">t,x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.80952em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">t</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">x</span></span></span></span>，保证操作合法，求每次操作后的</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><munderover><mo>⨁</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mrow><mi mathvariant="normal">∣</mi><mi>a</mi><mi mathvariant="normal">∣</mi></mrow></munderover><mo stretchy="false">(</mo><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mi>i</mi></mrow><mrow><mi mathvariant="normal">∣</mi><mi>a</mi><mi mathvariant="normal">∣</mi></mrow></munderover><msub><mi>a</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mspace></mspace><mspace width="1em"/><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mtext> </mtext><mtext> </mtext><msup><mn>2</mn><mn>20</mn></msup></mrow><annotation encoding="application/x-tex">\bigoplus_{i=1}^{|a|}(\sum_{j=i}^{|a|}a_i) \mod 2^{20}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.3747820000000006em;vertical-align:-1.4137769999999998em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.9610050000000003em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">⨁</span></span></span><span style="top:-4.386005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∣</span><span class="mord mathdefault mtight">a</span><span class="mord mtight">∣</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.9610050000000006em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mathdefault mtight">i</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.386005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∣</span><span class="mord mathdefault mtight">a</span><span class="mord mtight">∣</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4137769999999998em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:1em;"></span></span><span class="base"><span class="strut" style="height:0.8641079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">0</span></span></span></span></span></span></span></span></span></span></span></span></span></p>
<p>数据范围：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>q</mi><mo>≤</mo><mn>5</mn><mo>⋅</mo><mn>1</mn><msup><mn>0</mn><mn>5</mn></msup><mo separator="true">,</mo><mi>x</mi><mo>≤</mo><mn>1</mn><msup><mn>0</mn><mn>9</mn></msup></mrow><annotation encoding="application/x-tex">q\leq 5 \cdot 10^5, x \leq 10^9</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8304100000000001em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">5</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.008548em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">9</span></span></span></span></span></span></span></span></span></span></span></p>
</blockquote>
<p>首先考虑到模数，只需要考虑 20 位及以下的贡献。异或，拆位分析奇偶。</p>
<p>设当前位数为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi></mrow><annotation encoding="application/x-tex">d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">d</span></span></span></span> ，我们记前缀和为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>S</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">S_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，则对于某个位置 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mi>i</mi></mrow><mrow><mi mathvariant="normal">∣</mi><mi>a</mi><mi mathvariant="normal">∣</mi></mrow></msubsup><msub><mi>a</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">\sum_{j=i}^{|a|}a_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.463718em;vertical-align:-0.43581800000000004em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0279em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mathdefault mtight">i</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∣</span><span class="mord mathdefault mtight">a</span><span class="mord mtight">∣</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.43581800000000004em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi></mrow><annotation encoding="application/x-tex">d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">d</span></span></span></span> 位是 1 的充要条件是</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><mo stretchy="false">(</mo><msub><mi>S</mi><mrow><mi mathvariant="normal">∣</mi><mi>a</mi><mi mathvariant="normal">∣</mi></mrow></msub><mo>−</mo><msub><mi>S</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mspace></mspace><mspace width="1em"/><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mtext> </mtext><mtext> </mtext><msup><mn>2</mn><mrow><mi>d</mi><mo>+</mo><mn>1</mn></mrow></msup><mo>≥</mo><msup><mn>2</mn><mi>d</mi></msup></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(1)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">(S_{|a|}-S_i) \mod 2^{d + 1} \geq 2^d \tag{1}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1052em;vertical-align:-0.3551999999999999em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∣</span><span class="mord mathdefault mtight">a</span><span class="mord mtight">∣</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:1em;"></span></span><span class="base"><span class="strut" style="height:1.035078em;vertical-align:-0.13597em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8991079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">d</span></span></span></span></span></span></span></span></span><span class="tag"><span class="strut" style="height:1.2543079999999998em;vertical-align:-0.3551999999999999em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">1</span></span><span class="mord">)</span></span></span></span></span></span></p>
<p>因为模一个整的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span> 位 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn></mrow><annotation encoding="application/x-tex">2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span></span></span></span> 进制数相当于将原数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span> 位以上的二进制位消去。类比十进制即可证明。</p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi></mrow><annotation encoding="application/x-tex">S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span></span></span></span> 是好维护的，我们考虑 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span></span> 如何维护。这是一个循环群上的不等式，先将 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>S</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">S_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 处理为逆元，即将上式变为</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><msub><mi>S</mi><mrow><mi mathvariant="normal">∣</mi><mi>a</mi><mi mathvariant="normal">∣</mi></mrow></msub><mo>+</mo><mo stretchy="false">(</mo><mo>−</mo><msub><mi>S</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>≥</mo><msup><mn>2</mn><mi>d</mi></msup></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(1)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">S_{|a|}+(-S_i)  \geq 2^d \tag{1}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.03853em;vertical-align:-0.3551999999999999em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∣</span><span class="mord mathdefault mtight">a</span><span class="mord mtight">∣</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8991079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">d</span></span></span></span></span></span></span></span></span><span class="tag"><span class="strut" style="height:1.2543079999999998em;vertical-align:-0.3551999999999999em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">1</span></span><span class="mord">)</span></span></span></span></span></span></p>
<p>上式所有量都是模意义下的量。我们分类讨论</p>
<ol>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn><mo>≤</mo><msub><mi>S</mi><mrow><mi mathvariant="normal">∣</mi><mi>a</mi><mi mathvariant="normal">∣</mi></mrow></msub><mo>&lt;</mo><msup><mn>2</mn><mi>d</mi></msup></mrow><annotation encoding="application/x-tex">0\leq S_{|a|}&lt;2^d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.78041em;vertical-align:-0.13597em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.03853em;vertical-align:-0.3551999999999999em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∣</span><span class="mord mathdefault mtight">a</span><span class="mord mtight">∣</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.849108em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">d</span></span></span></span></span></span></span></span></span></span></span>，显然地就有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mo>−</mo><msub><mi>S</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>∈</mo><mo stretchy="false">[</mo><msup><mn>2</mn><mi>d</mi></msup><mo>−</mo><msub><mi>S</mi><mrow><mi mathvariant="normal">∣</mi><mi>a</mi><mi mathvariant="normal">∣</mi></mrow></msub><mo separator="true">,</mo><msup><mn>2</mn><mrow><mi>d</mi><mo>+</mo><mn>1</mn></mrow></msup><mo>−</mo><msub><mi>S</mi><mrow><mi mathvariant="normal">∣</mi><mi>a</mi><mi mathvariant="normal">∣</mi></mrow></msub><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">(-S_i) \in [2^d-S_{|a|},2^{d+1}-S_{|a|}]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.099108em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">d</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.2043079999999997em;vertical-align:-0.3551999999999999em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∣</span><span class="mord mathdefault mtight">a</span><span class="mord mtight">∣</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1052em;vertical-align:-0.3551999999999999em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∣</span><span class="mord mathdefault mtight">a</span><span class="mord mtight">∣</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span><span class="mclose">]</span></span></span></span></li>
<li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>S</mi><mrow><mi mathvariant="normal">∣</mi><mi>a</mi><mi mathvariant="normal">∣</mi></mrow></msub><mo>≥</mo><msup><mn>2</mn><mi>d</mi></msup></mrow><annotation encoding="application/x-tex">S_{|a|}\geq 2^d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.03853em;vertical-align:-0.3551999999999999em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∣</span><span class="mord mathdefault mtight">a</span><span class="mord mtight">∣</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.849108em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">d</span></span></span></span></span></span></span></span></span></span></span>，这时候区间分成了两段，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mn>0</mn><mo separator="true">,</mo><msup><mn>2</mn><mrow><mi>d</mi><mo>+</mo><mn>1</mn></mrow></msup><mo>−</mo><msub><mi>S</mi><mrow><mi mathvariant="normal">∣</mi><mi>a</mi><mi mathvariant="normal">∣</mi></mrow></msub><mo stretchy="false">]</mo><mo>∪</mo><mo stretchy="false">[</mo><msub><mi>S</mi><mrow><mi mathvariant="normal">∣</mi><mi>a</mi><mi mathvariant="normal">∣</mi></mrow></msub><mo>−</mo><msup><mn>2</mn><mi>d</mi></msup><mo separator="true">,</mo><msup><mn>2</mn><mrow><mi>d</mi><mo>+</mo><mn>1</mn></mrow></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(0,2^{d+1}-S_{|a|}]\cup[S_{|a|} - 2^d,2^{d+1})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0991079999999998em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1052em;vertical-align:-0.3551999999999999em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∣</span><span class="mord mathdefault mtight">a</span><span class="mord mtight">∣</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∪</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1052em;vertical-align:-0.3551999999999999em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∣</span><span class="mord mathdefault mtight">a</span><span class="mord mtight">∣</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.099108em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">d</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></li>
</ol>
<p>画一个圆圈即可理解。考虑到 $1e6 $ 的值域和 6s 的时限，我们可以开 20 个模意义下的权值树状数组，每次操作后按位求出区间内的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> 的奇偶性即可。</p>
<p>code</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> ll = <span class="type">long</span> <span class="type">long</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> mod[<span class="number">24</span>] = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">4</span>,<span class="number">8</span>,<span class="number">1</span>&lt;&lt;<span class="number">4</span>,<span class="number">1</span>&lt;&lt;<span class="number">5</span>,<span class="number">1</span>&lt;&lt;<span class="number">6</span>,<span class="number">1</span>&lt;&lt;<span class="number">7</span>,<span class="number">1</span>&lt;&lt;<span class="number">8</span>,<span class="number">1</span>&lt;&lt;<span class="number">9</span>,<span class="number">1</span>&lt;&lt;<span class="number">10</span>,<span class="number">1</span>&lt;&lt;<span class="number">11</span>,<span class="number">1</span>&lt;&lt;<span class="number">12</span>,<span class="number">1</span>&lt;&lt;<span class="number">13</span>,<span class="number">1</span>&lt;&lt;<span class="number">14</span>,<span class="number">1</span>&lt;&lt;<span class="number">15</span>,<span class="number">1</span>&lt;&lt;<span class="number">16</span>,<span class="number">1</span>&lt;&lt;<span class="number">17</span>,<span class="number">1</span>&lt;&lt;<span class="number">18</span>,<span class="number">1</span>&lt;&lt;<span class="number">19</span>,<span class="number">1</span>&lt;&lt;<span class="number">20</span>,<span class="number">1</span>&lt;&lt;<span class="number">21</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//const ll mod = 1e9 + 7;</span></span><br><span class="line"><span class="comment">// #define int long long</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">bit</span> &#123;</span><br><span class="line">   <span class="keyword">public</span>:</span><br><span class="line">    <span class="type">int</span> a[<span class="number">1</span>&lt;&lt;<span class="number">22</span>];</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="built_in">bit</span>(<span class="type">int</span> n) : <span class="built_in">n</span>(n + <span class="number">4</span>) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt;= n;i++)a[i] = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">bit</span>() &#123; n = <span class="number">0</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span> </span>&#123;</span><br><span class="line">        x++;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = x; i &lt;= n; i += i &amp; -i) &#123;</span><br><span class="line">            a[i] += y;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">get</span><span class="params">(<span class="type">int</span> x)</span> </span>&#123;</span><br><span class="line">        x++;</span><br><span class="line">        <span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(x &lt;= <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = x; i; i -= i &amp; -i) &#123;</span><br><span class="line">            res += a[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">get</span><span class="params">(<span class="type">int</span> l, <span class="type">int</span> r)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// l++,r++;</span></span><br><span class="line">        l = std::<span class="built_in">max</span>(l,<span class="number">0</span>);</span><br><span class="line">        r = std::<span class="built_in">min</span>(n,r);</span><br><span class="line">        <span class="keyword">if</span>(l == <span class="number">0</span>) <span class="keyword">return</span> <span class="built_in">get</span>(r);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">get</span>(r) - <span class="built_in">get</span>(l - <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">read</span><span class="params">(<span class="type">int</span> &amp;x)</span> </span>&#123;</span><br><span class="line">    x = <span class="number">0</span>;</span><br><span class="line">    <span class="type">char</span> c = <span class="built_in">getchar</span>();</span><br><span class="line">    <span class="keyword">while</span> (!<span class="built_in">isdigit</span>(c)) c = <span class="built_in">getchar</span>();</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">isdigit</span>(c)) x = x * <span class="number">10</span> + c - <span class="string">&#x27;0&#x27;</span>, c = <span class="built_in">getchar</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> sum[<span class="number">500050</span>];</span><br><span class="line"><span class="type">int</span> idx;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="function">std::vector&lt;bit&gt; <span class="title">a</span><span class="params">(<span class="number">21</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">auto</span> add = [&amp;](<span class="type">int</span> x) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">21</span>; i++)&#123;</span><br><span class="line">            <span class="type">int</span> tp = x % mod[i + <span class="number">1</span>];</span><br><span class="line">            <span class="comment">//std::cerr&lt;&lt;tp&lt;&lt;&#x27; &#x27;&lt;&lt;x&lt;&lt;&#x27;\n&#x27;;</span></span><br><span class="line">            a[i].<span class="built_in">add</span>(tp, <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">auto</span> rm = [&amp;](<span class="type">int</span> x) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">21</span>; i++)&#123;</span><br><span class="line">            <span class="type">int</span> tp = x % mod[i + <span class="number">1</span>];</span><br><span class="line">            a[i].<span class="built_in">add</span>(tp, <span class="number">-1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">21</span>; i++) &#123;</span><br><span class="line">        a[i] = <span class="built_in">bit</span>(<span class="number">1</span> &lt;&lt; (i + <span class="number">1</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">add</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> q;</span><br><span class="line">    <span class="built_in">read</span>(q);</span><br><span class="line">    <span class="comment">//std::stack&lt;int&gt; sum;</span></span><br><span class="line">    <span class="keyword">while</span> (q--) &#123;</span><br><span class="line">        <span class="type">int</span> t, x;</span><br><span class="line">        <span class="built_in">read</span>(t), <span class="built_in">read</span>(x);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= t; i++)</span><br><span class="line">            <span class="built_in">rm</span>(sum[idx]), idx--;</span><br><span class="line">        <span class="keyword">if</span> (idx == <span class="number">0</span>)</span><br><span class="line">            sum[idx + <span class="number">1</span>] = x;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            sum[idx + <span class="number">1</span>] = x + sum[idx];</span><br><span class="line">        idx++;</span><br><span class="line">        <span class="comment">// std::cerr&lt;&lt;sum.back()&lt;&lt;&#x27;\n&#x27;;0</span></span><br><span class="line">        <span class="built_in">add</span>(sum[idx]);</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">21</span>; i++) &#123;</span><br><span class="line">            <span class="type">int</span> l = <span class="number">0</span>, r = <span class="number">0</span>;</span><br><span class="line">            <span class="type">int</span> l1 = <span class="number">0</span>, r1 = <span class="number">0</span>;</span><br><span class="line">            <span class="type">int</span> tp = (sum[idx] + <span class="number">1</span>) % mod[i + <span class="number">1</span>];</span><br><span class="line">            <span class="comment">//if(tp == 0)tp = (1ll &lt;&lt; (i + 1));</span></span><br><span class="line">            <span class="type">int</span> tp1 = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">if</span> (tp &lt; (<span class="number">1ll</span> &lt;&lt; i)) &#123;</span><br><span class="line">                l = tp, r = (<span class="number">1</span> &lt;&lt; i) + tp - <span class="number">1</span>;</span><br><span class="line">                <span class="comment">//std::cerr&lt;&lt;l&lt;&lt;&#x27; &#x27;&lt;&lt;r&lt;&lt;&#x27;\n&#x27;;</span></span><br><span class="line">                tp1 = a[i].<span class="built_in">get</span>(l, r);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                l = <span class="number">0</span>, r = tp - (<span class="number">1</span>&lt;&lt;i) - <span class="number">1</span>, l1 = tp, r1 = (<span class="number">1</span> &lt;&lt; i + <span class="number">1</span>) - <span class="number">1</span>;</span><br><span class="line">                <span class="comment">//std::cerr&lt;&lt;l&lt;&lt;&#x27; &#x27;&lt;&lt;r&lt;&lt;&#x27; &#x27;&lt;&lt;l1&lt;&lt;&#x27; &#x27;&lt;&lt;r1&lt;&lt;&#x27;\n&#x27;;</span></span><br><span class="line">                tp1 = a[i].<span class="built_in">get</span>(l, r) ^ a[i].<span class="built_in">get</span>(l1, r1);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// r &amp;= (1&lt;&lt;i);</span></span><br><span class="line">            res |= (tp1 &amp; <span class="number">1</span>) * (<span class="number">1ll</span> &lt;&lt; i);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        std::cout &lt;&lt; res &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">        std::cout.<span class="built_in">flush</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">//std::ios::sync_with_stdio(false);</span></span><br><span class="line">    <span class="comment">//std::cin.tie(0);</span></span><br><span class="line">    <span class="type">int</span> t = <span class="number">1</span>;</span><br><span class="line">    <span class="comment">// std::cin &gt;&gt; t;</span></span><br><span class="line">    <span class="keyword">while</span> (t--) &#123;</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">        <span class="comment">// std::cout.flush();</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// std::cout&lt;&lt;5 * inv(2ll) % mod&lt;&lt;&#x27;\n&#x27;;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>ACM</tag>
      </tags>
  </entry>
</search>
